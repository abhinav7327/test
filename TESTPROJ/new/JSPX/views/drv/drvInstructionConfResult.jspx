<!--$Id$-->
<!--$Author$-->
<!--$Date$-->
<jsp:root version="2.0"
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
	xmlns:fn="http://java.sun.com/jsp/jstl/functions" 
	xmlns:spring="http://www.springframework.org/tags" 
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" 
	xmlns:xenos="http://www.nri.co.jp/xenos"
	xmlns:jsp="http://java.sun.com/JSP/Page">
	
	<jsp:directive.page contentType="text/html;charset=UTF-8" /> 
	<jsp:output	omit-xml-declaration="yes" />
	
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
		
            var grid_result_data = [];		
			
            var grid_result_columns = [			
			
				{name:"<spring:message code="drv.label.referenceno" htmlEscape="false"/>", field:"tradeRefNo", id:"tradeRefNo", sortable: true, width:120, formatter:Slick.Formatters.DrvTradeDetailViewFormater},
                {name:"<spring:message code="drv.label.contractreferenceno" htmlEscape="false"/>", field:"contractReferenceNo", id:"contractReferenceNo", sortable: true, width:180,formatter:Slick.Formatters.DrvContractDetailViewFormater},
				{name:"<spring:message code="drv.label.tradedate" htmlEscape="false"/>", field:"tradeDateStr", id:"tradeDateStr", sortable: true, width:100},
                {name:"<spring:message code="drv.label.securitycode" htmlEscape="false"/>", field:"securityCode", id:"securityCode", width:150, sortable: true, formatter:Slick.Formatters.InstrumentDetailViewFormater },
				{name:"<spring:message code="drv.label.securityname" htmlEscape="false"/>", field:"securityShortName", id:"securityShortName", width:200, sortable: true },
                {name:"<spring:message code="drv.label.securitycodecrossref" htmlEscape="false"/>", field:"securityCodeCrossRefDis", id:"securityCodeCrossRefDis", width:150, sortable: true },
                {name:"<spring:message code="ref.common.label.alternatesecurityid" htmlEscape="false"/>", field:"alternateSecCodeDisp", id:"alternateSecCodeDisp", width:200, sortable: true },
                {name:"<spring:message code="drv.instruction.label.underlyingshortname" htmlEscape="false"/>", field:"underlyingShortName", id:"underlyingShortName", width:200, sortable: true },
                {name:"<spring:message code="drv.label.accountno" htmlEscape="false"/>", field:"brokerAccountNo", id:"brokerAccountNo", width:150, sortable: true,formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'brokerAccountPk'} },
                {name:"<spring:message code="drv.label.accountname" htmlEscape="false"/>", field:"brokerAccountName", id:"brokerAccountName", width:200, sortable: true },
                {name:"<spring:message code="drv.label.exebrokeraccountno" htmlEscape="false"/>", field:"executionBrokerAccountNo", id:"executionBrokerAccountNo", width:180, sortable: true, sortable:true,formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'executionBrokerAccountPk'} },
                {name:"<spring:message code="drv.label.exebrokeraccountname" htmlEscape="false"/>", field:"executionBrokerAccountName", id:"executionBrokerAccountName", width:200, sortable: true },
                {name:"<spring:message code="drv.label.fundaccountno" htmlEscape="false"/>", field:"fundAccountNo", id:"fundAccountNo", width:150, sortable: true, formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'fundAccountPk'} },
                {name:"<spring:message code="drv.label.fundaccountname" htmlEscape="false"/>", field:"fundAccountName", id:"fundAccountName", width:180, sortable: true},
				{name:"<spring:message code="drv.label.bankaccountcrossref" htmlEscape="false"/>", field:"bankAccCrossRef", id:"bankAccCrossRef", width:150, sortable: true },
				{name:"<spring:message code="drv.label.fundcode" htmlEscape="false"/>", field:"fundCode", id:"fundCode", width:100, sortable: true,formatter:Slick.Formatters.FundDetailViewFormatter },
				{name:"<spring:message code="drv.label.fundname" htmlEscape="false"/>", field:"fundName", id:"fundName", width:200, sortable: true },
				{name:"<spring:message code="drv.label.opencloseposition" htmlEscape="false"/>", field:"openCloseFlagDisp", id:"openCloseFlagDisp", width:150, sortable: true },
				{name:"<spring:message code="drv.label.status" htmlEscape="false"/>", field:"status", id:"status", width:80, sortable: true, formatter:Slick.Formatters.CancelRecordFormatter },
				{name:"<spring:message code="drv.label.agentbankid" htmlEscape="false"/>", field:"cpBankId", id:"cpBankId", width:100, sortable: true },
				{name:"<spring:message code="drv.label.agentbankidtype" htmlEscape="false"/>", field:"cpBankCodeType", id:"cpBankCodeType", width:150, sortable: true },
				{name:"<spring:message code="drv.label.brokerbic" htmlEscape="false"/>", field:"brokerBic", id:"brokerBic", width:100, sortable: true },
				{name:"<spring:message code="drv.label.quantity" htmlEscape="false"/>", field:"quantityStr", id:"quantityStr", width:100,cssClass: 'xenos-grid-number', sortable: true },
				{name:"<spring:message code="drv.label.price" htmlEscape="false"/>", field:"priceStr", id:"priceStr", width:100,cssClass: 'xenos-grid-number', sortable: true },
				{name:"<spring:message code="drv.label.tradeccy" htmlEscape="false"/>", field:"tradingCurrency", id:"tradingCurrency", width:150, sortable: true },
				{name:"<spring:message code="drv.label.issueccy" htmlEscape="false"/>", field:"issueCurrency", id:"issueCurrency", width:150, sortable: true },
				{name:"<spring:message code="drv.label.marketplace" htmlEscape="false"/>", field:"marketCode", id:"marketCode", width:100, sortable: true },
				{name:"<spring:message code="drv.label.func" htmlEscape="false"/>", field:"func", id:"func", width:100, sortable: true },
				{name:"<spring:message code="drv.label.datasource" htmlEscape="false"/>", field:"dataSource", id:"dataSource", width:100, sortable: true },
				{name:"<spring:message code="drv.label.receiverbic" htmlEscape="false"/>", field:"receiverBic", id:"receiverBic", width:100, sortable: true }				
			];
			
            var grid_result_settings = {
				enableToolbar:false,
				consolidateActionFlag: false,
				
				buttons: {
					
				},
				pagingInfo:{
					
				},
				urls:{
				},
				events:{
					onDataUpdate : function(data,callback){
						for(i in data.value){		
							data.value[i].tradeRefVerNo = tradeRefVerNo(data.value[i].versionNo, data.value[i].tradeRefNo);
							data.value[i].fundAccountNo = data.value[i].fundPrefix+";"+data.value[i].fundAccountNo;
						}
						callback(data);
					}
				}
			};
			
            var xenos$ns$views$drvInstructionConfResult$brokerAccNo = function(cpPrefix, cpAccountNo){
				if($.trim(cpPrefix)==""){
            		return cpAccountNo;
            	}else{
					return cpPrefix+ ';' +cpAccountNo;
				}
			}
			
			var xenos$ns$views$drvInstructionConfResult$executionAccount = function(executionBrokerPrefix, executionBrokerAccountNo){
				if($.trim(executionBrokerPrefix)==""){
            		return executionBrokerAccountNo;
            	}else{
					return executionBrokerPrefix+ ';' +executionBrokerAccountNo;
				}
			}
			
			var xenos$ns$views$drvInstructionConfResult$fundAccNo = function(fundPrefix, fundAccountNo){
				if($.trim(fundPrefix)==""){
            		return fundAccountNo;
            	}else{
					return fundPrefix+ ';' +fundAccountNo;
				}
			}
			
			var xenos$ns$views$drvInstructionConfResult$referenceNoWithVersion = function(tradeRefNo, versionNo){
				if($.trim(versionNo)==""){
            		return tradeRefNo;
            	}else{
					return tradeRefNo+ '-' +versionNo;
				}
			}
			
			<xenos:out escapeXml="false">
				<c:forEach items="${value}" var="dl">
					rec = {};
					row_id+=1;
					rec.id = "xenos_" + row_id;
					
					rec.tradeRefNo = xenos$ns$views$drvInstructionConfResult$referenceNoWithVersion("<c:out value="${dl.tradeRefNo}"/>" , "<c:out value="${dl.versionNo}" />");
					rec.contractReferenceNo = "<c:out value="${dl.contractReferenceNo}" />";
					rec.tradeDateStr = "<c:out value="${dl.tradeDateStr}" />";
					rec.securityCode = "<c:out value="${dl.securityCode}" />";
					rec.securityShortName = "<c:out value="${dl.securityShortName}" />";				
					rec.securityCodeCrossRefDis = "<c:out value="${dl.securityCodeCrossRefDis}" />";
					rec.alternateSecCodeDisp = "<c:out value="${dl.alternateSecCodeDisp}" />";
					rec.underlyingShortName = "<c:out value="${dl.underlyingShortName}" />";
					rec.brokerAccountNo = xenos$ns$views$drvInstructionConfResult$brokerAccNo("<c:out value="${dl.brokerPrefix}" />", "<c:out value="${dl.brokerAccountNo}" />");
					rec.brokerAccountName = "<c:out value="${dl.brokerAccountName}" />";
					rec.executionBrokerAccountNo = xenos$ns$views$drvInstructionConfResult$executionAccount("<c:out value="${dl.executionBrokerPrefix}" />", "<c:out value="${dl.executionBrokerAccountNo}" />");
					rec.executionBrokerAccountName = "<c:out value="${dl.executionBrokerAccountName}" />";				
					rec.fundAccountNo = xenos$ns$views$drvInstructionConfResult$fundAccNo("<c:out value="${dl.fundPrefix}" />" ,"<c:out value="${dl.fundAccountNo}" />")
					rec.fundAccountName = "<c:out value="${dl.fundAccountName}" />";
					rec.bankAccCrossRef = "<c:out value="${dl.bankAccCrossRef}" />";
					rec.fundCode = "<c:out value="${dl.fundCode}" />";
					rec.fundName = "<c:out value="${dl.fundName}" />";
					rec.openCloseFlagDisp = "<c:out value="${dl.openCloseFlagDisp}" />";
					rec.status = "<c:out value="${dl.status}" />";
					rec.cpBankId = "<c:out value="${dl.cpBankId}" />";
					rec.cpBankCodeType = "<c:out value="${dl.cpBankCodeType}" />";
					rec.brokerBic = "<c:out value="${dl.brokerBic}" />";
					rec.quantityStr = "<c:out value="${dl.quantityStr}" />";
					rec.priceStr = "<c:out value="${dl.priceStr}" />";
					rec.tradingCurrency = "<c:out value="${dl.tradingCurrency}" />";
					rec.issueCurrency = "<c:out value="${dl.issueCurrency}" />";
					rec.marketCode = "<c:out value="${dl.marketCode}" />";
					rec.func = "<c:out value="${dl.func}" />";
					rec.dataSource = "<c:out value="${dl.dataSource}" />";
					rec.tradePk = "<c:out value="${dl.drvTradePk}" />";
					rec.receiverBic = "<c:out value="${dl.receiverBic}" />";
					rec.brokerAccountPk = "<c:out value="${dl.brokerAccountPk}" />";
					rec.executionBrokerAccountPk = "<c:out value="${dl.executionBrokerAccountPk}" />";
					rec.fundAccountPk ="<c:out value="${dl.fundAccountPk}" />";
					rec.fundPk ="<c:out value="${dl.fundPk}" />";
					rec.contractPk ="<c:out value="${dl.contractPk}" />";
					rec.instrumentPk ="<c:out value="${dl.instrumentPk}" />";
					rec.instructionType = "<c:out value="${dl.instructionType}" />";
					grid_result_data.push(rec);
				</c:forEach>
			</xenos:out>
			
        </jsp:body>
    </jsp:element>
	
</jsp:root>