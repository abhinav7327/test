<!--$Id$-->
<!--$Author: deepikas $-->
<!--$Date: 2016-12-26 17:09:35 $-->
<jsp:root version="2.0"
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
	xmlns:fn="http://java.sun.com/jsp/jstl/functions" 
	xmlns:spring="http://www.springframework.org/tags" 
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" 
	xmlns:xenos="http://www.nri.co.jp/xenos"
	xmlns:jsp="http://java.sun.com/JSP/Page">
	
	<jsp:directive.page contentType="text/html;charset=UTF-8" /> 
	<jsp:output	omit-xml-declaration="yes" />
	
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
            var isNext = <c:out value="${isNext}" />;
			var isPrevious = <c:out value="${isPrevious}" />;
            var pageNo = <c:out value="${pageNo}" />;
            var grid_result_data = [];
			
			<c:set var="operationObjective" value="${commandForm.operationObjective}" />			
			
            var grid_result_columns = [
			
				<c:if test="${operationObjective == 'QUERY'}">
					{name:"<spring:message code="drv.inst.label.transtmitdaytime" htmlEscape="false"/>", field:"markedTag", id:"markedTag", width:180, sortable: true },
					{name:"<spring:message code="drv.inst.label.inxrefno" htmlEscape="false"/>", field:"instructionRefNo", id:"instructionRefNo", width:170, formatter:Slick.Formatters.DrvInstructionRawFileViewFormater, sortable: true },
					{name:"<spring:message code="drv.inst.label.transmission" htmlEscape="false"/>", field:"transmissionStatus", id:"transmissionStatus", sortable: true, width:100},
					{name:"<spring:message code="drv.inst.label.ackstatus" htmlEscape="false"/>", field:"ackStatus", id:"ackStatus", sortable: true, width:100},
				</c:if>
				
				{name:"<spring:message code="drv.label.referenceno" htmlEscape="false"/>", field:"tradeRefNo", id:"tradeRefNo", sortable: true, width:120, formatter:Slick.Formatters.DrvTradeDetailViewFormater},
                {name:"<spring:message code="drv.label.contractreferenceno" htmlEscape="false"/>", field:"contractReferenceNo", id:"contractReferenceNo", sortable: true, width:180,formatter:Slick.Formatters.DrvContractDetailViewFormater},
				{name:"<spring:message code="drv.label.tradedate" htmlEscape="false"/>", field:"tradeDateStr", id:"tradeDateStr", sortable: true, width:100},
                {name:"<spring:message code="drv.label.securitycode" htmlEscape="false"/>", field:"securityCode", id:"securityCode", width:150, sortable: true, formatter:Slick.Formatters.InstrumentDetailViewFormater },
				{name:"<spring:message code="drv.label.securityname" htmlEscape="false"/>", field:"securityShortName", id:"securityShortName", width:200, sortable: true },
                {name:"<spring:message code="drv.label.securitycodecrossref" htmlEscape="false"/>", field:"securityCodeCrossRefDis", id:"securityCodeCrossRefDis", width:150, sortable: true },
                {name:"<spring:message code="ref.common.label.alternatesecurityid" htmlEscape="false"/>", field:"alternateSecCodeDisp", id:"alternateSecCodeDisp", width:200, sortable: true },
                {name:"<spring:message code="drv.instruction.label.underlyingshortname" htmlEscape="false"/>", field:"underlyingShortName", id:"underlyingShortName", width:200, sortable: true },
                {name:"<spring:message code="drv.label.accountno" htmlEscape="false"/>", field:"brokerAccountNo", id:"brokerAccountNo", width:150, sortable: true,formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'brokerAccountPk'} },
                {name:"<spring:message code="drv.label.accountname" htmlEscape="false"/>", field:"brokerAccountName", id:"brokerAccountName", width:200, sortable: true },
                {name:"<spring:message code="drv.label.exebrokeraccountno" htmlEscape="false"/>", field:"executionBrokerAccountNo", id:"executionBrokerAccountNo", width:150, sortable: true, sortable:true,formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'executionBrokerAccountPk'} },
                {name:"<spring:message code="drv.label.exebrokeraccountname" htmlEscape="false"/>", field:"executionBrokerAccountName", id:"executionBrokerAccountName", width:200, sortable: true },
                {name:"<spring:message code="drv.label.fundaccountno" htmlEscape="false"/>", field:"fundAccountNo", id:"fundAccountNo", width:150, sortable: true, formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'fundAccountPk'} },
                {name:"<spring:message code="drv.label.fundaccountname" htmlEscape="false"/>", field:"fundAccountName", id:"fundAccountName", width:180, sortable: true},
				{name:"<spring:message code="drv.label.bankaccountcrossref" htmlEscape="false"/>", field:"bankAccCrossRef", id:"bankAccCrossRef", width:150, sortable: true },
				{name:"<spring:message code="drv.label.fundcode" htmlEscape="false"/>", field:"fundCode", id:"fundCode", width:100, sortable: true,formatter:Slick.Formatters.FundDetailViewFormatter },
				{name:"<spring:message code="drv.label.fundname" htmlEscape="false"/>", field:"fundName", id:"fundName", width:200, sortable: true },
				{name:"<spring:message code="drv.label.opencloseposition" htmlEscape="false"/>", field:"openCloseFlagDisp", id:"openCloseFlagDisp", width:150, sortable: true },
				{name:"<spring:message code="drv.label.status" htmlEscape="false"/>", field:"drvStatus", id:"drvStatus", width:80, sortable: true, formatter:Slick.Formatters.CancelRecordFormatter },
				{name:"<spring:message code="drv.label.agentbankid" htmlEscape="false"/>", field:"cpBankId", id:"cpBankId", width:100, sortable: true },
				{name:"<spring:message code="drv.label.agentbankidtype" htmlEscape="false"/>", field:"cpBankCodeType", id:"cpBankCodeType", width:150, sortable: true },
				{name:"<spring:message code="drv.label.brokerbic" htmlEscape="false"/>", field:"brokerBic", id:"brokerBic", width:100, sortable: true },
				{name:"<spring:message code="drv.label.quantity" htmlEscape="false"/>", field:"quantityStr", id:"quantityStr", width:100,cssClass: 'xenos-grid-number', sortable: true },
				{name:"<spring:message code="drv.label.price" htmlEscape="false"/>", field:"priceStr", id:"priceStr", width:100,cssClass: 'xenos-grid-number', sortable: true },
				{name:"<spring:message code="drv.label.tradeccy" htmlEscape="false"/>", field:"tradingCurrency", id:"tradingCurrency", width:150, sortable: true },
				{name:"<spring:message code="drv.label.issueccy" htmlEscape="false"/>", field:"issueCurrency", id:"issueCurrency", width:150, sortable: true },
				{name:"<spring:message code="drv.label.marketplace" htmlEscape="false"/>", field:"marketCode", id:"marketCode", width:100, sortable: true },
				{name:"<spring:message code="drv.label.func" htmlEscape="false"/>", field:"func", id:"func", width:100, sortable: true },
				{name:"<spring:message code="drv.label.datasource" htmlEscape="false"/>", field:"dataSource", id:"dataSource", width:100, sortable: true },
				{name:"<spring:message code="drv.label.receiverbic" htmlEscape="false"/>", field:"receiverBic", id:"receiverBic", width:100, sortable: true }			
				
			];
			
			var xenos$ns$views$drvInstructionQueryResult$selectRowColor = function(row){
				if( $.trim(row.instructionRefNo)){
					if(row.ackStatus=="OK" || row.actualTrx!="Y") {
	           			return "#33CC99";
	       			}else{
	       				return  "#F97777";
	       			}
				}else{
	   				return  "#F97777";
	   			}
			}
			
			var xenos$ns$views$drvInstructionQueryResult$selectColor = function(row) {
            	if(row.operationObjective == "SEND_NEW"){
            		if(row.cyan=="true") {
						return "#00FFFF" ;
	            	}
					if(row.pink=="true"){
						return "#FFCCFF";
					}
					if(row.yellow=="true") {
						return "#FFFF00";
					}
					if(row.blue1=="true") {
						return "#9966FF";
					}
					if(row.blue2=="true") {
						return "#9966FF";
					}
					if(row.blue3=="true") {
						return "#9966FF";
					}
            	}
            	
				return ''; 
			}
			
			var xenos$ns$views$drvInstructionQueryResult$enableValidRecords = function(row) {				
				
					
					if(!(row.operationObjective == "MARK_AS_TRANSMITTED" || 
					(row.operationObjective == "SEND_NEW" &amp;&amp; !(row.cyan=="true" || 	
																				row.pink=="true" ||  
																				row.yellow=="true" || 
																				row.blue1=="true" ||
																				row.blue2=="true" ||
																				row.blue3=="true")))) {
						return false;
					}
				
				
				
			}
			
            var grid_result_settings = {
				enableToolbar:true,
				
				<c:if test="${commandForm.operationObjective != 'QUERY'}">
					consolidateActionFlag: true,
					consolidateAttribute: {type:'check'},
				</c:if>
				
				buttons: {
					print:true,	
					xls:true,	
					pdf:true,
					columnPicker:true,	
					xlsPref:true,	
					save:true	
				},
				pagingInfo:{
					isNext : isNext,
					isPrevious : isPrevious,
                    pageNo : pageNo,
					url: '/secure/drv/drvinstruction/query/count.json'
				},
				resolveBgColor : function(row){		
					
					if(row.operationObjective == 'QUERY'){
					
					//During pagination 'status' id is used at framework level for Preference color which overrides page level color
					//so to over come this problem, drvstatus is used instead of status and status is set as null.
						if(row.status){
							row.status = '';
						}
						return xenos$ns$views$drvInstructionQueryResult$selectRowColor(row);
					}else if(row.operationObjective == 'SEND_NEW'){
						return xenos$ns$views$drvInstructionQueryResult$selectColor(row);
					}
					return '';
				},
				urls:{
					nextPage : '/secure/drv/drvinstruction/query/result.json?fetch=next',
					prevPage : '/secure/drv/drvinstruction/query/result.json?fetch=previous',
					pdfReport: '/secure/drv/drvinstruction/query/report.json?outputType=pdf',
					xlsReport: '/secure/drv/drvinstruction/query/report.json?outputType=xls',
					xlsCurrent: '/secure/drv/drvinstruction/query/reportPref.json?outputType=xls'
				},
				consolidationActionCallback: function(rec) {
					return xenos$ns$views$drvInstructionQueryResult$enableValidRecords(rec);
                },
				events:{
					
					onDataUpdate : function(data,callback){
						for(i in data.value){		
							data.value[i].tradeRefNo = xenos$ns$views$drvInstructionQueryResult$referenceNoWithVersion(data.value[i].tradeRefNo ,data.value[i].versionNo);
							data.value[i].fundAccountNo = xenos$ns$views$drvInstructionQueryResult$fundAccNo(data.value[i].fundPrefix ,data.value[i].fundAccountNo);
							data.value[i].brokerAccountNo   = xenos$ns$views$drvInstructionQueryResult$brokerAccNo(data.value[i].brokerPrefix, data.value[i].brokerAccountNo);
							data.value[i].executionBrokerAccountNo   = xenos$ns$views$drvInstructionQueryResult$executionAccount(data.value[i].executionBrokerPrefix, data.value[i].executionBrokerAccountNo);
							data.value[i].markedTag =     xenos$ns$views$drvInstructionQueryResult$markedTag(data.value[i]);
							
							//During pagination 'status' id is used at framework level for Preference color which overrides page level color
							//so to over come this problem, drvstatus is used instead of status and status is set as null.
							if(data.value[i].operationObjective == 'QUERY'){
								data.value[i].status = '';
							}
						}
						callback(data);
					}
				},
				afterRenderComplete : function(grid, $context){
				
					<c:if test="${operationObjective != 'QUERY'}">
						$('.xenos-grid-pager', '.formContent').find('.right').children().first().prepend('<div class="left marginRight bgColorInfoIcon" title="Help"></div>');
					
					$('.bgColorInfoIcon').on('click',function(e){
						$('#bgColorInfo').dialog({
							title: 'Background Color info for pending records',
							closeOnEscape: false,
							draggable: true,
							resizable:false,
							show: 'fade',
							hide: 'fade',
							width: '450',
							height: '190',
							modal:false
						});
					});
					</c:if>					
				},
				
				defaultInvisibleColumns: ["alternateSecCodeDisp", "underlyingShortName", "brokerAccountName", "executionBrokerAccountName", "fundAccountName", "cpBankCodeType", "tradingCurrency", "issueCurrency","func"]
				
				
			};
            var row_id = 0;
            var rec = {};
			
			var xenos$ns$views$drvInstructionQueryResult$markedTag = function(rec){
				if($.trim(rec.instructionRefNo)!=""){
					if(rec.actualTrx=="Y"){
						return $.trim(rec.transmissionDateStr);
					}else{
						return '(Marked)';
					}
				}else{
					return "";
				}
			}
			
			var xenos$ns$views$drvInstructionQueryResult$brokerAccNo = function(cpPrefix, cpAccountNo){
				if($.trim(cpPrefix)==""){
            		return cpAccountNo;
            	}else{
					return cpPrefix+ ';' +cpAccountNo;
				}
			}
			
			var xenos$ns$views$drvInstructionQueryResult$executionAccount = function(executionBrokerPrefix, executionBrokerAccountNo){
				if($.trim(executionBrokerPrefix)==""){
            		return executionBrokerAccountNo;
            	}else{
					return executionBrokerPrefix+ ';' +executionBrokerAccountNo;
				}
			}
			
			var xenos$ns$views$drvInstructionQueryResult$fundAccNo = function(fundPrefix, fundAccountNo){
				if($.trim(fundPrefix)==""){
            		return fundAccountNo;
            	}else{
					return fundPrefix+ ';' +fundAccountNo;
				}
			}
			
			var xenos$ns$views$drvInstructionQueryResult$referenceNoWithVersion = function(tradeRefNo, versionNo){
				if($.trim(versionNo)==""){
            		return tradeRefNo;
            	}else{
					return tradeRefNo+ '-' +versionNo;
				}
			}
            
			
			<xenos:out escapeXml="false">
				<c:forEach items="${value}" var="dl">
					rec = {};
					row_id+=1;
					rec.id = "xenos_" + row_id;
					
					rec.operationObjective = "<c:out value="${dl.operationObjective}" />";
					rec.cyan = "<c:out value="${dl.cyan}" />";
					rec.blue1 = "<c:out value="${dl.blue1}" />";
					rec.blue2 = "<c:out value="${dl.blue2}" />";
					rec.blue3 = "<c:out value="${dl.blue3}" />";
					rec.pink = "<c:out value="${dl.pink}" />";
					rec.yellow = "<c:out value="${dl.yellow}" />";
					
					
					rec.transmissionDateStr = "<c:out value="${dl.transmissionDateStr}" />";
					rec.instructionRefNo = "<c:out value="${dl.instructionRefNo}" />";
					rec.transmissionStatus = "<c:out value="${dl.transmissionStatus}" />";
					rec.ackStatus = "<c:out value="${dl.ackStatus}" />";
					rec.actualTrx = "<c:out value="${dl.actualTrx}" />";
					rec.tradeRefNo = xenos$ns$views$drvInstructionQueryResult$referenceNoWithVersion("<c:out value="${dl.tradeRefNo}"/>" , "<c:out value="${dl.versionNo}" />");
					rec.contractReferenceNo = "<c:out value="${dl.contractReferenceNo}" />";
					rec.tradeDateStr = "<c:out value="${dl.tradeDateStr}" />";
					rec.securityCode = "<c:out value="${dl.securityCode}" />";
					rec.securityShortName = "<c:out value="${dl.securityShortName}" />";				
					rec.securityCodeCrossRefDis = "<c:out value="${dl.securityCodeCrossRefDis}" />";
					rec.alternateSecCodeDisp = "<c:out value="${dl.alternateSecCodeDisp}" />";
					rec.underlyingShortName = "<c:out value="${dl.underlyingShortName}" />";
					rec.brokerAccountNo = xenos$ns$views$drvInstructionQueryResult$brokerAccNo("<c:out value="${dl.brokerPrefix}" />", "<c:out value="${dl.brokerAccountNo}" />");
					rec.brokerAccountName = "<c:out value="${dl.brokerAccountName}" />";
					rec.executionBrokerAccountNo = xenos$ns$views$drvInstructionQueryResult$executionAccount("<c:out value="${dl.executionBrokerPrefix}" />", "<c:out value="${dl.executionBrokerAccountNo}" />");
					rec.executionBrokerAccountName = "<c:out value="${dl.executionBrokerAccountName}" />";				
					rec.fundAccountNo = xenos$ns$views$drvInstructionQueryResult$fundAccNo("<c:out value="${dl.fundPrefix}" />" ,"<c:out value="${dl.fundAccountNo}" />")
					rec.fundAccountName = "<c:out value="${dl.fundAccountName}" />";
					rec.bankAccCrossRef = "<c:out value="${dl.bankAccCrossRef}" />";
					rec.fundCode = "<c:out value="${dl.fundCode}" />";
					rec.fundName = "<c:out value="${dl.fundName}" />";
					rec.openCloseFlagDisp = "<c:out value="${dl.openCloseFlagDisp}" />";
					rec.drvStatus = "<c:out value="${dl.drvStatus}" />";
					rec.cpBankId = "<c:out value="${dl.cpBankId}" />";
					rec.cpBankCodeType = "<c:out value="${dl.cpBankCodeType}" />";
					rec.brokerBic = "<c:out value="${dl.brokerBic}" />";
					rec.quantityStr = "<c:out value="${dl.quantityStr}" />";
					rec.priceStr = "<c:out value="${dl.priceStr}" />";
					rec.tradingCurrency = "<c:out value="${dl.tradingCurrency}" />";
					rec.issueCurrency = "<c:out value="${dl.issueCurrency}" />";
					rec.marketCode = "<c:out value="${dl.marketCode}" />";
					rec.func = "<c:out value="${dl.func}" />";
					rec.dataSource = "<c:out value="${dl.dataSource}" />";
					rec.tradePk = "<c:out value="${dl.drvTradePk}" />";
					rec.receiverBic = "<c:out value="${dl.receiverBic}" />";
					rec.brokerAccountPk = "<c:out value="${dl.brokerAccountPk}" />";
					rec.executionBrokerAccountPk = "<c:out value="${dl.executionBrokerAccountPk}" />";
					rec.fundAccountPk ="<c:out value="${dl.fundAccountPk}" />";
					rec.fundPk ="<c:out value="${dl.fundPk}" />";
					rec.contractPk ="<c:out value="${dl.contractPk}" />";
					rec.instrumentPk ="<c:out value="${dl.instrumentPk}" />";
					rec.instructionType = "<c:out value="${dl.instructionType}" />";
					rec.markedTag = xenos$ns$views$drvInstructionQueryResult$markedTag(rec);
					grid_result_data.push(rec);
				</c:forEach>
			</xenos:out>
			
        </jsp:body>
    </jsp:element>

</jsp:root>