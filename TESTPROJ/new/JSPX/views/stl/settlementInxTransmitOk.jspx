<jsp:root version="2.0"
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
	xmlns:fn="http://java.sun.com/jsp/jstl/functions" 
	xmlns:spring="http://www.springframework.org/tags" 
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" 
	xmlns:xenos="http://www.nri.co.jp/xenos"
	xmlns:jsp="http://java.sun.com/JSP/Page">
	
	<jsp:directive.page contentType="text/html;charset=UTF-8" /> 
	<jsp:output	omit-xml-declaration="yes" />
	
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
            var grid_result_data = [];		
			
            var grid_result_columns = [			
			
				{name:"<spring:message code="stl.label.inx.stlrefnoversion" htmlEscape="false"/>", field:"referenceNo", id:"referenceNo", width:170, sortable: false,formatter:Slick.Formatters.SettlementDetailViewInstructionFormater},
				{name:"<spring:message code="stl.label.inx.valuedate" htmlEscape="false"/>", field:"valueDateStr", id:"valueDateStr", sortable: false, width:150},
				{name:"<spring:message code="stl.label.inx.firmac" htmlEscape="false"/>", field:"firmBrokerCode", id:"firmBrokerCode", width:220, sortable: false },	
				{name:"<spring:message code="stl.label.inx.seccode" htmlEscape="false"/>", field:"instrumentCode", id:"instrumentCode", width:140, sortable: false },
                {name:"<spring:message code="stl.label.ccy" htmlEscape="false"/>", field:"ccyCode", id:"ccyCode", width:150, sortable: false },				
				{name:"<spring:message code="stl.label.inx.inxrefno" htmlEscape="false"/>", field:"instructionRefNo", id:"instructionRefNo", sortable: false, width:150},
				{name:"<spring:message code="stl.label.amount" htmlEscape="false"/>", field:"instructionAmountStr", id:"instructionAmountStr", width:120, sortable: false },				
				{name:"<spring:message code="stl.label.inx.delrec" htmlEscape="false"/>", field:"deliverReceiveDisplay", id:"deliverReceiveDisplay", width:180, sortable: false },			
			];
			
            var grid_result_settings = {
				enableToolbar:false,
				consolidateActionFlag: false,	
				buttons: {
					
				},
				pagingInfo:{
					
				},
				urls:{
				},				
			};
			
            var row_id = 0;
            var rec = {};
            
            var firmBrokerCode = function(brokerCode,displayAccountNo){
				if($.trim(brokerCode)==""){
            		return displayAccountNo + '()';
            	}else{
					return displayAccountNo + '(' + brokerCode + ')';
				}
			}
		
			<xenos:out escapeXml="false">
				<c:forEach items="${value}" var="dl">
					rec = {};
					row_id+=1;
					rec.id = "xenos_" + row_id;					
					
					rec.referenceNo = "<c:out value="${dl.settlementReferenceNo}" />" + "-" + "<c:out value="${dl.versionNo}" />";
					rec.settlementInfoPk        =   "<c:out value="${dl.settlementInfoPk}" />";
					rec.valueDateStr = "<c:out value="${dl.valueDateStr}" />";
					rec.deliverReceiveDisplay = "<c:out value="${dl.deliverReceiveDisplay}" />";
					rec.instrumentCode = "<c:out value="${dl.instrumentCode}" />";
					rec.ccyCode = "<c:out value="${dl.ccyCode}" />";
					rec.instructionAmountStr = "<c:out value="${dl.instructionAmountStr}" />";
					rec.firmBrokerCode = firmBrokerCode("<c:out value="${dl.brokerCode}" />", "<c:out value="${dl.displayAccountNo}" />");
					rec.instructionRefNo = "<c:out value="${dl.instructionRefNo}" />";
					
					grid_result_data.push(rec);
				</c:forEach>
			</xenos:out>
			
			var grid_result_data_intruction_trx_report = [];		
			
            var grid_result_columns_intruction_trx_report = [			
			
				{name:"Report Ref. No", field:"reportReferenceNo", id:"reportReferenceNo", width:170, sortable: false},
				{name:"Fund Account", field:"fundAccountPk", id:"fundAccountPk", sortable: false, width:150},
				{name:"Download Report", field:"firmBrokerCode", id:"firmBrokerCode", width:120, sortable: false },			
			];
			
            var grid_result_settings_intruction_trx_report = {
				enableToolbar:false,
				consolidateActionFlag: false,	
				buttons: {
					
				},
				pagingInfo:{
					
				},
				urls:{
				},				
			};
			
            var row_id = 0;
            var rec = {};
            
            var firmBrokerCode = function(brokerCode,displayAccountNo){
				if($.trim(brokerCode)==""){
            		return displayAccountNo + '()';
            	}else{
					return displayAccountNo + '(' + brokerCode + ')';
				}
			}
		
			<xenos:out escapeXml="false">
				<c:forEach items="${inxReport}" var="dl">
					rec = {};
					row_id+=1;
					rec.id = "xenos_" + row_id;					
					
					rec.reportReferenceNo = "<c:out value="${dl.reportReferenceNo}" />" + "-" + "<c:out value="${dl.versionNo}" />";
					rec.valueDateStr = "<c:out value="${dl.valueDateStr}" />";
					rec.deliverReceiveDisplay = "<c:out value="${dl.deliverReceiveDisplay}" />";
					rec.instrumentCode = "<c:out value="${dl.instrumentCode}" />";
					rec.ccyCode = "<c:out value="${dl.ccyCode}" />";
					rec.instructionAmountStr = "<c:out value="${dl.instructionAmountStr}" />";
					rec.firmBrokerCode = firmBrokerCode("<c:out value="${dl.brokerCode}" />", "<c:out value="${dl.displayAccountNo}" />");
					rec.instructionRefNo = "<c:out value="${dl.instructionRefNo}" />";
					
					grid_result_data_intruction_trx_report.push(rec);
				</c:forEach>
			</xenos:out>
			
        </jsp:body>
    </jsp:element>
	<div class="resultGrid2Header">
	<div style="margin:0px;" class="detailBlock" id="grid-header"><h1>Instruction-Transaction Report</h1></div>
	</div>
	<div class="formItemArea queryResultformborder  paddingFour">
	  <div id="grid-header" class="detailBlock paddingFour queryDetailBlck" style="display:none;"><spring:message text="" htmlEscape="false"/></div>
	  <div class="xenos-grid2" style="width:825px;height:550px;display:none;">
		<spring:message text="" htmlEscape="false"/>
	  </div>
	</div>	
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
		var container = $("#content");
		var gridHeight = Math.ceil(($(container).height()-$('.resultGridHeader',container).height())/2) - 80;		
		var settlementInxTransmitOk$timer = setInterval(function(){
			var grid = $('.xenos-grid').data("gridInstance");
			if(typeof(grid) != "undefined"){
				$('#queryResultForm .xenos-grid2',container).xenosgrid(grid_result_data_intruction_trx_report, grid_result_columns_intruction_trx_report, grid_result_settings_intruction_trx_report);
				$('#queryResultForm .xenos-grid2',container).height(gridHeight);
				
				$('#queryResultForm .xenos-grid',container).xenosgrid(grid_result_data, grid_result_columns, grid_result_settings);
				$('#queryResultForm .xenos-grid',container).height(gridHeight);
				
				clearInterval(settlementInxTransmitOk$timer);
				$('#queryResultForm .xenos-grid2',container).css({'margin': '0 auto 10px'});
				$('#queryResultForm .xenos-grid2',container).css({'width': '99%'});
			}
		},100);

			
        </jsp:body>
    </jsp:element>	
</jsp:root>