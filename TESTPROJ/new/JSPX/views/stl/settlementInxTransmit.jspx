<!--$Id$-->
<!--$Author$-->
<!--$Date$-->
<jsp:root version="2.0"
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
	xmlns:fn="http://java.sun.com/jsp/jstl/functions" 
	xmlns:spring="http://www.springframework.org/tags" 
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" 
	xmlns:xenos="http://www.nri.co.jp/xenos"
	xmlns:jsp="http://java.sun.com/JSP/Page">
	
	<jsp:directive.page contentType="text/html;charset=UTF-8" /> 
	<jsp:output	omit-xml-declaration="yes" />
	
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
		
            var grid_result_data = [];		
			
            var grid_result_columns = [			
			
				{name:"<spring:message code="stl.label.inx.stlrefnoversion" htmlEscape="false"/>", field:"referenceNo", id:"referenceNo", width:170, sortable: false},
				{name:"<spring:message code="stl.label.inx.valuedate" htmlEscape="false"/>", field:"valueDateStr", id:"valueDateStr", sortable: false, width:150},
				{name:"<spring:message code="stl.label.counterpartyac" htmlEscape="false"/>", field:"cpTradingAccount", id:"cpTradingAccount", sortable: false, width:150},
				{name:"<spring:message code="stl.label.inx.localac" htmlEscape="false"/>", field:"localAccountNo", id:"localAccountNo", sortable: false, width:150},
				{name:"<spring:message code="stl.label.fundaccountno" htmlEscape="false"/>", field:"fundAccountNo", id:"fundAccountNo", sortable: false, width:150},
				{name:"<spring:message code="stl.label.inx.delrec" htmlEscape="false"/>", field:"deliverReceiveDisplay", id:"deliverReceiveDisplay", width:80, sortable: false },
				{name:"<spring:message code="stl.label.securitycode" htmlEscape="false"/>", field:"instrumentCode", id:"instrumentCode", width:80, sortable: false },
				{name:"<spring:message code="stl.label.securityname" htmlEscape="false"/>", field:"securityShortName", id:"securityShortName", width:80, sortable: false },
                {name:"<spring:message code="stl.label.inx.altsec" htmlEscape="false"/>", field:"altSecurityCode", id:"altSecurityCode", width:150, cssClass: 'xenos-grid-number', sortable: false },
                {name:"<spring:message code="stl.label.quantity" htmlEscape="false"/>", field:"instructionQuantityStr", id:"instructionQuantityStr", width:80, sortable: false },
                {name:"<spring:message code="stl.label.ccy" htmlEscape="false"/>", field:"ccyCode", id:"ccyCode", width:150, sortable: false },
				{name:"<spring:message code="stl.label.amount" htmlEscape="false"/>", field:"instructionAmountStr", id:"instructionAmountStr", width:120, sortable: false },
				{name:"<spring:message code="stl.label.inx.brokerbank" htmlEscape="false"/>", field:"cpBankDisplay", id:"cpBankDisplay", width:120, sortable: false },
				{name:"<spring:message code="stl.label.psetcode" htmlEscape="false"/>", field:"psetDisplay", id:"psetDisplay", width:120, sortable: false },
				{name:"<spring:message code="stl.label.inx.receiverbic" htmlEscape="false"/>", field:"firmBank", id:"firmBank", width:120, sortable: false },
				{name:"<spring:message code="stl.label.inx.firmac" htmlEscape="false"/>", field:"firmBrokerCode", id:"firmBrokerCode", width:120, sortable: false },
				{name:"<spring:message code="stl.label.inx.transmissionstatus" htmlEscape="false"/>", field:"trxStatus", id:"trxStatus", width:120, sortable: false },
				{name:"<spring:message code="stl.label.inx.ackstatus" htmlEscape="false"/>", field:"ackstatus", id:"ackstatus", width:100, sortable: false },				
				{name:"<spring:message code="stl.label.inx.cxlackstatus" htmlEscape="false"/>", field:"cxlackstatus", id:"cxlackstatus", width:100, sortable: false }				
			];
			
            var grid_result_settings = {
				enableToolbar:false,
				consolidateActionFlag: false,
				
				buttons: {
					
				},
				pagingInfo:{
					
				},
				urls:{
				},
				events:{
					onDataUpdate : function(data,callback){
						for(i in data.value){		
							data.value[i].referenceNo 	   = data.value[i].settlementReferenceNo+"-"+data.value[i].versionNo;
							data.value[i].firmBrokerCode   = firmBrokerCode(data.value[i].brokerCode, data.value[i].displayAccountNo);
							data.value[i].trxStatus   	   = trxStatus(data.value[i].status, data.value[i].transmissionStatus);
							data.value[i].ackStatus        = ackStatus(data.value[i].acceptanceStatus, data.value[i].status, data.value[i].transReqdForCxl);
							data.value[i].cxlAckStatus     = cxlAckStatus(data.value[i].cxlAcceptanceStatus, data.value[i].status, data.value[i].acceptanceStatus, data.value[i].actualTrxFlag, data.value[i].transReqdForCxl);
						}
						callback(data);
					}
				},
				defaultInvisibleColumns: ["cpTradingAccount", "valueDateStr", "localAccountNo", "acceptanceStatus"]
			};
			
            var row_id = 0;
            var rec = {};
            
            var firmBrokerCode = function(brokerCode,displayAccountNo){
				if($.trim(brokerCode)==""){
            		return displayAccountNo + '()';
            	}else{
					return displayAccountNo + '(' + brokerCode + ')';
				}
			}
			
			var trxStatus = function(status,transmissionStatus){
				if($.trim(status)=="CANCEL"){
            		return 'CANCELLED';
            	}else{
					return transmissionStatus;
				}
			}
			
			var ackStatus = function(acceptanceStatus,status,transReqdForCxl){
				if($.trim(status)=="NORMAL"){
            		if(transReqdForCxl == "N") {
            			return "(Marked)";
            		} else {
            			return $.trim(acceptanceStatus);
            		}
            	}
            	
            	return $.trim(acceptanceStatus);
			}
			
			var cxlAckStatus = function(cxlAcceptanceStatus,status,acceptanceStatus,actualTrxFlag,transReqdForCxl){
				if(status == "CANCEL") {
            		if($.trim(actualTrxFlag)=="N"){
            			return "(Marked)";
            		} else if(transReqdForCxl == "N") {
            			if(acceptanceStatus == "NG") {
            				return "";
            			} else {
            				return "(Reset)";
            			}
            		} else if(transReqdForCxl == "Y") {
            			return cxlAcceptanceStatus;
            		} else if($.trim(transReqdForCxl) == "") {
            			return "(Expired)";
            		}
            	}
            	return "";
			}
			
			<xenos:out escapeXml="false">
				<c:forEach items="${value}" var="dl">
					rec = {};
					row_id+=1;
					rec.id = "xenos_" + row_id;					
					
					rec.referenceNo = "<c:out value="${dl.settlementReferenceNo}" />" + "-" + "<c:out value="${dl.versionNo}" />";
					rec.fundAccountNo = "<c:out value="${dl.fundAccountNo}" />";
					rec.fundAccountPk = "<c:out value="${dl.fundAccountPk}" />";
					rec.valueDateStr = "<c:out value="${dl.valueDateStr}" />";
					rec.cpTradingAccount = "<c:out value="${dl.cpTradingAccount}" />";
					rec.deliverReceiveDisplay = "<c:out value="${dl.deliverReceiveDisplay}" />";
					rec.instrumentCode = "<c:out value="${dl.instrumentCode}" />";
					rec.securityShortName = "<c:out value="${dl.securityShortName}" />";
					rec.altSecurityCode = "<c:out value="${dl.altSecurityCode}" />";
					rec.instructionQuantityStr = "<c:out value="${dl.instructionQuantityStr}" />";
					rec.isinCode = "<c:out value="${dl.isinCode}" />";
					rec.ccyCode = "<c:out value="${dl.ccyCode}" />";
					rec.instructionAmountStr = "<c:out value="${dl.instructionAmountStr}" />";
					rec.cpBankDisplay = "<c:out value="${dl.cpBankDisplay}" />";
					rec.psetDisplay = "<c:out value="${dl.psetDisplay}" />";
					rec.firmBank = "<c:out value="${dl.firmBank}" />";					
					rec.firmBrokerCode = firmBrokerCode("<c:out value="${dl.brokerCode}" />", "<c:out value="${dl.displayAccountNo}" />");
					rec.trxStatus = trxStatus("<c:out value="${dl.status}" />", "<c:out value="${dl.transmissionStatus}" />");
					rec.ackStatus = ackStatus("<c:out value="${dl.acceptanceStatus}" />", "<c:out value="${dl.status}" />", "<c:out value="${dl.transReqdForCxl}" />");
					rec.cxlackstatus = cxlAckStatus("<c:out value="${dl.cxlAcceptanceStatus}" />", "<c:out value="${dl.status}" />", "<c:out value="${dl.acceptanceStatus}" />", "<c:out value="${dl.actualTrxFlag}" />", "<c:out value="${dl.transReqdForCxl}" />");
					
					grid_result_data.push(rec);
				</c:forEach>
			</xenos:out>
			
        </jsp:body>
    </jsp:element>
	
</jsp:root>