<!--$Id$-->
<!--$Author: amanj $-->
<!--$Date: 2016-12-23 16:57:50 $-->
<jsp:root version="2.0" xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:spring="http://www.springframework.org/tags" xmlns:form="http://www.springframework.org/tags/form"
	xmlns:xenos="http://www.nri.co.jp/xenos" xmlns:jsp="http://java.sun.com/JSP/Page">

	<div class="formItemArea" id="cashTransferAuthorizationQueryCriteria">

		<jsp:element name="script">
			<jsp:attribute name="type">text/javascript</jsp:attribute>
			<jsp:attribute name="src">
				<c:url value="/scripts/inf/utilCommons.js" />
			</jsp:attribute>
			<jsp:body></jsp:body>
		</jsp:element>

		<jsp:element name="script">
			<jsp:attribute name="type">text/javascript</jsp:attribute>
			<jsp:attribute name="src">
				<c:url value="/scripts/stl/counterPartyCode.js" />
			</jsp:attribute>
			<jsp:body></jsp:body>
		</jsp:element>
		<jsp:directive.page contentType="text/html;charset=UTF-8" />
		<jsp:output omit-xml-declaration="yes" />

		<div class="formItemBlock topitems dottedBg">
			<div class="formItem">
				<form:label path="fundCode">
					<spring:message code="ref.fund.label.fundcode"
						htmlEscape="false" />
				</form:label>
				<span>
					<form:input value="" path="fundCode" class="textBox" />
				</span>
				<span class="remove" title="Remove this field" style="display: none;">
					<spring:message text="" htmlEscape="false" />
				</span>
				<div class="popupBtn">
					<input type="button" class="popupBtnIco" tgt="fundCode"
						popType="fundCode" value="" />
				</div>
				<div class="clear">
					<spring:message text="" htmlEscape="false" />
				</div>
			</div>
			<div class="formItem">
				<form:label path="valueDateFrom">
					<spring:message code="stl.stlqry.label.valuedatefromto"
						htmlEscape="false" />
				</form:label>
				<span>
					<form:input value="" path="valueDateFrom" id="valueDateFrom"
						class="dateinput valueDateFromReset"/>
				</span>
				<span>
					<form:input value="" path="valueDateTo" id="valueDateTo"
						class="dateinput valueDateToReset"/>
				</span>
				<span class="remove" title="Remove this field" style="display: none;">
					<spring:message text="" htmlEscape="false" />
				</span>
				<div class="clear">
					<spring:message text="" htmlEscape="false" />
				</div>
			</div>
			<div class="formItem">
				<form:label path="cpAccountNo">
					<spring:message code="stl.label.counterpartyac"
						htmlEscape="false" />
				</form:label>
				<span>
					<form:input value="" path="cpAccountNo" class="textBox accountNo" />
				</span>
				<span class="remove" title="Remove this field" style="display: none;">
					<spring:message text="" htmlEscape="false" />
				</span>
				<div class="popupBtn">
					<input type="button" class="popupBtnIco" tgt="cpAccountNo"
						popType="cpAccount" actTypeContext="T|B" actCPTypeContext="BROKER|BANK/CUSTODIAN"
						actStatusContext="OPEN" value="" />
				</div>
				<div class="clear">
					<spring:message text="" htmlEscape="false" />
				</div>
			</div>
			<div class="formItem">
				<form:label path="tradeDateFrom">
					<spring:message code="stl.stlqry.label.tradedatefromto"
						htmlEscape="false" />
				</form:label>
				<span>
					<form:input value="" path="tradeDateFrom" id="tradeDateFrom"
						class="dateinput tradeDateFromReset"/>
				</span>
				<span>
					<form:input value="" path="tradeDateTo" id="tradeDateTo"
						class="dateinput tradeDateToReset"/>
				</span>
				<span class="remove" title="Remove this field" style="display: none;">
					<spring:message text="" htmlEscape="false" />
				</span>
				<div class="clear">
					<spring:message text="" htmlEscape="false" />
				</div>
			</div>
			<div class="formItem">
				<form:label path="referenceNo">
					<spring:message code="stl.label.settlementreferenceno"
						htmlEscape="false" />
				</form:label>
				<span>
					<form:input value="" path="referenceNo" class="textBox" maxlength="20" />
				</span>
				<span class="remove" title="Remove this field" style="display: none;">
					<spring:message text="" htmlEscape="false" />
				</span>
				<div class="clear">
					<spring:message text="" htmlEscape="false" />
				</div>
			</div>
			<div class="formItem">
				<form:label path="wireType">
					<spring:message code="stl.label.wiretype"
						htmlEscape="false" />
				</form:label>
				<span>
					<form:select path="wireType" class="dropdowninput">
						<option value=""></option>
						<form:options items="${commandForm.wireTypeList}"
							itemLabel="label" itemValue="value" />
					</form:select>
				</span>
				<span class="remove" title="Remove this field" style="display: none;">
					<spring:message text="" htmlEscape="false" />
				</span>
				<div class="clear">
					<spring:message text="" htmlEscape="false" />
				</div>
			</div>
			<div class="formItem">
				<form:label path="currency">
					<spring:message code="stl.authorizationqry.label.ccycode"
						htmlEscape="false" />
				</form:label>
				<span>
					<form:input id="currency" value="" path="currency" class="textBox" />
				</span>
				<div class="popupBtn">
					<input type="button" class="popupBtnIco" tgt="currency" popType="currency"
						value="" />
				</div>
				<span class="remove" title="Remove this field" style="display: none;">
					<spring:message text="" htmlEscape="false" />
				</span>
				<div class="clear">
					<spring:message text="" htmlEscape="false" />
				</div>
			</div>	
			
			<div class="formItem">
				<form:label path="status">
					<spring:message code="stl.stlqry.label.status"
						htmlEscape="false" />
				</form:label>
				<span>
					<form:select path="status" class="dropdowninput">
						<form:option value=""/>
						<form:options items="${commandForm.statusList}"
							itemLabel="label" itemValue="value" />
					</form:select>
				</span>
				<span class="remove" title="Remove this field" style="display: none;">
					<spring:message text="" htmlEscape="false" />
				</span>
				<div class="clear">
					<spring:message text="" htmlEscape="false" />
				</div>
			</div>
		<div class="clear clear-block">
			<spring:message text="" htmlEscape="false" />
		</div>
	</div>	


		<div class="clear">
			<spring:message text="" htmlEscape="false" />
		</div>

	<div class="formBrdHide"><spring:message text="" htmlEscape="false"/></div>
	<div class="formItemBlock delFormItems deltopitems" style="display:none;" >
		<input type="button" class="restoreAllBtn" value="Restore All" />
		<div class="clear clear-block"><spring:message text="" htmlEscape="false"/></div>
	</div>
		<jsp:element name="script">
			<jsp:attribute name="type">text/javascript</jsp:attribute>
			<jsp:attribute name="src">
				<c:url value="/scripts/inf/datevalidation.js" />
			</jsp:attribute>
			<jsp:body>
				xenos$onReady$Array.push(function() {
				xenos.loadScript([{path:
				xenos.context.path + '/scripts/inf/datevalidation.js', async:
				false}]);
				xenos.loadLocalizedScript([{path: xenos.context.path +
				'/scripts/inf/xenos-i18n', async: false}]);
				});
			</jsp:body>
		</jsp:element>

		<jsp:element name="script">
			<jsp:attribute name="type">text/javascript</jsp:attribute>
			<jsp:attribute name="src">
				<c:url value="/scripts/xenos-treeview.js" />
			</jsp:attribute>
			<jsp:body></jsp:body>
		</jsp:element>

		<spring:eval expression="T(java.lang.System).currentTimeMillis()"
			var="myId" />
		<input type="hidden" id="${myId}" />
		<jsp:element name="script">
			<jsp:attribute name="type">text/javascript</jsp:attribute>
			<jsp:body>
				//Loading Localized Script

				xenos.loadLocalizedScript([
				{path:
				xenos.context.path + '/scripts/inf/xenos-i18n', async: false},
				{path:
				xenos.context.path + '/scripts/stl/xenos-stl-i18n', async: false}
				]);
				//Loading Required scripts before validator is called.
				xenos.loadScript([
				{path: xenos.context.path + '/scripts/ref/xenos-ns.js',
				async: false},
				{path: xenos.context.path +
				'/scripts/inf/datevalidation.js', async: false},
				{path:
				xenos.context.path + '/scripts/stl/xenos/cashTransferAuthorizationQuery.js',
				async:
				false}
				],{
				success: function() {
				jQuery('#' +
				'${myId}').parent().xenosform({
				beforeSubmit:xenos.ns.views.cashTransferAuthorizationQuery.validateSubmit,
				afterRendering : afterRenderFunc
				});
				
				$('#valueDateFrom', '#cashTransferAuthorizationQueryCriteria').on('change', function(){
	                if(!checkDate(this)){
	                  xenos.postNotice(xenos.notice.type.error, xenos.utils.evaluateMessage(xenos.i18n.datevalidationmessage.incorrect_date,[this.value]))
	                } else {
	                  formatDate(this.value,$('#valueDateFrom'));
	                };
	              });
				  
				 $('#valueDateTo', '#cashTransferAuthorizationQueryCriteria').on('change', function(){
	                if(!checkDate(this)){
	                  xenos.postNotice(xenos.notice.type.error, xenos.utils.evaluateMessage(xenos.i18n.datevalidationmessage.incorrect_date,[this.value]))
	                } else {
	                  formatDate(this.value,$('#valueDateTo'));
	                };
	              });
				  
				  $('#tradeDateFrom', '#cashTransferAuthorizationQueryCriteria').on('change', function(){
	                if(!checkDate(this)){
	                  xenos.postNotice(xenos.notice.type.error, xenos.utils.evaluateMessage(xenos.i18n.datevalidationmessage.incorrect_date,[this.value]))
	                } else {
	                  formatDate(this.value,$('#tradeDateFrom'));
	                };
	              });
				  
				 $('#tradeDateTo', '#cashTransferAuthorizationQueryCriteria').on('change', function(){
	                if(!checkDate(this)){
	                  xenos.postNotice(xenos.notice.type.error, xenos.utils.evaluateMessage(xenos.i18n.datevalidationmessage.incorrect_date,[this.value]))
	                } else {
	                 formatDate(this.value,$('#tradeDateTo'));
	                };
	              });
				}
				});
				function
				afterRenderFunc($context){
				/**
				* A common request handler to be used
				server communication.
				*/
				var xenos$Handler$RequestHandler =
				xenos$Handler$function({
				get: {
				contentType: 'json',
				requestType:
				xenos$Handler$default.requestType.asynchronous
				},
				settings: {
				beforeSend: function(request) {
				request.setRequestHeader('Accept',
				'application/json');
				},
				type: 'POST'
				}
				});

				};

			</jsp:body>
		</jsp:element>

	</div>
</jsp:root>			