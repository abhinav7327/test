<!--$Id$-->
<!--$Author$-->
<!--$Date$-->

<jsp:root version="2.0"
     xmlns:jsp="http://java.sun.com/JSP/Page"
     xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:form="http://www.springframework.org/tags/form"
     xmlns:fn="http://java.sun.com/jsp/jstl/functions"
     xmlns:spring="http://www.springframework.org/tags"
	 xmlns:sessionConversation="http://www.nri.co.jp/sessionConversation"
	 xmlns:xenos="http://www.nri.co.jp/xenos"
	 xmlns:xenosfn ="http://www.nri.co.jp/jstl/functions"
     xmlns:tiles="http://tiles.apache.org/tags-tiles">
	 
<div class="entryContainer paddingFour">
    <jsp:element name="script">
		<jsp:attribute name="type">text/javascript</jsp:attribute>
		<jsp:attribute name="src"><c:url value="/scripts/inf/fieldvalidator.js"/></jsp:attribute>
		<jsp:body></jsp:body>
	</jsp:element>	 
	<!-- Java script include -->
	<jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>		
        <jsp:body>
			var xenos$Wizard$onPageLoad${commandForm.uniqueId} = function($xenos$Wizard){
					var context = $xenos$Wizard.$context;
		        	var baseUrl = xenos.context.path + context.find('form').attr('action');
					
					var actionType = "<c:out value="${commandForm.options.actionType}" />";
					if($.trim(actionType) == 'AMEND'){
						$('#calendarId',context).attr('disabled',true);
					} else {
						$('#calendarId',context).removeAttr('disabled');
					}
					
					var holidayEntryXRefResult = [],
						rowId = 0,		
						item = {},
						holidayEntryXRefGrid = null,
						holidayEntryList = [];
					/**
					* A common request handler to be used server communication.
					*/
					var xenos$Handler$RequestHandler = xenos$Handler$function({
						get: {
							contentType: 'json',
							requestType: xenos$Handler$default.requestType.asynchronous
						},	
						settings: {
							beforeSend: function(request) {
								request.setRequestHeader('Accept', 'application/json');
							},
							type: 'POST'
						}
					});
	
	            var holidayEntryXRefColumns = [		
						{name:"<spring:message code="ref.label.calendar.id" htmlEscape="false"/>", 	field:"calendarId",	id:"calendarId", 	sortable:false},
						{name:"<spring:message code="ref.label.holiday.name" htmlEscape="false"/>", 		field:"holidayName",		id:"holidayName",		sortable:false},
						{name:"<spring:message code="ref.label.holiday.date" htmlEscape="false"/>", 	field:"holidayDate",	id:"holidayDate", sortable:false}
						
					];
					
					var holidayEntryXRefGridConf = {
						editMode 					: 	'both',																
						editCallback 				: 	editHolidayEntryHandler,
						deleteCallback				:	deleteHolidayEntryHandler,
						forceFitColumns				:	true
					};
					rowId=0;
					<xenos:out escapeXml="false">
					<c:forEach items="${commandForm.calendarDateParticipants}" var="dl">
						item = {};
						rowId+=1;
						item.id 			= "xenos_" + rowId;
						item.calendarId 	= "<c:out value="${dl.calendarId}" />";
						item.holidayName 	= "<c:out value="${xenosfn:escapeJS(dl.name)}" />";
						item.holidayDate 	= "<c:out value="${dl.calendarDateStr}" />";
						holidayEntryXRefResult.push(item);
					</c:forEach>
					</xenos:out>					
	                holidayEntryXRefGrid = $('#holidayEntryGrid',context).xenoseditablegrid(holidayEntryXRefResult, holidayEntryXRefColumns, holidayEntryXRefGridConf);	
	        
	            
					/**
					* Validate Holiday Entry attributes.
					*/
					function validateOtherAttributes(){
						var validationMessages = [];
						var calendarId = $.trim($('#calendarId',context).val());
						var holidayName = $.trim($('#holidayName',context).val());
						var holidayDate = $.trim($('#holidayDate',context).val());
	    
						
					    if(VALIDATOR.isNullValue(calendarId)){
							validationMessages.push(xenos$REF$i18n.holidyentry.general.calendar_id_empty);
						}
						if(VALIDATOR.isNullValue(holidayName)){
							validationMessages.push(xenos$REF$i18n.holidyentry.general.holiday_name_empty);
						}
						if(VALIDATOR.isNullValue(holidayDate)){
							validationMessages.push(xenos$REF$i18n.holidyentry.general.holiday_date_empty);
						}
						if (validationMessages.length > 0){
							 xenos.utils.displayGrowlMessage(xenos.notice.type.error, validationMessages);
							 return false;
						}else {
	                           xenos.utils.clearGrowlMessage();
						}
						return true;
					}
					
	            /**
				* Populate Name X Ref request parameters.
				*/
				function populateHolidayEntryRequestParam(){
					var reqObj = {
					              "calendar.calendarId"		:	$.trim($('#calendarId',context).val()),
								  "calendar.holidayName"		:	$.trim($('#holidayName',context).val()),
								  "calendar.holidayDate"	:	$.trim($('#holidayDate',context).val())
							   };
					return reqObj;
				}
	  
	            /**
				* Populate Name X Ref form.
				*/
				function populateHolidayEntryXRefForm(result){
					if(result.calendar){
						$('#calendarId',context).val(result.calendar.calendarId);
						$('#holidayName',context).val(result.calendar.holidayName);
						$('#holidayDate',context).val(result.calendar.holidayDate);
						$('input[type=text],textarea,select', 'div.formItemBlock').filter(':enabled:visible:first').focus();
					}
				}  
				
				
				/**
				* New Name X Ref add handler.
				*/
				
				function addHolidayEntryHandler(e){
					var valid = validateOtherAttributes();
					if(valid){
						var requestUrl = baseUrl + "/addHolidayXref.json?commandFormId=" + $('[name=commandFormId]').val();
								   
						xenos$Handler$RequestHandler.generic(e, {	requestUri: requestUrl,
																settings: {data : populateHolidayEntryRequestParam()},
																onJsonContent :  function(e, options, $target, content) {
																	if(content.success == true){
																		upsertHolidayEntry( content.value[0]);
																		xenos.utils.clearGrowlMessage();
																	} else {
																		xenos.utils.displayGrowlMessage(xenos.notice.type.error, content.value);
																	}
																}
															 }
												);
					}
				}
				
				/**
				* Name X Ref Edit handler
				*/
				function editHolidayEntryHandler(rowIndex, dataContext){
					var requestUrl = baseUrl + "/editHolidayXref.json?commandFormId=" + $('[name=commandFormId]').val();
					xenos$Handler$RequestHandler.generic(undefined, {	requestUri: requestUrl,
															settings: {data : {"editIndexHoliday" : rowIndex}},
															onJsonContent :  function(e, options, $target, content) {
																if(content.success == true){
																	populateHolidayEntryXRefForm(content.value[0]);
																	$('.editBtnHolidayEntryXRef',context).css('display','block'); 
																	$('.addHolidayEntryXRef',context).css('display','none');
																} else {
																	xenos.postNotice(xenos.notice.type.error, content.value);
																}
																return true;
															}
														 }
											);
				}
				
				/**
				* Name X Ref Delete handler
				*/
				function deleteHolidayEntryHandler(rowIndex, dataContext){
					var requestUrl = baseUrl + "/deleteHolidayXref/"+ rowIndex + ".json?commandFormId=" + $('[name=commandFormId]').val();
						xenos$Handler$RequestHandler.generic(undefined, {	requestUri: requestUrl,
																onJsonContent :  function(e, options, $target, content) {
																	if(content.success == true){
																		upsertHolidayEntry(content.value[0]);
																		$('.editBtnHolidayEntryXRef',context).hide();
																		$('.addHolidayEntryXRef',context).show();
																	} else {
																		xenos.postNotice(xenos.notice.type.error, content.value);
																	}
																}
															 }
												);
				}
				
				/**
				* Name X Ref update handler.
				*/
				function updateHolidayEntryHandler(e){				
					var valid = validateOtherAttributes();
					if(valid){
						var requestUrl = baseUrl + "/updateHolidayXref.json?commandFormId=" + $('[name=commandFormId]').val();
						
						xenos$Handler$RequestHandler.generic(e, {	requestUri: requestUrl,
																settings: {data : populateHolidayEntryRequestParam()},
																onJsonContent :  function(e, options, $target, content) {
																	if(content.success == true){
																		upsertHolidayEntry(content.value[0]);
																		$('.editBtnHolidayEntryXRef',context).css('display','none'); 
																		$('.addHolidayEntryXRef',context).css('display','block'); 
																	} else {
																		xenos.postNotice(xenos.notice.type.error, content.value);
																	}
																}
															 }
												);
					}
				}
				
				/**
				* Name X Ref cancel handler.
				*/
				function cancelHolidayEntryHandler(e){
					var requestUrl = baseUrl + "/cancelHolidayXref.json?commandFormId=" + $('[name=commandFormId]').val();
	
					xenos$Handler$RequestHandler.generic(undefined, {	requestUri: requestUrl,
															onJsonContent :  function(e, options, $target, content) {
																	if(content.success == true){
																		upsertHolidayEntry(content.value[0]);
																		$('.editBtnHolidayEntryXRef',context).css('display','none'); 
																		$('.addHolidayEntryXRef',context).css('display','block'); 
																	} else {
																		xenos.postNotice(xenos.notice.type.error, content.value);
																	}
																	return true;
																}
															 }
												);
				}
				
				/**
				* Insert/ Update Name X Ref(s).
				*/
				function upsertHolidayEntry(data){
					var result = data.calendarDateParticipants;
					if(result){
						holidayEntryXRefGrid.clearData();
						for(var i in result){
							item = {};
							rowId+=1;
							item.id 				= 	"xenos_" + rowId;
							item.calendarId 		= $.trim(result[i].calendarId);
							item.holidayName 		= $.trim(result[i].name);
							item.holidayDate 		= $.trim(result[i].calendarDateStr);
							
							holidayEntryXRefGrid.addOrUpdateRow(item,{});
						}
						populateHolidayEntryXRefForm(data);
					}
				}
				
				$('#addHolidayEntryBtn',context).bind('click',addHolidayEntryHandler);
				$('#updateHolidayEntryBtn',context).bind('click',updateHolidayEntryHandler);
				$('#cancelHolidayEntryBtn',context).bind('click',cancelHolidayEntryHandler);
				
				var submitValidateHook = function() {					
					if (isEmptyGridEntered()){
						xenos.utils.displayGrowlMessage(xenos.notice.type.error, "No records to submit.");
						return false;
					}else {
						xenos.utils.clearGrowlMessage();
					}
					return true;					
				};
				
				var nextValidateHook = function() {
					var isValid = submitValidateHook();
					
					return isValid;
				};
				
				var unloadHook = function(){
					$('#addHolidayEntryBtn',context).unbind('click',addHolidayEntryHandler);
					$('#updateHolidayEntryBtn',context).unbind('click',updateHolidayEntryHandler);
					$('#cancelHolidayEntryBtn',context).unbind('click',cancelHolidayEntryHandler);
					
					$xenos$Wizard.deregister('submit',submitValidateHook);
					$xenos$Wizard.deregister('next',nextValidateHook);
					$xenos$Wizard.deregister('unload',unloadHook);
					holidayEntryXRefGrid.destroy();
				}
	
				
			    	$xenos$Wizard.register('next',nextValidateHook);
				    $xenos$Wizard.register('submit',submitValidateHook);
				    $xenos$Wizard.register('unload',unloadHook);
				    <!--Assigning shortcuts for form items-->
					xenos.utils.afterFormRenderScuts();
					
				/**
				* To check if no records are entered in the grid
				*/
				function isEmptyGridEntered(){
					var gridData = [];
					var gridLength = $('#holidayEntryGrid').data().gridInstance.getData().getItems();
					if(gridLength.length > 0)
						return false;	//Grid is not empty
					else 
						return true;	//Grid is empty
				}
		    }
			
			/**
			* Check Holiday Date
			*/
			function checkHolidayDate(holidayDate){			
				if (!checkDate(holidayDate)){
					xenos.utils.displayGrowlMessage(xenos.notice.type.error, "Holiday Date format is invalid");
				}
			}
			
		</jsp:body>
    </jsp:element>
	<c:if test="${success =='false'}">
		<!-- Error message Area -->
		<ul class="xenosError">
			<c:forEach items="${value}" var="dl">		
			<li><spring:message text="${dl}" htmlEscape="false"/></li>	
			</c:forEach>
		</ul>	
	</c:if>
	
	<spring:message code="form.button.label.add" htmlEscape="false" var="formadd_label"/>
	<spring:message code="form.button.label.save" htmlEscape="false" var="formsave_label"/>
	<spring:message code="form.button.label.cancel" htmlEscape="false" var="formcancel_label"/>
	
	<!-- Holiday Entry -->
	<div class="width100Perc">
		<!--h1><spring:message code="ref.label.holiday.information" htmlEscape="false"/></h1-->
		<div class="entryBlkArea ">
			<div class="formItemBlock topitems dottedBg">
					
					<c:choose>
					<c:when test="${commandForm.screenId == 'HLDEN'}">
						<div class="formItem">
							<form:label path="commandForm.calendar.calendarId" class="required"><spring:message code="ref.label.calendar.id" htmlEscape="false"/></form:label> 
							<span><form:input id="calendarId" value="" path="commandForm.calendar.calendarId"  class="textBox txtFirmItem"/></span>
							<div class="popupBtn"><input type="button" class="popupBtnIco" tgt="calendarId" popType="calendar"/></div>
							<div class="clear"><spring:message text="" htmlEscape="false"/></div>
						</div>
					</c:when>
					<c:otherwise>
						<div class="formItem">
							<form:label path="commandForm.calendar.calendarId" class="required"><spring:message code="ref.label.calendar.id" htmlEscape="false"/></form:label>
								<!-- <span>${commandForm.calendar.calendarId}</span> -->
								<span><form:input id="calendarId" value="" path="commandForm.calendar.calendarId"  class="textBox txtFirmItem" readonly="true"/></span>
							<div class="clear"><spring:message text="" htmlEscape="false"/></div>
						</div>				
					</c:otherwise>
				</c:choose>
				
				<div class="formItem">
					<form:label path="commandForm.calendar.holidayName" class="required"><spring:message code="ref.label.holiday.name" htmlEscape="false"/></form:label>
					<span><form:input id="holidayName" value="" path="commandForm.calendar.holidayName"  class="textBox" maxlength="30"/></span>			
					<div class="clear"><spring:message text="" htmlEscape="false"/></div>
	            </div>
				
				<div class="formItem">
					<form:label path="commandForm.calendar.holidayDate" class="required"><spring:message code="ref.label.holiday.date" htmlEscape="false"/></form:label>
					<span><form:input id="holidayDate" value="" path="commandForm.calendar.holidayDate"  class="dateinput" /></span>			
					<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			    </div>
				
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>

				<div id="formActionArea" class="gridBtnMargin AddBtnformActionAreaBg">
					<div class="right">
						<div class="btnWrapStyle submitBtn gridAddBtn">
							<span class="addHolidayEntryXRef" style="display:block"><input id="addHolidayEntryBtn" type="button" value="${formadd_label}" class="inputBtnStyle"/></span>
						</div>
						<span class="editBtnHolidayEntryXRef" style="display:none">	
								<div class="btnWrapStyle submitBtn"><input id="updateHolidayEntryBtn" type="button" value="${formsave_label}" class="inputBtnStyle"/></div>
								<div class="btnWrapStyle resetBtn"><input id="cancelHolidayEntryBtn" type="button" value="${formcancel_label}" class="inputBtnStyle"/></div>
						</span>
					</div>
					<div class="clear"><spring:message text="" htmlEscape="false"/></div>
				</div>
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
				<div class="entryGrid">
					<div id="holidayEntryGrid" class="xenos-grid" style="width:100%;height:150px;"><spring:message text="" htmlEscape="false"/></div>
				</div>	
			</div>
		</div>				
	</div>
	 <jsp:element name="script">
		<jsp:attribute name="type">text/javascript</jsp:attribute>
		<jsp:body>
			$('#holidayDate').ForceNumericOnly();			
		</jsp:body>
	</jsp:element>
	
</div>	 	 
</jsp:root>		