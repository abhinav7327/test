<!--$Id$-->
<!--$Author$-->
<!--$Date$-->
<jsp:root version="2.0"
    xmlns:jsp="http://java.sun.com/JSP/Page"
     xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:form="http://www.springframework.org/tags/form"
     xmlns:fn="http://java.sun.com/jsp/jstl/functions"
     xmlns:spring="http://www.springframework.org/tags"
	 xmlns:sessionConversation="http://www.nri.co.jp/sessionConversation"
	 xmlns:xenos="http://www.nri.co.jp/xenos"
	 xmlns:xenosfn ="http://www.nri.co.jp/jstl/functions"
     xmlns:tiles="http://tiles.apache.org/tags-tiles">
<div class="entryContainer paddingFour">
	<jsp:element name="script">
		<jsp:attribute name="type">text/javascript</jsp:attribute>
		<jsp:attribute name="src"><c:url value="/scripts/inf/fieldvalidator.js"/></jsp:attribute>
		<jsp:body></jsp:body>
	</jsp:element>
	
	<spring:message code="form.button.label.add" htmlEscape="false" var="formadd_label"/>
	<spring:message code="form.button.label.save" htmlEscape="false" var="formsave_label"/>
	<spring:message code="form.button.label.cancel" htmlEscape="false" var="formcancel_label"/>
	
	<jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>		
        <jsp:body>

		var xenos$Wizard$onPageLoad${commandForm.uniqueId} = function($xenos$Wizard){
                var context = $xenos$Wizard.$context;
		      	var baseUrl = xenos.context.path + "/secure/ref/account/entry";
             
             if("${commandForm.account.counterPartyDetailType}" == "INTERNAL"){
                 $("#formActionArea > div > div > .wizSubmit > .inputBtnStyle").css('display','block');
                 $("#formActionArea > div > div > .wizPrev > .inputBtnStyle").css('display','block');
             }   
            /**
			* A common request handler to be used server communication.
			*/
			var xenos$Handler$RequestHandler = xenos$Handler$function({
				get: {
					contentType: 'json',
					requestType: xenos$Handler$default.requestType.asynchronous
				},	
				settings: {
					beforeSend: function(request) {
						request.setRequestHeader('Accept', 'application/json');
					},
					type: 'POST'
				}
			});
			
			/**
			* Common variables declaration to be used for future reference.
			*/
			var item = {};
			var rowId =0;
			var withholdTaxGrid;
			var withholdTaxGridData =[];

            /**
			* Column definition of WithholdTax Grid
			*/
			var withholdTaxGridColumns = [		
							{name:"<spring:message code="ref.account.label.taxidname" htmlEscape="false"/>", 				field:"taxFeeId",			id:"taxFeeId", 			width:150},
							{name:"<spring:message code="ref.account.label.calculationmethod" htmlEscape="false"/>", 	field:"taxFeeCalcType",		id:"taxFeeCalcType", 	width:150},
							{name:"<spring:message code="ref.account.label.rate" htmlEscape="false"/>", 				field:"chargeRateStr",		id:"chargeRateStr", 	width:150},
							{name:"<spring:message code="ref.account.label.ratetype" htmlEscape="false"/>", 			field:"rateType",			id:"rateType", 			width:150},
							{name:"<spring:message code="ref.account.label.startdate" htmlEscape="false"/>", 			field:"ruleStartDateStr",	id:"ruleStartDateStr",	width:150},
							{name:"<spring:message code="ref.account.label.enddate" htmlEscape="false"/>", 				field:"ruleEndDateStr",		id:"ruleEndDateStr", 	width:150},
							{name:"<spring:message code="ref.account.label.max" htmlEscape="false"/>", 					field:"defaultMaxStr",		id:"defaultMaxStr", 	width:150},
                            {name:"<spring:message code="ref.account.label.min" htmlEscape="false"/>", 					field:"defaultMinStr",		id:"defaultMinStr", 	width:150},
							{name:"<spring:message code="ref.account.label.chargeamount" htmlEscape="false"/>", 		field:"chargeAmountStr",	id:"chargeAmountStr", 	width:150},
							{name:"<spring:message code="ref.account.label.chargeunit" htmlEscape="false"/>", 			field:"chargeUnitStr",		id:"chargeUnitStr", 	width:150},
							{name:"<spring:message code="ref.account.label.tableid" htmlEscape="false"/>", 				field:"tableId",			id:"tableId", 			width:150},
							{name:"<spring:message code="ref.account.label.discount" htmlEscape="false"/>", 			field:"discountStr",		id:"discountStr", 		width:150},
					];
			/**
			* Configuration of WithholdTax Grid.
			*/
			var withholdTaxGridConfig = {
						forceFitColumns		: true,
						editMode 			: 'both',
						editCallback 		: withholdTaxEditHandler,
						deleteCallback		: withholdTaxDeleteHandler
						
					};
                    
            <xenos:out escapeXml="false">
			<c:forEach items="${commandForm.otherAttributes.withholdingTaxDynaBeans}" var="dl">
				item = {};
				rowId+=1;
				item.id = "xenos_" + rowId;
				item.taxFeeId =  "<c:out value="${dl.map.taxFeeId}" />";
				item.taxFeeCalcType =  "<c:out value="${dl.map.taxFeeCalcType}" />";
				item.chargeRateStr = "<c:out value="${dl.map.chargeRateStr}" />";
				item.rateType = "<c:out value="${dl.map.rateType}" />";
				item.ruleStartDateStr = "<c:out value="${dl.map.ruleStartDateStr}" />";
				item.ruleEndDateStr = "<c:out value="${dl.map.ruleEndDateStr}" />";
				item.defaultMaxStr = "<c:out value="${dl.map.defaultMaxStr}" />";
				item.defaultMinStr = "<c:out value="${dl.map.defaultMinStr}" />";
				item.chargeAmountStr = "<c:out value="${dl.map.chargeAmountStr}" />";
				item.chargeUnitStr = "<c:out value="${dl.map.chargeUnitStr}" />";
				/* if(item.taxFeeCalcType == 'SLIDING'){
					item.tableId = "<c:out value="${dl.map.chargeSlidingTableId}" />";
				} else if(item.taxFeeCalcType == 'SLIDING_PRICE'){
					item.tableId = "<c:out value="${dl.map.chargeSlidingTableIdPrc}" />";
				} */
				item.discountStr = "<c:out value="${dl.map.discountStr}" />";
				withholdTaxGridData.push(item);
			</c:forEach>
			</xenos:out>  

            /**
			*   Event handlers for the different  events like change
			*/
			function hideAllCalculationTypeRelatedElements(){
				$('.IRate', '.IMinMax', '.ICharge', '.IUnitLbl', '.IAmountLbl', '.ISliding').css('display','none');
			}
			
			function onChangeCalculationType(e){
				var selectedValue = $(this).val();
                $('.IMinMax').css('display','none');
                $('.ICharge').css('display','none');
                $('.IUnitLbl').css('display','none');
                $('.IAmountLbl').css('display','none');
                $('.ISliding').css('display','none');
                $('.IRate').css('display','none');
                
				hideAllCalculationTypeRelatedElements();
				switch (selectedValue)
				{
					case "FIXED_RATE":
									$('.IRate').css('display','block');
									$('.IMinMax').css('display','block');

									$(".chargeAmountStr").val("");
									$(".discountStr").val("");
									$(".chargeUnitStr").val("");
									$(".chargeSlidingTableId").val("");        
									$(".chargeSlidingTableIdPrc").val("");      
																		
									break;
					case "FIXED_AMOUNT":
									$('.ICharge').css('display','block');
									$('.IAmountLbl').css('display','block');
									$('.IUnitLbl').css('display','none');
									$(".chargeSlidingTableId").val("");        
									$(".chargeSlidingTableIdPrc").val("");        

									$(".chargeRateStr").val("");
									$(".defaultMinStr").val("");
									$(".defaultMaxStr").val("");
									$(".chargeUnitStr").val("");
									$(".discountStr").val("");
									$(".rateType").val("");
									
									break;
					case "PRN_UNIT":
					case "LOT_UNIT":
					case "NOM_UNIT":
					$(".chargeSlidingTableId").val("");        
									$(".chargeSlidingTableIdPrc").val("");        
									$('.IMinMax').css('display','block');
									$('.ICharge').css('display','block');
									$('.IUnitLbl').css('display','block');
									$('.IAmountLbl').css('display','block');
									$(".chargeRateStr").val("");
									$(".discountStr").val("");
									$(".rateType").val("");
									break;
					case "SLIDING":
									$('.ISliding').css('display','block');
									$('.slidingGen').css('display','block');
									$('.slidingPrc').css('display','none');
									$(".chargeRateStr").val("");
									$(".defaultMinStr").val("");
									$(".defaultMaxStr").val("");
									$(".chargeUnitStr").val("");
									$(".chargeAmountStr").val("");
									$(".rateType").val("");
									$(".chargeSlidingTableIdPrc").val(""); 
									break;
					case "SLIDING_PRICE":
									$('.ISliding').css('display','block');
									$(".chargeRateStr").val("");
									$(".defaultMinStr").val("");
									$(".defaultMaxStr").val("");
									$(".chargeUnitStr").val("");
									$(".chargeAmountStr").val("");
									$(".chargeSlidingTableId").val("");        
									$('.slidingGen').css('display','none');
									$('.slidingPrc').css('display','block');
									break;
					default:
								$('.IRate').css('display','none');
								$('.IMinMax').css('display','none');
								$('.ICharge').css('display','none');
								
								$('.IUnitLbl').css('display','none');
								$('.IAmountLbl').css('display','none');
								$('.ISliding').css('display','none');    
								
								$(".chargeSlidingTableId").val("");        
								$(".chargeSlidingTableIdPrc").val("");        
								$(".chargeRateStr").val("");
								$(".defaultMinStr").val("");
								$(".defaultMaxStr").val("");
								$(".chargeUnitStr").val("");
								$(".chargeAmountStr").val("");
								$(".discountStr").val("");            
								$('.slidingGen').css('display','none');
								$(".rateType").val("");

								break;
				}
			}
			
			//*******************************ADD, EDIT, CANCEL, DELETE and UPDATE handler******************************
			/**
			* Edit WithholdTax Add handler
			*/
			function withholdTaxEditHandler(rowIndex, dataContext){
				var requestUrl = baseUrl + "/editWithholdingTax.json?commandFormId=" + $('[name=commandFormId]').val();
				
				xenos$Handler$RequestHandler.generic(undefined, {	requestUri: requestUrl,
															settings: {data : {"editIndexWithholdingTax" : rowIndex}},
															onJsonContent :  function(e, options, $target, content) {
																if(content.success == true){
																	populateWithholdTaxForm(content.value[0]);
																	$('#cmbTaxFeeCalcType').trigger('change');
																	$('.editBtn').css('display','block'); 
																	$('.addBtn').css('display','none'); 
																} else {
																	xenos.utils.displayGrowlMessage(xenos.notice.type.error, content.value[0]);
																}
																return true;
															}
														 }
											);
			}
			
			/**
			* Edit WithholdTax Delete handler
			*/
			function withholdTaxDeleteHandler(rowIndex, dataContext){
				var requestUrl = baseUrl + "/deleteWithholdingTax/"+ rowIndex + ".json?commandFormId=" + $('[name=commandFormId]').val();
					xenos$Handler$RequestHandler.generic(undefined, {	requestUri: requestUrl,
															onJsonContent :  function(e, options, $target, content) {
																if(content.success == true){
																	upsertWithholdTax(content.value[0]);
																	$('.editBtn').hide();
																	$('.addBtn').show();
																} else {
																	xenos.utils.displayGrowlMessage(xenos.notice.type.error, content.value[0]);
																}
															}
														 }
											);
			}
			
			/**
			* New WithholdTax Add handler
			*/
			function onClickAddWithholdTax(e){
			    // Make the client Side validation
				var valid = validateOnAddToWithHoldingTax();
				if(valid){
					var requestUrl = baseUrl + "/addWithholdingTax.json";
					xenos$Handler$RequestHandler.generic(e, {	requestUri: requestUrl,
															settings: {data : $('form').serialize()},
															onJsonContent :  function(e, options, $target, content) {
																if(content.success == true){
																	upsertWithholdTax( content.value[0]);
																	$('.formHeader').find('.formTabErrorIco').css('display', 'none');
																} else {
																	xenos.utils.displayGrowlMessage(xenos.notice.type.error, content.value[0]);
																}
															}
														 }
											);
				}
			}
			/**
			* On Edit WithholdTax, Save handler
			*/
			function onClickSaveWithholdTax(e){
				
				var valid = validateOnAddToWithHoldingTax();
				if(valid){
					var requestUrl = baseUrl + "/updateWithholdingTax.json";
					
					xenos$Handler$RequestHandler.generic(e, {	requestUri: requestUrl,
															settings: {data : $('form').serialize()},
															onJsonContent :  function(e, options, $target, content) {
																if(content.success == true){
																	upsertWithholdTax(content.value[0]);
																	$('.editBtn').css('display','none'); 
																	$('.addBtn').css('display','block'); 
																} else {
																	xenos.utils.displayGrowlMessage(xenos.notice.type.error, content.value[0]);
																}
															}
														 }
											);
					}
			}
			/**
			* On Edit WithholdTax, Cancel handler
			*/
			function onClickCxlWithholdTax(e){
				var requestUrl = baseUrl + "/cancelWithholdingTax.json?commandFormId=" + $('[name=commandFormId]').val();
				xenos$Handler$RequestHandler.generic(undefined, {	requestUri: requestUrl,
														onJsonContent :  function(e, options, $target, content) {
																if(content.success == true){
																	upsertWithholdTax(content.value[0]);
																	$('.editBtn').css('display','none'); 
																	$('.addBtn').css('display','block');  
																} else {
																	xenos.utils.displayGrowlMessage(xenos.notice.type.error, content.value[0]);
																}
																return true;
															}
														 }
											);
			}
			/**
			* Populate Withhold Tax
			*/
			function populateWithholdTaxForm(result){
				if(result){
					$('#cmbTaxFeeId').val(result.withholdingTax.taxFeeId);
					$('#cmbTaxFeeCalcType').val(result.withholdingTax.taxFeeCalcType);
					$('#chargeRateStr').val(result.withholdingTax.chargeRateStr);
					$('#rateType').val(result.withholdingTax.rateType);
					$('#cmbTaxFeeId').focus();
					var valDateStr = $.trim(result.withholdingTax.ruleStartDateStr);
					var dateFormat,myDate;
					if (xenos$Cache.get('globalPrefs')) {
						dateFormat = xenos$Cache.get('globalPrefs')['mappedUiDisplayDateFormat'];
					}
					if(valDateStr != ''){
						myDate = $.datepicker.parseDate(dateFormat,valDateStr);
						$('#ruleStartDateStr').datepicker('setDate',myDate);
					}else{
						$('#ruleStartDateStr').datepicker('setDate','');
					}
					valDateStr = $.trim(result.withholdingTax.ruleEndDateStr);
					if(valDateStr != ''){
						myDate = $.datepicker.parseDate(dateFormat,valDateStr);
						$('#ruleEndDateStr').datepicker('setDate',myDate);
					}else{
						$('#ruleEndDateStr').datepicker('setDate','');
					}
					
					$('#defaultMaxStr').val(result.withholdingTax.defaultMaxStr);
					$('#defaultMinStr').val(result.withholdingTax.defaultMinStr);
					$('#chargeAmountStr').val(result.withholdingTax.chargeAmountStr);
					$('#chargeUnitStr').val(result.withholdingTax.chargeUnitStr);
					
					$('#discountStr').val(result.withholdingTax.discountStr);
					
					if(result.withholdingTax.taxFeeCalcType == 'SLIDING'){
						$('#chargeSlidingTableId').val(result.withholdingTax.chargeSlidingTableId);
					}else if(result.withholdingTax.taxFeeCalcType == 'SLIDING_PRICE'){
						$('#chargeSlidingTableIdPrc').val(result.withholdingTax.chargeSlidingTableIdPrc);
					}
				}
			}
			//****************************	VALIDATION ***********************************
			/**
			* Validate Commission to be added or updated.
			*/
			var validationMessages = [];
			function validateOnAddToWithHoldingTax(){
			    validationMessages = [];
				var startdate=$("#ruleStartDateStr").val();
				var enddate=$("#ruleEndDateStr").val();
				var value = $("#cmbTaxFeeId").val();
				if( VALIDATOR.isNullValue(value)){
				    validationMessages.push(xenos$REF$i18n.account.withholdtax.taxid_empty);
				}
				value = $("#cmbTaxFeeCalcType").val();
				if( VALIDATOR.isNullValue(value)){
				    validationMessages.push(xenos$REF$i18n.account.common.calculation_method_empty);
				}
				if( VALIDATOR.isNullValue(startdate)){
				     validationMessages.push(xenos$REF$i18n.account.common.start_date_empty);
				}
                else if(!isDateCustom(startdate)){
                    validationMessages.push(xenos$REF$i18n.account.common.start_date_invalid);
                }
                if(!isDateCustom(enddate) &amp;&amp; !VALIDATOR.isNullValue(enddate)){
                    validationMessages.push(xenos$REF$i18n.account.common.end_date_invalid);
                }
                if(!validateNumericFields()) {
					return false;
				}
				
				if( VALIDATOR.isNullValue(startdate)==false &amp;&amp; VALIDATOR.isNullValue(enddate)==false &amp;&amp; isDateCustom(startdate) &amp;&amp; isDateCustom(enddate))
				{          
					if(!isValidDateRange(startdate,enddate))
					    validationMessages.push(xenos$REF$i18n.account.common.start_date_after_end_date);
				}
					
				if ( validationMessages.length >0)
				{
					xenos.utils.displayGrowlMessage(xenos.notice.type.error, validationMessages);
					 return false;
				}
				else {
					$('.formHeader').find('.formTabErrorIco').css('display', 'none');
				}
				return true;
			}
			
			
			function validateNumericFields() {
                var value = 0;
				switch ($("#cmbTaxFeeCalcType").val())
				{
					case "FIXED_RATE":
									value = $("#chargeRateStr").val();
									if( VALIDATOR.isNullValue(value)){
									     validationMessages.push(xenos$REF$i18n.account.common.rate_empty);
									}
                                    else if(!formatRate($('#chargeRateStr'),4,8,null,$('#chargeRateStr').parent().parent().find('label').text())){
                                        return false;
                                    }
									value = $("#rateType").val();
									if( VALIDATOR.isNullValue(value)){
									    validationMessages.push(xenos$REF$i18n.account.common.rate_type_empty);
									}
                                    value = $('#defaultMaxStr').val();
                                    if(!VALIDATOR.isNullValue(value)) {
                                        if(!formatAmount($('#defaultMaxStr'),15,3,null,$('#defaultMaxStr').parent().parent().find('label').text()))
                                            return false;
                                    }
                                    value = $('#defaultMinStr').val();
                                    if(!VALIDATOR.isNullValue(value)) {
                                        if(!formatAmount($('#defaultMinStr'),15,3,null,$('#defaultMinStr').parent().parent().find('label').text()))
                                            return false;
                                    }
									break;
					case "FIXED_AMOUNT":
									value = $("#chargeAmountStr").val();
									if( VALIDATOR.isNullValue(value)){
									    validationMessages.push(xenos$REF$i18n.account.common.amount_empty);
									}
									break;
					case "PRN_UNIT":
					case "LOT_UNIT":
					case "NOM_UNIT":
									value = $("#chargeAmountStr").val();
									if( VALIDATOR.isNullValue(value)){
									    validationMessages.push(xenos$REF$i18n.account.common.amount_empty);
									}
									value = $("#chargeUnitStr").val();
									if( VALIDATOR.isNullValue(value)){
									    validationMessages.push(xenos$REF$i18n.account.common.unit_empty);
									}
									break;
					case "SLIDING":
									value = $("#chargeSlidingTableId").val();
									if( VALIDATOR.isNullValue(value)){
									    validationMessages.push(xenos$REF$i18n.account.common.table_id_slidingid_empty);
									}
									break;
					case "SLIDING_PRICE":
									value = $("#chargeSlidingTableIdPrc").val();
									if( VALIDATOR.isNullValue(value)){
									    validationMessages.push(xenos$REF$i18n.account.common.table_id_slidingprc_empty);
									}
									break;
					
				}
				
				return true;
			}
			
			// This function will either insert a new row or update a row.
			function upsertWithholdTax(data){
				rowId = 0;
				var result = data.otherAttributes.withholdingTaxDynaBeans;
				if(result){
					withholdTaxGrid.clearData();
					for(var i in result){
						item	=	{};
						rowId+=1;
						item.id = "xenos_" + rowId;
						item.taxFeeId =  $.trim(result[i].map.taxFeeId);
						item.taxFeeCalcType =  $.trim(result[i].map.taxFeeCalcType);
						item.chargeRateStr = $.trim(result[i].map.chargeRateStr);
						item.rateType = $.trim(result[i].map.rateType);
						item.ruleStartDateStr = $.trim(result[i].map.ruleStartDateStr);
						item.ruleEndDateStr = $.trim(result[i].map.ruleEndDateStr);
						
						item.defaultMaxStr = $.trim(result[i].map.defaultMaxStr);
						item.defaultMinStr = $.trim(result[i].map.defaultMinStr);
						item.chargeAmountStr = $.trim(result[i].map.chargeAmountStr);
						item.chargeUnitStr = $.trim(result[i].map.chargeUnitStr);
						if($.trim(result[i].map.taxFeeCalcType) == 'SLIDING'){
							item.tableId = $.trim(result[i].map.chargeSlidingTableId);
						}else if($.trim(result[i].map.taxFeeCalcType) == 'SLIDING_PRICE'){
							item.tableId = $.trim(result[i].map.chargeSlidingTableIdPrc);
						}
						item.discountStr = $.trim(result[i].map.discountStr);
						
						withholdTaxGrid.addOrUpdateRow(item,{});
					}
					
				}
				//Reset all fields 
				populateWithholdTaxForm(data);
				
				$('#cmbTaxFeeCalcType').trigger('change');
				xenos.utils.clearGrowlMessage();
			}
			
			withholdTaxGrid = $("#withholdTaxGrid").xenoseditablegrid(withholdTaxGridData, withholdTaxGridColumns, withholdTaxGridConfig);
			
			$('#cmbTaxFeeCalcType').unbind('change');
			$('#cmbTaxFeeCalcType').bind('change',onChangeCalculationType);
			$('#cmbTaxFeeCalcType').trigger('change');
			
			$('#addWithholdTax').unbind('click');
			$('#addWithholdTax').bind('click',onClickAddWithholdTax);
			
			$('#saveWithholdTax').unbind('click');
			$('#saveWithholdTax').bind('click',onClickSaveWithholdTax);
			
			$('#cancelWithholdTax').unbind('click');
			$('#cancelWithholdTax').bind('click',onClickCxlWithholdTax);
			
			var unloadHook = function(){
				//cleanup code
				$xenos$Wizard.deregister('submit',submitValidateHook);
				$xenos$Wizard.deregister('previous',preValidateHook);
				$xenos$Wizard.deregister('unload',unloadHook);
				withholdTaxGrid.destroy();
			}
			var preValidateHook = function() {	
					return validateNumericFields();
				} 
				
                
            var submitValidateHook = function() {	
					return validateNumericFields();
				} 
			
			$xenos$Wizard.register('submit',submitValidateHook);
			$xenos$Wizard.register('unload',unloadHook);
			$xenos$Wizard.register('previous',preValidateHook);
			$xenos$Wizard.register('unload',unloadHook);
			<!--Assigning shortcuts for form items-->
			xenos.utils.afterFormRenderScuts();

        };
        function formatDate(target){
				var value=target.value;
				if(value.length == 7){
					$("#"+target.id).val(value.substr(0,6)+"0"+value.substr(6));
				}
			}    
        
		</jsp:body>
    </jsp:element>
	
    <c:if test="${success =='false'}">
		<ul class="xenosError">
			<c:forEach items="${value}" var="dl">		
			<li><spring:message text="${dl}" htmlEscape="false"/></li>	
			</c:forEach>
		</ul>	
	</c:if>
	
		<div>
			<h1 class="msgHead"><spring:message code="ref.account.entry.label.withholdingtax.title" htmlEscape="false"/></h1>
		</div>
			<!-- Employee Information Block Start -->
			<table class="tableStyle sixCol">
                <tr>
                    <td><label><spring:message code="ref.account.label.accountno" htmlEscape="false"/></label></td>
                    <td>${commandForm.accountNoExp}</td>
                    <td><label><spring:message code="ref.account.entry.label.shortname" htmlEscape="false"/></label></td>
                    <td>${commandForm.shortNameExp}</td>	
                </tr>
            </table>

	<div class="entryBlkArea more">
    
		<div class="moreHandle">
				<h1 class="msgHead">
					<spring:message code="ref.account.label.withholdingtaxinfo" htmlEscape="false"/>
					<div class="handleBlock">
					  <span class="handler collapse"><spring:message text="" htmlEscape="false"/></span>
					</div>
				</h1>
		</div>	

		<div class="formItemBlock topitems dottedBg">
			<!-- Tax Id /Name -->
			<div class="formItem commFld">
				<form:label path="commandForm.withholdingTax.taxFeeId" class = "required"><spring:message code="ref.account.label.taxidname" htmlEscape="false"/></form:label> 
				<span>
					<xenos:select id="cmbTaxFeeId" path="commandForm.withholdingTax.taxFeeId" class="dropdowninput">
                    <form:option value="" />
						<form:options items="${commandForm.dropDownListValues.taxIdWithholdingTaxList}" itemLabel="label" itemValue="value"/>
					</xenos:select>
				</span>
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			<!-- calculation method -->
			<div class="formItem commFld">
				<form:label path="commandForm.withholdingTax.taxFeeCalcType" class = "required"><spring:message code="ref.account.label.mandatoryoptionalarea.calculationmethod" htmlEscape="false"/></form:label> 
				<span>
					<xenos:select id="cmbTaxFeeCalcType" path="commandForm.withholdingTax.taxFeeCalcType" class="dropdowninput" disabled = "${true}">
						<form:options items="${commandForm.dropDownListValues.calculationMethodList}" />
					</xenos:select>
				</span>
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			<!-- Start Date -->
			<div class="formItem">
				<form:label path="commandForm.withholdingTax.ruleStartDateStr" class = "required"><spring:message code="ref.account.label.mandatoryoptionalarea.startdate" htmlEscape="false"/></form:label> 
				<span><form:input id="ruleStartDateStr" value="" path="commandForm.withholdingTax.ruleStartDateStr" class="dateinput" onblur="if(!checkDate(this))
																							{xenos.postNotice(xenos.notice.type.error, xenos.utils.evaluateMessage
																							(xenos.i18n.datevalidationmessage.incorrect_date,[this.value]))}else{formatDate(this)};"/></span>
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			
			<!-- End Date -->
			<div class="formItem">
				<form:label path="commandForm.withholdingTax.ruleEndDateStr"><spring:message code="ref.account.label.enddate" htmlEscape="false"/></form:label> 
				<span><form:input id="ruleEndDateStr" value="" path="commandForm.withholdingTax.ruleEndDateStr" class="dateinput" onblur="if(!checkDate(this))
																							{xenos.postNotice(xenos.notice.type.error, xenos.utils.evaluateMessage
																							(xenos.i18n.datevalidationmessage.incorrect_date,[this.value]))}else{formatDate(this)};"/></span>
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			<!-- As Rate-->
			<div class="formItem IRate">
				<form:label path="commandForm.withholdingTax.chargeRateStr" class = "required"><spring:message code="ref.account.label.mandatoryoptionalarea.rate" htmlEscape="false"/></form:label> 
				<span><form:input id="chargeRateStr" value="" path="commandForm.withholdingTax.chargeRateStr"  class="txtNormal" onblur="return formatRate($('#chargeRateStr'),4,8,null,$('#chargeRateStr').parent().parent().find('label').text())"/></span> <!-- parameters check need to be done and proper values need to be sent-->
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			
			<!-- As Rate Type-->
			<div class="formItem IRate">
				<form:label path="commandForm.withholdingTax.rateType" class = "required"><spring:message code="ref.account.label.mandatoryoptionalarea.ratetype" htmlEscape="false"/></form:label> 
				<span>
					<xenos:select id="rateType" path="commandForm.withholdingTax.rateType" class="dropdowninput" disabled = "${true}">
						<form:options items="${commandForm.dropDownListValues.rateTypeList}" itemLabel="label" itemValue="value"/>
					</xenos:select>
				</span>
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
            <!-- Max-->
			<div class="formItem IMinMax">
				<form:label path="commandForm.withholdingTax.defaultMaxStr"><spring:message code="ref.account.label.max" htmlEscape="false"/></form:label> 
				<span><form:input id="defaultMaxStr" value="" path="commandForm.withholdingTax.defaultMaxStr"  class="txtNormal formatAmount" onblur="return formatAmount($('#defaultMaxStr'),15,3,null,$('#defaultMaxStr').parent().parent().find('label').text())"/></span> 
                <span class="remove" title="Remove this field" style="display: none;"><spring:message text="" htmlEscape="false"/></span>
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			
			<!-- Min -->
			<div class="formItem IMinMax">
				<form:label path="commandForm.withholdingTax.defaultMinStr" ><spring:message code="ref.account.label.min" htmlEscape="false"/></form:label> 
				<span><form:input id="defaultMinStr" value="" path="commandForm.withholdingTax.defaultMinStr"  class="txtNormal formatAmount defaultMinStr" onblur="return formatAmount($('#defaultMinStr'),15,3,null,$('#defaultMinStr').parent().parent().find('label').text())"/></span>
                <span class="remove" title="Remove this field" style="display: none;"><spring:message text="" htmlEscape="false"/></span>
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			<!-- chargeamount -->
			<div class="formItem ICharge IAmountLbl">
				<form:label path="commandForm.withholdingTax.chargeAmountStr"><spring:message code="ref.account.label.mandatoryoptionalarea.chargeamount" htmlEscape="false"/></form:label> 
				<span><form:input id="chargeAmountStr" value="" path="commandForm.withholdingTax.chargeAmountStr"  class="txtNormal chargeAmountStr" /></span> 
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			
			<!-- chargeUnitStr -->
			<div class="formItem ICharge IUnitLbl">
				<form:label path="commandForm.withholdingTax.chargeUnitStr"><spring:message code="ref.account.label.mandatoryoptionalarea.chargeunit" htmlEscape="false"/></form:label> 
				<span><form:input id="chargeUnitStr" value="" path="commandForm.withholdingTax.chargeUnitStr"  class="txtNormal chargeUnitStr"/></span> 
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			<!-- tableid -->
			<!-- 
			<div class="formItem ISliding">
				<form:label path="commandForm.withholdingTax.chargeSlidingTableId"><spring:message code="ref.account.label.mandatoryoptionalarea.tableid" htmlEscape="false"/></form:label> 
				<span class="slidingGen" style="display:block">
					<xenos:select id="chargeSlidingTableId" path="commandForm.withholdingTax.chargeSlidingTableId" class="dropdowninput chargeSlidingTableId">
						<form:options items="${commandForm.dropDownListValues.chargeSlidingList}"/>
					</xenos:select>
				</span> 
				<span class="slidingPrc" style="display:none">
					<xenos:select id="chargeSlidingTableIdPrc" path="commandForm.withholdingTax.chargeSlidingTableIdPrc" class="dropdowninput chargeSlidingTableIdPrc">
						<form:options items="${commandForm.dropDownListValues.chargePrcSlidingList}"/>
					</xenos:select>
				</span> 
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div> -->
			
			<!-- discountStr -->
			<div class="formItem ISliding">
				<form:label path="commandForm.withholdingTax.discountStr"><spring:message code="ref.account.label.discount" htmlEscape="false"/></form:label> 
				<span><form:input id="discountStr" value="" path="commandForm.withholdingTax.discountStr"  class="textBox" /></span> <!-- onblur format should be done -->
				<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			</div>
			<div class="clear"><spring:message text="" htmlEscape="false"/></div>
            
			<!-- Add Button -->
			<div class="clear"><spring:message text="" htmlEscape="false"/></div>
			 <div id="formActionArea" class="gridBtnMargin">
				<div class="right">
					<spring:message code="form.button.label.add" htmlEscape="false" var="formadd_label"/>
					<spring:message code="form.button.label.save" htmlEscape="false" var="formsave_label"/>
					<spring:message code="form.button.label.cancel" htmlEscape="false" var="formcancel_label"/>
					<div class="btnWrapStyle submitBtn gridAddBtn">
					<span class="addBtn" style="display:block"><input id="addWithholdTax" type="button" value="${formadd_label}" class="inputBtnStyle"/></span></div>
					<span class="editBtn" style="display:none">	
						<div class="btnWrapStyle submitBtn"><input id="saveWithholdTax" type="button" value="${formsave_label}" class="inputBtnStyle"/></div>
						<div class="btnWrapStyle resetBtn"><input id="cancelWithholdTax" type="button" value="${formcancel_label}" class="inputBtnStyle"/></div>
					</span>
					 
					
				</div>
			</div>
		</div>
			<!-- Withhold Tax Area -->
			<div class="entryGrid">
				<div id="withholdTaxGrid" class="xenos-grid" style="width:100%;height:300px;"><spring:message text="" htmlEscape="false"/></div>	
			</div>
	</div>
	<div class="clear"><spring:message text="" htmlEscape="false"/></div>
</div>
</jsp:root>