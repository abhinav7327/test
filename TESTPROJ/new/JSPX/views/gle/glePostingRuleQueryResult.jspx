<!--$Id$-->
<!--$Author$-->
<!--$Date$-->
<jsp:root version="2.0"
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
	xmlns:fn="http://java.sun.com/jsp/jstl/functions" 
	xmlns:spring="http://www.springframework.org/tags" 
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" 
	xmlns:xenos="http://www.nri.co.jp/xenos"
	xmlns:jsp="http://java.sun.com/JSP/Page">
	
	<jsp:directive.page contentType="text/html;charset=UTF-8" /> 
	<jsp:output	omit-xml-declaration="yes" />
	
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
			var isNext = <c:out value="${isNext}" />;	
            var grid_result_data = [];
            var grid_result_columns = [
				{name:"<spring:message code="gle.postingrule.query.label.details" htmlEscape="false"/>", field:"detailView", id:"detailView", width:102, cssClass:"glePostQRPopIco", formatter:Slick.Formatters.DetailViewFormater,
						option:{url:'/secure/gle/postingRule/details/', 
								dialogTitle:xenos.title.postingRuleDetail,
								view:'postingRuleDetail',
								popupIcon:true, 
								pkFieldName:'postingRulePk'}},

				{name:"<spring:message code="gle.postingrule.query.label.transactiontype" htmlEscape="false"/>", field:"transactionDescription", id:"transactionDescription", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.cptype" htmlEscape="false"/>", field:"counterpartyType", id:"counterpartyType", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.principalagent" htmlEscape="false"/>", field:"principalAgentFlagDesc", id:"principalAgentFlagDesc", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.insttype" htmlEscape="false"/>", field:"instrumentType", id:"instrumentType", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.market" htmlEscape="false"/>", field:"marketDesc", id:"marketDesc", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.tradetype" htmlEscape="false"/>", field:"tradeType", id:"tradeType", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.subtradetype" htmlEscape="false"/>", field:"subTradeType", id:"subTradeType", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.io" htmlEscape="false"/>", field:"inOutFlagDesc", id:"inOutFlagDesc", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.startend" htmlEscape="false"/>", field:"startEndFlagDesc", id:"startEndFlagDesc", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.pl" htmlEscape="false"/>", field:"plIndicator", id:"plIndicator", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.longshort" htmlEscape="false"/>", field:"longShortFlagDesc", id:"longShortFlagDesc", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.payrecv" htmlEscape="false"/>", field:"payableReceivableFlagDesc", id:"payableReceivableFlagDesc", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.actiontype" htmlEscape="false"/>", field:"actionType", id:"actionType", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.accrualtype" htmlEscape="false"/>", field:"accrualType", id:"accrualType", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.stlmode" htmlEscape="false"/>", field:"settlementMode", id:"settlementMode", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.acctbalancetype" htmlEscape="false"/>", field:"accountBalanceType", id:"accountBalanceType", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.forwardrepoflag" htmlEscape="false"/>", field:"forwardRepoFlag", id:"forwardRepoFlag", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.invaccno" htmlEscape="false"/>", field:"inventoryAccount", id:"inventoryAccount", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.invaccname" htmlEscape="false"/>", field:"inventoryAccountName", id:"inventoryAccountName", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.ndresult" htmlEscape="false"/>", field:"netDownFlagDesc", id:"netDownFlagDesc", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.pwcincometype" htmlEscape="false"/>", field:"pwcIncomeType", id:"pwcIncomeType", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.quasicompby" htmlEscape="false"/>", field:"quasiCompBy", id:"quasiCompBy", width:102, sortable:true},									
				{name:"<spring:message code="gle.postingrule.query.label.reportflag" htmlEscape="false"/>", field:"reportableFlag", id:"reportableFlag", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.wiretype" htmlEscape="false"/>", field:"wireType", id:"wireType", width:102, sortable:true},
				{name:"<spring:message code="gle.postingrule.query.label.status" htmlEscape="false"/>", field:"status", id:"status", width:102, sortable:true, formatter:Slick.Formatters.CancelRecordFormatter},
				{name:"<spring:message code="gle.postingrule.query.label.postingRulePk" htmlEscape="false"/>", field:"postingRulePk", id:"postingRulePk", width:102, sortable:true}
            ];
			var grid_result_settings = {
				enableToolbar:true,
				consolidateActionFlag:false,
				emptyColumnCheck: false,
				buttons:{
					print:true,	
					xls:true,	
					pdf:true,
					xlsPref:true,					
					columnPicker:true,	
					save:true	
				},
				pagingInfo:{
					isNext: isNext,
					url: 'secure/gle/postingRule/query/count.json'
				},
				urls:{
					nextPage : '/secure/gle/postingRule/query/result.json?fetch=next',  
					prevPage : '/secure/gle/postingRule/query/result.json?fetch=previous',
					pdfReport: '/secure/gle/postingRule/query/report.json?outputType=pdf',
					xlsReport: '/secure/gle/postingRule/query/report.json?outputType=xls',
					xlsCurrent: '/secure/gle/postingRule/query/reportPref.json?outputType=xls'
				},
				defaultInvisibleColumns: ["inventoryAccountName","postingRulePk"]
			};
			var row_id = 0;			
            var rec = {};
			<xenos:out escapeXml="false">
            <c:forEach items="${value}" var="dl">
                rec = {};
                row_id+=1;
				rec.id = "xenos_" + row_id;
				rec.postingRulePk = "<c:out value="${dl.postingRulePk}" />";
                rec.transactionDescription= "<c:out value="${dl.transactionDescription}" />";
				rec.counterpartyType = "<c:out value="${dl.counterpartyType}" />";
                rec.principalAgentFlagDesc = "<c:out value="${dl.principalAgentFlagDesc}" />";
                rec.instrumentType = "<c:out value="${dl.instrumentType}" />";
                rec.marketDesc = "<c:out value="${dl.marketDesc}" />";
                rec.tradeType = "<c:out value="${dl.tradeType}" />";
                rec.subTradeType = "<c:out value="${dl.subTradeType}" />";
                rec.inOutFlagDesc = "<c:out value="${dl.inOutFlagDesc}" />";
                rec.startEndFlagDesc = "<c:out value="${dl.startEndFlagDesc}" />";
                rec.plIndicator = "<c:out value="${dl.plIndicator}" />";
                rec.longShortFlagDesc = "<c:out value="${dl.longShortFlagDesc}" />";
                rec.payableReceivableFlagDesc = "<c:out value="${dl.payableReceivableFlagDesc}" />";
                rec.actionType = "<c:out value="${dl.actionType}" />";
                rec.accrualType = "<c:out value="${dl.accrualType}" />";
                rec.settlementMode = "<c:out value="${dl.settlementMode}" />";
                rec.accountBalanceType = "<c:out value="${dl.accountBalanceType}" />";
                rec.forwardRepoFlag = "<c:out value="${dl.forwardRepoFlag}" />";
                rec.inventoryAccount = "<c:out value="${dl.inventoryAccount}" />";
				rec.inventoryAccountName = "<c:out value="${dl.inventoryAccountName}" />";
                rec.netDownFlagDesc = "<c:out value="${dl.netDownFlagDesc}" />";
                rec.pwcIncomeType = "<c:out value="${dl.pwcIncomeType}" />";
                rec.quasiCompBy = "<c:out value="${dl.quasiCompBy}" />";
				rec.reportableFlag = "<c:out value="${dl.reportableFlag}" />";
				rec.wireType = "<c:out value="${dl.wireType}" />";
                rec.status = "<c:out value="${dl.status}" />";
                grid_result_data.push(rec);
            </c:forEach>
			</xenos:out>
        </jsp:body>
    </jsp:element>
</jsp:root>