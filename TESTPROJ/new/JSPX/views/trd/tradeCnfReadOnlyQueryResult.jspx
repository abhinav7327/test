<!--$Id$-->
<!--$Author$-->
<!--$Date$-->
<jsp:root version="2.0" xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:spring="http://www.springframework.org/tags"
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util"
	xmlns:xenos="http://www.nri.co.jp/xenos"
	xmlns:xenosfn="http://www.nri.co.jp/jstl/functions"
	xmlns:jsp="http://java.sun.com/JSP/Page">

	<div class="formItemArea">

		<jsp:directive.page contentType="text/html;charset=UTF-8" />
		<jsp:output omit-xml-declaration="yes" />

		<jsp:element name="script">
		<jsp:attribute name="type">text/javascript</jsp:attribute>
		<jsp:attribute name="src">
				<c:url value="/scripts/xenos.formatters.js" />
			</jsp:attribute>
		<jsp:body></jsp:body>
	</jsp:element>

		<jsp:element name="script">
	<jsp:attribute name="type">text/javascript</jsp:attribute>
		<jsp:body>
			var isNext =<c:out value="${isNext}" />;
			var isPrevious = <c:out value="${isPrevious}" />;
            var pageNo = <c:out value="${pageNo}" />;
			
			var grid_result_data = [];
			var grid_result_columns = [
				{name:"<spring:message code="trd.tradefeed.label.matchestatus"
					htmlEscape="false" />", field:"matchStatusDisp",id:"matchStatusDisp", width:80,sortable:true},
				{name:"<spring:message code="trd.tradeentryaction.label.buysellflag"
					htmlEscape="false" />", field:"buySellFlagDisp",id:"buySellFlagDisp", width:60,sortable:true},
				{name:"<spring:message
					code="trd.tradefeed.label.allocationreferenceno" htmlEscape="false" />", field:"allocationReferenceNo",id:"allocationReferenceNo", width:130,sortable:true , formatter:Slick.Formatters.AllocationTradeDetailViewFormater},
				{name:"<spring:message code="trd.tradefeed.label.confreferenceno"
					htmlEscape="false" />", field:"referenceNo",id:"referenceNo", width:130,sortable:true , formatter:Slick.Formatters.TradeDetailViewFormater, tradepk:'tradePk'},
				{name:"<spring:message
					code="trd.tradequeryaction.label.fundaccountno" htmlEscape="false" />", field:"fundAccountNo",id:"fundAccountNo", width:85,sortable:true, formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'fundAccountPk'}},
				{name:"<spring:message
					code="trd.tradequeryaction.label.fundaccountname"
					htmlEscape="false" />", field:"accountName",id:"accountName", width:110, sortable:true},
				{name:"<spring:message
					code="trd.tradequeryaction.label.securitycode" htmlEscape="false" />", field:"securityId", id:"securityId", width:90,sortable:true ,formatter:Slick.Formatters.InstrumentDetailViewFormater},
				{name:"<spring:message
					code="trd.tradequeryaction.label.securityname" htmlEscape="false" />", field:"securityName", id:"securityName", width:100,sortable:true},
				{name:"<spring:message code="ref.common.label.alternatesecurityid"
					htmlEscape="false" />", field:"alternateSecCodeDisp",  id:"alternateSecCodeDisp", width:100,sortable:true},				
				{name:"<spring:message code="trd.tradefeed.label.tradedate"
					htmlEscape="false" />", field:"tradeDateDisp",id:"tradeDateDisp", width:80, sortable:true},				
				{name:"<spring:message code="trd.tradefeed.label.valuedate"
					htmlEscape="false" />", field:"valueDateDisp",id:"valueDateDisp", width:80, sortable:true},				
				{name:"<spring:message
					code="trd.tradeentryaction.label.brokeraccount" htmlEscape="false" />", field:"brokerAccountNo",id:"brokerAccountNo", width:80,sortable:true, formatter:Slick.Formatters.BrokerAccountDetailFormatter, accountDetailOptions:{pkFieldName:'accountPk' } },
				{name:"<spring:message
					code="trd.tradequeryaction.label.brokeraccname" htmlEscape="false" />", field:"brokerAccountName",id:"brokerAccountName", width:130, sortable:true},
				{name:"<spring:message code="trd.tradeentryaction.label.price"
					htmlEscape="false" />", field:"priceStr",id:"priceStr", width:100,sortable:true, cssClass:'xenos-grid-number'},
				{name:"<spring:message code="trd.tradequeryaction.label.quantity"
					htmlEscape="false" />", field:"quantityDisp",id:"quantityDisp", width:60,sortable:true, cssClass:'xenos-grid-number'},
				{name:"<spring:message code="trd.tradefeed.label.netamount"
					htmlEscape="false" />", field:"netAmountDisp",id:"netAmountDisp", width:90,sortable:true, cssClass:'xenos-grid-number'},
				{name:"<spring:message code="trd.tradequeryaction.label.grossamount"
					htmlEscape="false" />", field:"principalAmountDisp",id:"principalAmountDisp", width:90,sortable:true, cssClass:'xenos-grid-number'},
				{name:"<spring:message code="trd.rcvdconf.label.commission"
					htmlEscape="false" />", field:"commissionAmountDisp",id:"commissionAmountDisp", width:90,sortable:true, cssClass:'xenos-grid-number'},
				{name:"<spring:message
					code="trd.tradeentryaction.label.tradecurrency" htmlEscape="false" />", field:"tradeCcy",id:"tradeCcy",width:84,sortable:true},
				{name:"<spring:message code="trd.rcvdconf.label.status"
					htmlEscape="false" />", field:"status",id:"status",width:80,sortable:true, formatter:Slick.Formatters.CancelRecordFormatter},				
				{name:"<spring:message code="trd.tradefeed.label.affirmed"
					htmlEscape="false" />", field:"affirmedDisp",id:"affirmedDisp", width:80, sortable:true},
				{name:"<spring:message code="trd.tradefeed.label.accepted"
					htmlEscape="false" />", field:"acceptedDisp",id:"acceptedDisp", width:80, sortable:true},
				{name:"<spring:message
					code="trd.tradequeryaction.label.unmatchreason" htmlEscape="false" />", field:"unmatchReasonDesc",id:"unmatchReasonDesc", width:150,sortable:true},
				{name:"<spring:message
					code="trd.tradeentryaction.label.settlementccy" htmlEscape="false" />", field:"settlementCcy",id:"settlementCcy",width:119,sortable:true},
				{name:"<spring:message code="trd.rcvdconf.label.origin.datasrc"
					htmlEscape="false" />", field:"originalDataSource",id:"originalDataSource",width:91,sortable:true},
				{name:"<spring:message
					code="trd.rcvdconf.label.origin.ctmfeed.status" htmlEscape="false" />", field:"ctmFeedStatusDisp",id:"ctmFeedStatusDisp",width:110,sortable:true}
			 ];
			var grid_result_settings = {
				enableToolbar:true,				
				consolidateActionFlag:false,
				buttons:{
					print:true,	
					xls:true,	
					xlsPref:true,
					pdf:true,					
					columnPicker:true,	
					save:true	
				},
				pagingInfo:{
					isNext : isNext,
					isPrevious : isPrevious,
                    pageNo : pageNo,
					url: 'secure/trd/conf/matching/query/count.json'
				},
				resolveBgColor : function(row){
					if(row.matchStatusDisp === 'Confirmed' || row.matchStatusDisp === 'Auto' || row.matchStatusDisp === 'Manual' || row.matchStatusDisp === 'Manual(Multi)' || row.matchStatusDisp === 'Auto(Multi)'){
						return '#a8a8a8';
					}
					return '';
				},
				
				urls:{
					nextPage : '/secure/trd/conf/matching/query/result.json?fetch=next',
					prevPage : '/secure/trd/conf/matching/query/result.json?fetch=previous',
					pdfReport: '/secure/trd/conf/matching/query/report.json?outputType=pdf',					
					xlsReport: '/secure/trd/conf/matching/query/report.json?outputType=xls',
					xlsCurrent: '/secure/trd/conf/matching/query/reportPref.json?outputType=xls'
				},
				events:{
					onDataUpdate : function(data,callback){
						for(i in data.value){							
							data.value[i].fundAccountPk= data.value[i].inventoryAccountPk;
							data.value[i].accountPk= data.value[i].accountPk;
							data.value[i].fundAccountNo= data.value[i].prefix + ";" + data.value[i].fundAccountNo;
							data.value[i].inventoryPk= data.value[i].inventoryPk;
						}
						callback(data);
					}
				},	
				
				defaultInvisibleColumns: ["accountName", "brokerAccountName", "settlementCcy", "originalDataSource", "ctmFeedStatusDisp"]		
			};
			var row_id = 0;			
			var rec = {};
			<xenos:out escapeXml="false">
				<c:forEach items="${value}" var="dl">
					rec = {};
					row_id+=1;
					rec.id = "xenos_" + row_id;
					rec.matchStatusDisp = "<c:out value="${dl.matchStatusDisp}" />";
					rec.buySellFlagDisp = "<c:out value="${dl.buySellFlagDisp}" />";
					rec.allocationReferenceNo = "<c:out
							value="${dl.allocationReferenceNo}" />";
					rec.tradePk= "<c:out value="${dl.tradePk}" />";
					rec.allocationTradePk= "<c:out value="${dl.allocationTradePk}" />";
					rec.fundAccountNo= "<c:out value="${dl.prefix};${dl.fundAccountNo}" />";
					rec.accountName= "<c:out value="${dl.accountName}" />";					
					rec.securityId="<c:out value="${dl.securityId}" />";
					rec.securityName="<c:out value="${dl.securityName}" />";
					rec.alternateSecCodeDisp="<c:out value="${dl.alternateSecCodeDisp}" />";  
					rec.tradeDateDisp = "<c:out value="${dl.tradeDateDisp}" />";	
					rec.valueDateDisp = "<c:out value="${dl.valueDateDisp}" />";					
					rec.brokerAccountNo = "<c:out value="${dl.brokerAccountNo}" />";
					rec.brokerAccountName= "<c:out value="${dl.brokerAccountName}" />";
					rec.priceStr = "<c:out value="${dl.priceStr}" />";
					rec.quantityDisp = "<c:out value="${dl.quantityDisp}" />";
					rec.netAmountDisp = "<c:out value="${dl.netAmountDisp}" />";
					rec.principalAmountDisp = "<c:out value="${dl.principalAmountDisp}" />";
					rec.commissionAmountDisp = "<c:out
							value="${dl.commissionAmountDisp}" />";
					rec.tradeCcy = "<c:out value="${dl.tradeCcy}" />";
					rec.status = "<c:out value="${dl.status}" />";
					rec.affirmedDisp = "<c:out value="${dl.affirmedDisp}" />";
					rec.acceptedDisp = "<c:out value="${dl.acceptedDisp}" />";
					rec.unmatchReasonDesc = "<c:out value="${dl.unmatchReasonDesc}" />";
					rec.settlementCcy = "<c:out value="${dl.settlementCcy}" />";	
					rec.originalDataSource = "<c:out value="${dl.originalDataSource}" />";
					rec.ctmFeedStatusDisp = "<c:out value="${dl.ctmFeedStatusDisp}" />";
					rec.fundAccountPk = "<c:out value="${dl.inventoryAccountPk}" />";
					rec.accountPk = "<c:out value="${dl.accountPk}" />";
					rec.instrumentPk = "<c:out value="${dl.instrumentPk}" />";
					rec.referenceNo = "<c:out value="${dl.referenceNo}" />";
					
					grid_result_data.push(rec);
				</c:forEach>
			</xenos:out>
		</jsp:body>
	</jsp:element>
	</div>
</jsp:root>