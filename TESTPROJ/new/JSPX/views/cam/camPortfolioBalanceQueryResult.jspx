<!--$Id$-->
<!--$Author$-->
<!--$Date$-->
<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:fn="http://java.sun.com/jsp/jstl/functions"
     xmlns:spring="http://www.springframework.org/tags"
     xmlns:form="http://www.springframework.org/tags/form"
	 xmlns:xenos="http://www.nri.co.jp/xenos"
	 xmlns:xenosfn ="http://www.nri.co.jp/jstl/functions"
     xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
     
<jsp:directive.page contentType="text/html;charset=UTF-8" /> 
    <jsp:output omit-xml-declaration="yes" /> 
    
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:attribute name="src"><c:url value="/scripts/xenos.formatters.js"/></jsp:attribute>
        <jsp:body></jsp:body>
    </jsp:element>   
     
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
            var isNext = <c:out value="${isNext}" />;
            var isPrevious = <c:out value="${isPrevious}" />;
			var pageNo = <c:out value="${pageNo}" />;
            var grid_result_data = [];
			  var grid_result_columns = [
				{name:"<spring:message code="cam.portfoliobalance.summary.label.fundaccountno" htmlEscape="false"/>", field:"accountNoDisp", id:"accountNoDisp", width:115,formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'fundAccountPk'},sortable:true},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.fundaccountname" htmlEscape="false"/>", field:"accountName", id:"accountName", width:115, sortable:true},
				{name:"<spring:message code="ref.fund.label.fundcode" htmlEscape="false"/>", field:"fundCode", id:"fundCode", width:115,formatter:Slick.Formatters.FundDetailViewFormatter,sortable:true},
				{name:"<spring:message code="ref.fund.label.fundName" htmlEscape="false"/>", field:"fundName", id:"fundName", width:115, sortable:true},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.securitycodedefault" htmlEscape="false"/>", field:"securityId", id:"securityId", width:115,formatter:Slick.Formatters.InstrumentDetailViewFormater,sortable:true},				
				{name:"<spring:message code="cam.portfoliobalance.summary.label.securityname" htmlEscape="false"/>", field:"instrumentName", id:"instrumentName", width:130, sortable:true},
				{name:"<spring:message code="cam.security.label.alternatesecurity" htmlEscape="false"/>", field:"alternateSecurity", id:"alternateSecurity", width:115, sortable:true},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.basedate" htmlEscape="false"/>", field:"baseDateDisp", id:"baseDateDisp", width:115, sortable:true},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.position" htmlEscape="false"/>", field:"formattedPosition",id:"formattedPosition", width:150, sortable:true,formatter:Slick.Formatters.CamBalanceQueryFormatter,cssClass:'xenos-grid-number'},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.ccy" htmlEscape="false"/>", field:"ccy",id:"ccy", width:115, sortable:true},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.bookvalue" htmlEscape="false"/>", field:"formattedBookValue",id:"formattedBookValue", width:150, sortable:true,formatter:Slick.Formatters.CamNegetiveBalanceFormatter,cssClass:'xenos-grid-number'},				
				{name:"<spring:message code="cam.portfoliobalance.summary.label.costpershare" htmlEscape="false"/>", field:"formattedCost",id:"formattedCost", width:136, sortable:true,formatter:Slick.Formatters.NegetiveBalanceFormatter,cssClass:'xenos-grid-number'},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.pl" htmlEscape="false"/>", field:"formattedProfitLoss",id:"formattedProfitLoss", width:150, sortable:true,formatter:Slick.Formatters.NegetiveBalanceFormatter,cssClass:'xenos-grid-number'},				
				{name:"<spring:message code="cam.portfoliobalance.summary.label.mtdprofitloss" htmlEscape="false"/>", field:"formattedMtdProfitLoss",id:"formattedMtdProfitLoss", width:150, sortable:true,formatter:Slick.Formatters.NegetiveBalanceFormatter,cssClass:'xenos-grid-number'},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.ytdprofitloss" htmlEscape="false"/>", field:"formattedYtdProfitLoss",id:"formattedYtdProfitLoss", width:150, sortable:true,formatter:Slick.Formatters.NegetiveBalanceFormatter,cssClass:'xenos-grid-number'},
				{name:"<spring:message code="cam.portfoliobalance.summary.label.ltdprofitloss" htmlEscape="false"/>", field:"formattedLtdProfitLoss",id:"formattedLtdProfitLoss", width:150, sortable:true,formatter:Slick.Formatters.NegetiveBalanceFormatter,cssClass:'xenos-grid-number'}
              ];
			var grid_result_settings = {
                enableToolbar:true,                
                buttons:{
                    print:true, 
                    xls:true,
                    pdf:true,
                    xlsPref:true,
                    columnPicker:true,  
                    save:true   
                },
                pagingInfo:{
                    isNext : isNext,
					isPrevious : isPrevious,
					pageNo : pageNo,
                    url: '/secure/cam/portfoliobalance/query/count.json'
                },
                urls:{
                    nextPage : '/secure/cam/portfoliobalance/query/result.json?fetch=next',
                    prevPage : '/secure/cam/portfoliobalance/query/result.json?fetch=previous',
                    pdfReport: '/secure/cam/portfoliobalance/query/report.json?outputType=pdf',
                    xlsReport: '/secure/cam/portfoliobalance/query/report.json?outputType=xls',
                    xlsCurrent:'/secure/cam/portfoliobalance/query/reportPref.json?outputType=xls'
                },
				events:{
					onDataUpdate: function(data,continueUpdate){
						for(i in data.value){							
							data.value[i].fundAccountPk = data.value[i].accountPk;
							data.value[i].accountDisplayName = data.value[i].accountNoDisp;
							data.value[i].baseDate = "${commandForm.baseDate}";
							data.value[i].balanceBasis = "${commandForm.balanceBasis}";
							data.value[i].balanceBasisLabel= "${commandForm.balanceBasisLabel}";
						}
						continueUpdate(data);
					}
				},
				defaultInvisibleColumns:['accountName','ccy']
            };
            var row_id = 0;         
            var rec = {};
			<xenos:out escapeXml="false">
				<c:forEach items="${value}" var="dl">
					rec = {};
					row_id+=1;
					rec.commandFormId="${requestScope['commandFormId']}";
					rec.id = "xenos_" + row_id;					
					rec.instrumentPk = "<c:out value="${dl.instrumentPk}"/>";
					rec.fundPk = "<c:out value="${dl.fundPk}"/>";
					rec.fundAccountPk = "<c:out value="${dl.accountPk}"/>";
					rec.accountNoDisp= "<c:out value="${dl.accountNoDisp}" />";
					rec.accountName= "<c:out value="${dl.accountName}" />";
					rec.fundCode= "<c:out value="${xenosfn:escapeJS(dl.fundCode)}" />"; 
					rec.fundName= "<c:out value="${xenosfn:escapeJS(dl.fundName)}" />";
					rec.securityId= "<c:out value="${dl.securityId}" />";					
					rec.instrumentName= "<c:out value="${dl.instrumentName}" />";
					rec.alternateSecurity= "<c:out value="${dl.alternateSecurity}" />";
					rec.baseDateDisp= "<c:out value="${dl.baseDateDisp}" />";
					rec.formattedPosition= "<c:out value="${dl.formattedPosition}" />";
					rec.ccy= "<c:out value="${dl.ccy}" />";
					rec.formattedBookValue= "<c:out value="${dl.formattedBookValue}"/>";																
					rec.formattedCost= "<c:out value="${dl.formattedCost}" />";
					rec.formattedProfitLoss= "<c:out value="${dl.formattedProfitLoss}" />";					
					rec.formattedMtdProfitLoss= "<c:out value="${dl.formattedMtdProfitLoss}" />";
					rec.formattedYtdProfitLoss= "<c:out value="${dl.formattedYtdProfitLoss}" />";
					rec.formattedLtdProfitLoss= "<c:out value="${dl.formattedLtdProfitLoss}" />";
					rec.baseDate= "<c:out value="${commandForm.baseDate}" />";
					rec.balanceBasis= "<c:out value="${commandForm.balanceBasis}" />";
					rec.accountDisplayName= "<c:out value="${dl.accountNoDisp}" />";
					rec.displayBalanceInRed= "<c:out value="${dl.displayBalanceInRed}" />";
					rec.balanceBasisLabel= "<c:out value="${commandForm.balanceBasisLabel}" />";
					grid_result_data.push(rec);
				 </c:forEach>
			 </xenos:out>
        </jsp:body>
    </jsp:element>	
</jsp:root>