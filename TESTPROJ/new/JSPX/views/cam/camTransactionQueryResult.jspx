<!--$Id$-->
<!--$Author$-->
<!--$Date$-->
<jsp:root version="2.0"
    xmlns:c="http://java.sun.com/jsp/jstl/core" 
	xmlns:fn="http://java.sun.com/jsp/jstl/functions" 
	xmlns:spring="http://www.springframework.org/tags" 
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" 
	xmlns:xenos="http://www.nri.co.jp/xenos"
	xmlns:jsp="http://java.sun.com/JSP/Page">
	
	<jsp:directive.page contentType="text/html;charset=UTF-8" /> 
	<jsp:output	omit-xml-declaration="yes" />
	
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
            var isNext = <c:out value="${isNext}" />;
            var isPrevious = <c:out value="${isPrevious}" />;
			var pageNo = <c:out value="${pageNo}" />;
            var grid_result_data = [];
            var grid_result_columns = [				
				{name:"<spring:message code="cam.transactionquery.label.transactionrefno" htmlEscape="false"/>", field:"transactionRefNoDisplay", id:"transactionRefNoDisplay", sortable: false, width:300, formatter:Slick.Formatters.CamTransactionDetailFormatter},
                {name:"<spring:message code="cam.transactionquery.label.description" htmlEscape="false"/>", field:"description", id:"description", width:830},
				{name:"<spring:message code="ref.label.app_regi_date" htmlEscape="false"/>", field:"entryDateDisp", id:"entryDateDisp", sortable: false, width:152},
				{name:"<spring:message code="ref.label.app_upd_date" htmlEscape="false"/>", field:"lastEntryDateDisp", id:"lastEntryDateDisp", sortable: false, width:252},
				{name:"<spring:message code="ref.label.creation_date" htmlEscape="false"/>", field:"entryDateSystemDisp", id:"entryDateSystemDisp", sortable: false, width:152},
				{name:"<spring:message code="ref.label.update_date" htmlEscape="false"/>", field:"lastEntryDateSystemDisp", id:"lastEntryDateSystemDisp", sortable: false, width:152},				                                             
                {name:"<spring:message code="cam.transactionquery.label.amount.movement" htmlEscape="false"/>", field:"amountDisplay", cssClass: 'xenos-grid-number', id:"amountDisplay", width:190, sortable: false},
                {name:"<spring:message code="cam.transactionquery.label.balance" htmlEscape="false"/>", field:"balanceDisplay", cssClass: 'xenos-grid-number', id:"balanceDisplay", width:130, sortable:false, formatter:Slick.Formatters.NegetiveBalanceFormatter},
                {name:"<spring:message code="cam.transactionquery.label.status" htmlEscape="false"/>", field:"status", id:"status", width:150, sortable:false, formatter:Slick.Formatters.CancelRecordFormatter}
            ];
            var grid_result_settings = {
				enableToolbar:true,
				consolidateActionFlag:false,
				buttons: {
					print:true,	
					xls:true,	
					pdf:true,	
					xlsPref:true,
					columnPicker:true,	
					save:true	
				},
				pagingInfo:{
					isNext : isNext,
					isPrevious : isPrevious,
					pageNo : pageNo,
					url: '/secure/cam/transaction/query/count.json'
				},
				urls:{
					nextPage : '/secure/cam/transaction/query/result.json?fetch=next',
					prevPage : '/secure/cam/transaction/query/result.json?fetch=previous',
					pdfReport: '/secure/cam/transaction/query/report.json?outputType=pdf',
					xlsReport: '/secure/cam/transaction/query/report.json?outputType=xls',
					xlsCurrent: '/secure/cam/transaction/query/reportPref.json?outputType=xls'
				},		
				events:{
					onDataUpdate: function(data,continueUpdate){
						for(i in data.value){
							data.value[i].module = data.value[i].sourceComponentId;
						}
						continueUpdate(data);
					}
				},
				 defaultInvisibleColumns: ["entryDateDisp","entryDateSystemDisp","lastEntryDateSystemDisp"]
			};
            var row_id = 0;
            var rec = {};
			<xenos:out escapeXml="false">
            <c:forEach items="${value}" var="dl">
                rec = {};
                row_id+=1;
				rec.id = "xenos_" + row_id;
				rec.transactionRefNoDisplay= "<c:out value="${dl.transactionRefNoDisplay}" />";
				rec.description= "<c:out value="${dl.description}"/>";
				rec.entryDateDisp= "<c:out value="${dl.entryDateDisp}"/>";
				rec.lastEntryDateDisp= "<c:out value="${dl.lastEntryDateDisp}"/>";
				rec.entryDateSystemDisp= "<c:out value="${dl.entryDateSystemDisp}"/>";
				rec.lastEntryDateSystemDisp= "<c:out value="${dl.lastEntryDateSystemDisp}"/>";
                rec.amountDisplay = "<c:out value="${dl.amountDisplay}" />";
                rec.balanceDisplay = "<c:out value="${dl.balanceDisplay}" />";
                rec.status = "<c:out value="${dl.status}" />";
				rec.module = "<c:out value="${dl.module}" />";
				rec.triggeringTxnPk="<c:out value="${dl.triggeringTxnPk}" />";
                grid_result_data.push(rec);
            </c:forEach>
			</xenos:out>
        </jsp:body>
    </jsp:element>
</jsp:root>