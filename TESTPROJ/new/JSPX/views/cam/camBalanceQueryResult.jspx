<!--$Id$-->
<!--$Author$-->
<!--$Date$-->
<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:fn="http://java.sun.com/jsp/jstl/functions"
     xmlns:spring="http://www.springframework.org/tags"
     xmlns:form="http://www.springframework.org/tags/form"
	 xmlns:xenos="http://www.nri.co.jp/xenos"
	 xmlns:xenosfn ="http://www.nri.co.jp/jstl/functions"
     xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
     
<jsp:directive.page contentType="text/html;charset=UTF-8" /> 
    <jsp:output omit-xml-declaration="yes" /> 
    
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:attribute name="src"><c:url value="/scripts/xenos.formatters.js"/></jsp:attribute>
        <jsp:body></jsp:body>
    </jsp:element>   
     
    <jsp:element name="script">
        <jsp:attribute name="type">text/javascript</jsp:attribute>
        <jsp:body>
            var isNext = <c:out value="${isNext}" />;
            var isPrevious = <c:out value="${isPrevious}" />;
			var pageNo = <c:out value="${pageNo}" />;
            var grid_result_data = [];
			  var grid_result_columns = [
			  	{name:"<spring:message code="cam.balancequery.label.fundcode" htmlEscape="false"/>", field:"fundCode", id:"fundCode", width:130, sortable:true, formatter:Slick.Formatters.FundDetailViewFormatter},
				{name:"<spring:message code="cam.cashsecurity.label.fundname" htmlEscape="false"/>", field:"fundName", id:"fundName", width:150, sortable:true},
				{name:"<spring:message code="cam.balance.summary.label.fundaccountno" htmlEscape="false"/>", field:"accountDisplayName", id:"accountDisplayName", width:120, sortable:true, formatter:Slick.Formatters.AccountCommonDetailViewFormatter, accountDetailOptions:{pkFieldName:'accountPk'} },
				{name:"<spring:message code="cam.balance.summary.label.fundaccountname" htmlEscape="false"/>", field:"accountShortName", id:"accountShortName", width:140, sortable:true},
				{name:"<spring:message code="cam.balance.summary.label.officeid" htmlEscape="false"/>", field:"officeId", id:"officeId", width:80, sortable:true},
				{name:"<spring:message code="cam.balance.query.label.securitycode" htmlEscape="false"/>", field:"securityId", id:"securityId", width:120, sortable:true, formatter:Slick.Formatters.InstrumentDetailViewFormater},
				{name:"<spring:message code="cam.balance.summary.label.securityname" htmlEscape="false"/>", field:"instrumentShortName", id:"instrumentShortName", width:257, sortable:true},
				{name:"<spring:message code="cam.security.label.alternatesecurity" htmlEscape="false"/>", field:"alternateSecurity", id:"alternateSecurity", width:180, sortable:true},
				{name:"<spring:message code="cam.balance.query.label.issuecurrency" htmlEscape="false"/>", field:"issueCurrency", id:"issueCurrency", width:150, sortable:true},
				{name:"<spring:message code="cam.balance.summary.label.lastactivitydate" htmlEscape="false"/>", field:"formattedLastActivityDate",id:"formattedLastActivityDate", width:150, sortable:true},
				{name:"<spring:message code="cam.balance.summary.label.balance" htmlEscape="false"/>", field:"formattedBalance",id:"formattedBalance", width:128, cssClass:'xenos-grid-number', sortable:true, formatter:Slick.Formatters.CamBalanceQueryFormatter},
				{name:"<spring:message code="cam.balance.summary.label.ledger" htmlEscape="false"/>", field:"ledgerId",id:"ledgerId", width:252, sortable:true}
              ];
			var grid_result_settings = {
                enableToolbar:true,
                consolidateActionFlag:false,
                buttons:{
                    print:true, 
                    xls:true,
                    pdf:true,
                    xlsPref:true,
                    columnPicker:true,  
                    save:true   
                },
                pagingInfo:{
                    isNext : isNext,
					isPrevious : isPrevious,
					pageNo : pageNo,
                    url: '/secure/cam/balance/query/count.json'
                },
                urls:{
                    nextPage : '/secure/cam/balance/query/result.json?fetch=next',
                    prevPage : '/secure/cam/balance/query/result.json?fetch=previous',
                    pdfReport: '/secure/cam/balance/query/report.json?outputType=pdf',
                    xlsReport: '/secure/cam/balance/query/report.json?outputType=xls',
                    xlsCurrent: '/secure/cam/balance/query/reportPref.json?outputType=xls'
                },
				events:{
					onDataUpdate: function(data,continueUpdate){
						for(i in data.value){
							data.value[i].baseDate = "${commandForm.baseDate}";
							data.value[i].balanceBasis = "${commandForm.balanceBasis}";
							data.value[i].balanceBasisLabel= "${commandForm.balanceBasisLabel}";
						}
						continueUpdate(data);
					}
				},
				defaultInvisibleColumns: [
					"accountShortName"
				]
            };
            var row_id = 0;         
            var rec = {};
			<xenos:out escapeXml="false">
				<c:forEach items="${value}" var="dl">
					rec = {};
					row_id+=1;
					rec.id = "xenos_" + row_id;
					rec.fundCode= "<c:out value="${xenosfn:escapeJS(dl.fundCode)}" />"; 
					rec.fundName= "<c:out value="${xenosfn:escapeJS(dl.fundName)}" />";
					rec.accountDisplayName= "<c:out value="${xenosfn:escapeJS(dl.accountDisplayName)}" />";
					rec.accountShortName= "<c:out value="${dl.accountShortName}" />";
					rec.officeId = "<c:out value="${xenosfn:escapeJS(dl.officeId)}" />";
					rec.securityId= "<c:out value="${xenosfn:escapeJS(dl.securityId)}" />";
					rec.instrumentShortName= "<c:out value="${dl.instrumentShortName}" />";
					rec.alternateSecurity= "<c:out value="${dl.alternateSecurity}" />";
					rec.issueCurrency= "<c:out value="${dl.issueCurrency}" />";
					rec.formattedLastActivityDate= "<c:out value="${dl.formattedLastActivityDate}" />";
					rec.formattedBalance= "<c:out value="${dl.formattedBalance}" />";
					rec.ledgerId= "<c:out value="${dl.ledgerId}" />";
					rec.fundPk= "<c:out value="${dl.fundPk}" />";
					rec.accountPk= "<c:out value="${dl.accountPk}" />";
					rec.instrumentPk= "<c:out value="${dl.instrumentPk}" />";
					rec.accountNo= "<c:out value="${dl.accountNo}" />";
					rec.baseDate= "<c:out value="${commandForm.baseDate}" />";
					rec.balanceBasis= "<c:out value="${commandForm.balanceBasis}" />";
					rec.displayBalanceInRed= "<c:out value="${dl.displayBalanceInRed}" />";
					rec.balanceBasisLabel= "<c:out value="${commandForm.balanceBasisLabel}" />";
					grid_result_data.push(rec);
				 </c:forEach>
			 </xenos:out>	
        </jsp:body>
    </jsp:element>	
</jsp:root>