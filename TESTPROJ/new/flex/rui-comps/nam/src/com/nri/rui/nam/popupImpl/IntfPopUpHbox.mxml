<?xml version="1.0" encoding="utf-8"?>

<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" horizontalGap="0" xmlns:xenos="com.nri.rui.core.controls.*">
     <!-- The interfaceId auto complete input box-->
         <mx:TextInput id="interfaceId" width="100" focusOut="focusHandler()"  restrict="{Globals.INPUT_PATTERN}"/>
     <!-- The interfaceId popup control-->
     <mx:Image id="intfPopup" source="@Embed('../../../../../assets/popup_icon.png')"
               verticalAlign="middle" horizontalAlign="center" click="showPopUp(recContextItem,retContextItem);"/>
     <mx:Metadata>
		[Event(name="preClick",type="flash.events.Event")]
	 </mx:Metadata>
     <mx:Script>
        <![CDATA[
        	import com.nri.rui.core.startup.XenosApplication;
        	import com.nri.rui.core.Globals;
	        //start of script
	        import mx.managers.PopUpManager;
	        import com.nri.rui.core.utils.HiddenObject;
	        import com.nri.rui.nam.popupImpl.IntfPopup;
	        import mx.collections.ArrayCollection;
	        import mx.core.UIComponent;

		   [Bindable]
           public var intfQueryMode:String = "";

           [Bindable]
           //Items returning through context - Non display objects
           public var retContextItem:ArrayCollection = new ArrayCollection();
           [Bindable]
           //Items receiving through context - Non display objects
           public var recContextItem:ArrayCollection = new ArrayCollection();

           //This boolean check whether fund code is empty or not
           [Bindable]
           public var fundCodeCheck:Boolean = true;

           private var popUpPoint:Point = new Point();

		   private var xApp:XenosApplication = XenosApplication.getInstance(Globals.DEFAULT_ENTERPRISE);
			
	       private function focusHandler():Boolean {
	   			dispatchEvent(new Event("inputEvent"));
	   			return true;
	   	   }

        /*
         * Open the Interface PopUp Window.
         * Cast the return value of the createPopUp() method
         * to interfacePopup, the name of the component containing
         *  the PopupWindow container
         */
        private function showPopUp(recCtxItems:ArrayCollection,
                                   retCtxItem:ArrayCollection):void {

            dispatchEvent(new Event("preClick"));
            if(fundCodeCheck == true){
	            if (recCtxItems == null){
	                recCtxItems = new ArrayCollection();
	            }

	            if (retCtxItem == null){
	                retCtxItem = new ArrayCollection();
	            }
	            //create the interfaceId popup
	            var intfIdPopup:IntfPopup=IntfPopup
	            (PopUpManager.createPopUp( UIComponent(this.parentApplication), IntfPopup , true));

	            //Center the Popup Window in the Application's container
	            PopUpManager.centerPopUp(intfIdPopup);
	            /* Pass a reference to the AutoComplete control
	             * to the PopUpWindow container so that the
	             * PopUpWindow container can return data to the main application.
	             */
	            intfIdPopup.retTxtInput=interfaceId;
	            // Pass a reference to the returnning context items
	            intfIdPopup.returnContextItems = retCtxItem;
	            // Pass a reference to the popup context items
	            intfIdPopup.receiveCtxItems = recCtxItems;
	            // Pass QueryMode value to popup Query/Resend
	            intfIdPopup.intfQueryMode = this.intfQueryMode;
	            
	            xApp.submitButtonInstance = intfIdPopup.search;
	            
	            //initialize the account popup
	            intfIdPopup.initPopup();
	           }
        }
        //end of script
        ]]>
    </mx:Script>
</mx:HBox>