<?xml version="1.0" encoding="utf-8"?>

    
<cntrls:ResizeWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:cntrls="com.nri.rui.core.controls.*"
    showCloseButton="true" close="closeWindow()" width="400" height="275"
    paddingTop="40" paddingBottom="16" paddingRight="16" paddingLeft="16" verticalGap="8"
    title="Change Password" styleName="PopupTitleWindow"
    horizontalAlign="center" showEffect="WipeDown"
    hideEffect="WipeUp" addedEffect="WipeDown" removedEffect="WipeUp" 
    creationComplete="loadAll()">
   
    <mx:Script>
        <![CDATA[
            import mx.utils.StringUtil;
            import mx.collections.ArrayCollection;
            import mx.managers.PopUpManager;
            import com.nri.rui.core.controls.XenosAlert;
 
     import flash.events.IEventDispatcher;
     import flash.net.URLRequest;
     
     import mx.controls.Alert;
     import mx.events.CloseEvent;
     import mx.events.ResourceEvent;
     import mx.resources.ResourceBundle;
     import mx.rpc.events.ResultEvent;
    
    public function closeWindow():void {
           this.parentDocument.btnChangePasswd.enabled=true;
           PopUpManager.removePopUp(this);
    }
        
    private function loadAll():void{
     
    }
    
    private function initPageStart():void {  
        var reqObj:Object = new Object();
        reqObj.method = "initialExecute";
        reqObj.rnd = Math.random();  
        //reqObj.pwdChange = "pwdChange"; 
        initPasswdChngScreen.request = reqObj;                     
        initPasswdChngScreen.send();       
     } 
     
     
     private function loadInitialData(event:ResultEvent):void {
        
        try {   
                errPage.clearError(event); //clears the errors if any
                if((event.result.employeePasswordChangeActionForm.dispMsg != null) ||
                            (StringUtil.trim(event.result.employeePasswordChangeActionForm.dispMsg) != "")) {
                    XenosAlert.info(event.result.employeePasswordChangeActionForm.dispMsg.toString());
                } 
                userId.text = event.result.employeePasswordChangeActionForm.userId;
        } catch (er:Error) {
            XenosAlert(er.message);
        }
     }
     
     private function requestValidate():void {
        var reqObj:Object = new Object();
        reqObj.method = "doConfirm";
        reqObj.userId = this.userId.text;
        reqObj.currentPassword = this.currentPassword.text;
        reqObj.newPassword = this.newPassword.text;
        reqObj.confirmedPassword = this.confirmedPassword.text;
        reqObj.rnd = Math.random();
        //reqObj.pwdChange = "pwdChange";
        validateChngdPasswd.request = reqObj;
        validateChngdPasswd.send(); 
        
     }
     
      
     private function askConfirmation(event:ResultEvent):void {
        if (null != event) {            
                if(null == event.result.XenosErrors){ 
                    errPage.clearError(event); //clears the errors if any
                    XenosAlert.confirm("Your password is going to be changed. " + 
                    "After that you will be returned to login screen " + 
                    "to re-login with the new password.", checkConfirmation); 
                } else { // Must be error
                    checkWhetherAccountLocked(event);
                    errPage.displayError(event);    
                }
        }
     }
     
     private function checkConfirmation(event:CloseEvent):void {
        if(event.detail == Alert.YES){
            var reqObj:Object = new Object();
            reqObj.method = "doSave";
            reqObj.rnd = Math.random();
            //reqObj.pwdChange = "pwdChange";
            commitChngdPasswd.request = reqObj;
            commitChngdPasswd.send(); 
        }
            
     }
     
     private function checkWhetherAccountLocked(event:ResultEvent):void{
        var tmpColl:ArrayCollection = new ArrayCollection();
        var i:int;
        //XenosAlert.info("Inside check");
        if(event.result.XenosErrors.Errors.error is ArrayCollection){
                tmpColl = event.result.XenosErrors.Errors.error;
        }else {
                //tmpColl = event.result.XenosErrors.Errors.error;
                tmpColl.addItem(event.result.XenosErrors.Errors.error);
        }
        for(i=0;i<tmpColl.length;i++){
            //XenosAlert.info("Inside loop:"+StringUtil.trim(tmpColl[i]));
            if(StringUtil.trim(tmpColl[i])
                        .indexOf("Invalid Password. Your account has been locked.")>=0)
                XenosAlert.info("Invalid Password. Your account has been locked.",handleAccountLocked);
        }
        
     }
     
     private function handleAccountLocked(event:CloseEvent):void{
        if(event.detail == Alert.OK){
            doLogOut();
        }
     }
     
     private function onResult(event:ResultEvent):void{
        if (null != event) {            
                if(event.result.XenosErrors!=null){ 
                        errPage.displayError(event);    
                }
                else{
                    doLogOut();
                }
        }
     }
     
     private function loginScreen(event:ResultEvent){
        var url:String = "main.action?unique="+new Date().getTime();
        var request:URLRequest = new URLRequest(url);
        request.method = "POST";
        try {
            navigateToURL(request,"_top");
        }
            catch (e:Error) {
        // handle error here
            trace(e);
        }       
     }
     
       
     private function handleCancelBtn():void{
        if(this.isPopUp==true)
            closeWindow();
        else{
            XenosAlert.confirm("Password Change is mandatory. " + 
                    "If you cancel this, you will be redirected to the log-in " + 
                    "page. Are you sure you want to cancel?",handleConfirmLogout);
        }
     }
     
     private function handleConfirmLogout(event:CloseEvent):void {
        if(event.detail == Alert.YES){
            doLogOut();
        }
            
     }
     
     private function doLogOut():void{
        var req : Object = new Object();
        req.unique = new Date().getTime() + "";
        //req.pwdChange = "pwdChange";
        logout.request = req;
        logout.send();
     }
 
     public function set Top(value:int):void
     {
        this.x=value;
     }
            
     public function set Left(value:int):void
     {
        this.y=value;
     }
            
            

     ]]>
    </mx:Script>
    <mx:HTTPService id="logout" url="logout.action" method="POST" 
        result="loginScreen(event)" 
        fault="XenosAlert.error('Error Occured Initialize :  ' + event.fault.faultString)" />
    <cntrls:XenosHTTPService id="initPasswdChngScreen" 
        fault="XenosAlert.error('Error Occured Initialize :  ' + event.fault.faultString)" 
        method="POST" useProxy="false" 
        url = "ref/employeePasswordChangeDispatch.action?"
        result="loadInitialData(event)" 
        showBusyCursor="true"/>
             
    <cntrls:XenosHTTPService id="validateChngdPasswd" 
         url="ref/employeePasswordChangeDispatch.action?" 
         fault="XenosAlert.error('Error Occured :  ' + event.fault.faultString)"
         result="askConfirmation(event)" showBusyCursor="true">
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="commitChngdPasswd" 
                    url="ref/employeePasswordChangeDispatch.action?"
                    fault="XenosAlert.error('Error Occured :  ' + event.fault.faultString)"
                    result="onResult(event)"
                    showBusyCursor="true">
    </cntrls:XenosHTTPService>
    
    <mx:Canvas width="100%" height="100%" creationComplete="initPageStart()">
    
        <mx:VBox width="100%" >
    
            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none" wordWrap="true"/>
            <mx:Grid width="100%" borderThickness="0" horizontalAlign="center">
                <mx:GridRow width="100%">
                    <mx:GridItem width="40%" borderThickness="0">
                        <mx:Label id="userNameLabel" 
                            text="User Id"/>
                    </mx:GridItem>
                    <mx:GridItem width="60%" borderThickness="0">
                        <mx:Label id="userId"/>
                    </mx:GridItem>
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="40%" borderThickness="0">
                        <mx:Label id="currentPasswordLabel" 
                            text="Current Password"/>
                    </mx:GridItem>
                    <mx:GridItem width="60%" borderThickness="0">
                        <mx:TextInput id="currentPassword" text="" displayAsPassword="true"/>
                    </mx:GridItem>
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="40%" borderThickness="0">
                        <mx:Label id="newPasswordLabel" 
                            text="New Password"/>
                    </mx:GridItem>
                    <mx:GridItem width="60%" borderThickness="0">
                        <mx:TextInput id="newPassword" text="" displayAsPassword="true"/>
                    </mx:GridItem>
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="40%" borderThickness="0">
                        <mx:Label id="confirmedPasswordLabel" 
                            text="Confirm Password"/>   
                    </mx:GridItem>
                    <mx:GridItem width="60%" borderThickness="0">
                        <mx:TextInput id="confirmedPassword" text="" displayAsPassword="true"/>
                    </mx:GridItem>
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="40%" borderThickness="0">
                        <mx:Label text=""/> 
                    </mx:GridItem>
                    <mx:GridItem width="60%" borderThickness="0">                           
                        <mx:HBox width="100%">
                            <cntrls:XenosButton 
                                label="Update" 
                                id="submit" styleName="BtnStyle" click="requestValidate()"/>
                            <mx:Button 
                                label="Cancel"
                                styleName="BtnStyle" click="handleCancelBtn()"/>
                        </mx:HBox>
                    </mx:GridItem>
                </mx:GridRow>
            </mx:Grid>
        
        </mx:VBox>
            
     </mx:Canvas>
</cntrls:ResizeWindow>
