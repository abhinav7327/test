<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" horizontalGap="0" xmlns:xenos="com.nri.rui.core.controls.*" >
     <!-- The account no auto complete input box-->
     <!--xenos:AutoComplete id="accountNo"   mapping="ref/accountPopupSearchDispatch.action?method=viewAccountSummary"
         width="100" cache="false" fieldName="accountCode" maxCharLimit="4"  hitTimeInSec="10" /-->

         
         <mx:TextInput id="accountNo" width="100" restrict="{Globals.INPUT_PATTERN}" focusOut="focusHandler()"/>

     <!-- The account popup control-->
     <mx:Image id="accountPopup" source="@Embed('../../../../../../assets/popup_icon.png')" 
               verticalAlign="middle" horizontalAlign="center" click="showPopUp(recContextItem,retContextItem);"/>
               
     <mx:TextInput id="bankCodeTxt" width="1" restrict="{Globals.INPUT_PATTERN}" visible="false" includeInLayout="false"/>
     <mx:TextInput id="bankNameTxt" width="1" restrict="{Globals.INPUT_PATTERN}" visible="false" includeInLayout="false"/>
     
     <mx:Metadata>
        [Event(name="preClick",type="flash.events.Event")]
        [Event(name="inputEvent", type="flash.events.Event")]
     </mx:Metadata>
     <mx:Script>
        <![CDATA[
        	import com.nri.rui.core.controls.XenosButton;
        	import com.nri.rui.core.startup.XenosApplication;
            import com.nri.rui.core.Globals; 
        //start of script   
        import mx.managers.PopUpManager;
        import com.nri.rui.core.controls.XenosAlert;
        import com.nri.rui.core.utils.HiddenObject;
        import com.nri.rui.ref.popupImpl.AccountPopup;
        import mx.collections.ArrayCollection;
        import mx.core.UIComponent;
        
        
           [Bindable]
           //Items returning through context - Non display objects
           public var retContextItem:ArrayCollection = new ArrayCollection();
           [Bindable]
           //Items receiving through context - Non display objects
           public var recContextItem:ArrayCollection = new ArrayCollection();
           
           //This boolean check whether fund code is empty or not
           [Bindable]
           public var fundCodeCheck:Boolean = true;
           [Bindable]
           public var bnkCode:String = null;
           [Bindable]
           public var bnkName:String = null;
           [Bindable]
           public var LMFlagForFund:String = "";
           [Bindable]
           public var cpCodePreset:String = "";
           [Bindable]
           public var cpTypePreset:String = "";
           
           private var popUpPoint:Point = new Point();
   	
   		   private var xApp:XenosApplication = XenosApplication.getInstance(Globals.DEFAULT_ENTERPRISE);	
   		   
        /*
         * Open the Account PopUp Window.
         * Cast the return value of the createPopUp() method
         * to AccountPopup, the name of the component containing
         *  the PopupWindow container
         */
        private function showPopUp(recCtxItems:ArrayCollection,
                                   retCtxItem:ArrayCollection):void {
            
            dispatchEvent(new Event("preClick"));
            if(fundCodeCheck == true){

	            if (recCtxItems == null){
	                recCtxItems = new ArrayCollection();
	            }
	            
	            if (retCtxItem == null){
	                retCtxItem = new ArrayCollection();
	            }
	            //create the account popup        
	            var actPopup:AccountPopup=AccountPopup
	            (PopUpManager.createPopUp( UIComponent(this.parentApplication), AccountPopup , true));
	        
	            // Calculate position of TitleWindow in Application's coordinates. 
	                /* popUpPoint.x= accountPopup.x;
	                popUpPoint.y= accountPopup.y;                
	                popUpPoint = accountPopup.localToGlobal(popUpPoint);
	                actPopup.x = popUpPoint.x + accountPopup.width;
	                actPopup.y = popUpPoint.y + accountPopup.height; */
	            //Center the Popup Window in the Application's container
	            PopUpManager.centerPopUp(actPopup);
	            /* Pass a reference to the AutoComplete control
	             * to the PopUpWindow container so that the 
	             * PopUpWindow container can return data to the main application.
	             */
	            actPopup.retTxtInput=accountNo;
	            actPopup.bankCode = bankCodeTxt;
	            actPopup.bankName = bankNameTxt;
	            actPopup.LMValue = LMFlagForFund;
	            actPopup.cpCodePreset = cpCodePreset;
	            actPopup.cpTypePreset = cpTypePreset;
	            // Pass a reference to the returnning context items
	            actPopup.returnContextItems = retCtxItem;
	            // Pass a reference to the popup context items
	            actPopup.receiveCtxItems = recCtxItems;
	            
	            xApp.submitButtonInstance = actPopup.search;
	            //initialize the account popup
	            actPopup.initPopup();
	           }

        }
            
        private function focusHandler():Boolean {
               
               //XenosAlert.info("focus out");
               dispatchEvent(new Event("inputEvent"));
               return true;
        }
        //end of script
        ]]>
    </mx:Script>
</mx:HBox>
