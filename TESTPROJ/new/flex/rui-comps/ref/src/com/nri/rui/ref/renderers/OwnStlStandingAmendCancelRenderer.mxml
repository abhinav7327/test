<?xml version="1.0" encoding="utf-8"?>

<!-- Item Renderer for Own Settlement Standing Amend/Cancel.  -->
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" dataChange="handleDataChange()">
    <mx:Script>
        <![CDATA[
        	import mx.events.CloseEvent;            
            import com.nri.rui.core.controls.XenosAlert;
            import com.nri.rui.core.containers.SummaryPopup;
            import com.nri.rui.core.Globals;
            import mx.managers.ToolTipManager;
			import mx.controls.ToolTip;
            
            import flash.events.MouseEvent;        
            import mx.core.UIComponent;
            import mx.managers.PopUpManager;
            
            [Embed(source="../../../../../../assets/icon_view.png")]
            [Bindable]
			private var icoView:Class;
            [Bindable] public var _mode:String = "add";
            var sPopup : SummaryPopup;
            
    		/**
    		 * 
    		*/
        	 override public function set data(value:Object):void{
        	 	super.data=value;
        	 	if(data.status=='CXL'){
        	 		editRemarks.enabled=false;   
        	 	} else {
        	 		editRemarks.enabled=true;        	 		
        	 	}
        	 }
        	 
        	 public function handleDataChange():void{
        	 	if(data.status=='CXL'){
        	 		editRemarks.enabled=false;   
        	 	} else {
        	 		editRemarks.enabled=true;        	 		
        	 	}
        	 }
        	 /**
        	 * Mouse Click event handler to open a popup with initialization and passing values.
        	 * 
        	 */ 
            public function handleMouseClick(event:MouseEvent):void {
        			
        		
        		var viewType:String = _mode;
    	
	    		if(event.target is Image){
	    			
	    			viewType="query";
	    		}	
        		sPopup= SummaryPopup(PopUpManager.createPopUp(UIComponent(this.parentApplication),SummaryPopup,true));
        		if(viewType == "add"){        			
        		   sPopup.title = this.parentApplication.xResourceManager.getKeyValue('ref.ownstlstandingamendcancel.title.renderer.add');
        		}else if(viewType == "cancel"){
        		   sPopup.title =this.parentApplication.xResourceManager.getKeyValue('ref.ownstlstandingamendcancel.title.renderer.cancel');
        		} else {
        		   sPopup.title	 = this.parentApplication.xResourceManager.getKeyValue('ref.ownstlstandingamendcancel.title.renderer.other');
        		}
        		trace("View Type : " + viewType);
        		if(viewType == "add" || viewType == "cancel") {
        			sPopup.addEventListener("OkSystemConfirm",handleOkSystemConfirm,false,0,true);
        		}
        		
        		sPopup.addEventListener(CloseEvent.CLOSE, popupCloseHandler,false,0,true);
        		
                sPopup.width = 870;
        		sPopup.height = 450;    		
        		PopUpManager.centerPopUp(sPopup);
        		if(viewType == "add" || viewType == "cancel") {
        			//Setting the Module path with some parameters which will be needed in the module for internal processing.                                                       
        			sPopup.moduleUrl = "assets/appl/ref/OwnStlStandingEntry.swf" + Globals.QS_SIGN + "mode" + Globals.EQUALS_SIGN + this._mode+ Globals.AND_SIGN + "ownSettleStandingRulePk"+ Globals.EQUALS_SIGN + data.ownSettleStandingRulePk;
        		} else {
        			//Setting the Module path with some parameters which will be needed in the module for internal processing.
	    			sPopup.moduleUrl = "assets/appl/ref/OwnStlStandingDetail.swf?ownStlStandingRulePk=" + data.ownSettleStandingRulePk;
        		}
        	}
        	
        	/**
			 * Event Handler for the Close Event of the Pop Up
			 */
			public function popupCloseHandler(event:Event):void {
		          this.parentDocument.dispatchEvent(new Event("querySubmit"));
		          sPopup.removeMe();
		    }
        	
        	/**
        	 * Event Handler for the custom event "OkSystemConfirm"
        	 */
        	public function handleOkSystemConfirm(event:Event):void {
        		//this.parentDocument.currentState = "";
        		trace("Mode in renderer : " + _mode);
                if(_mode == "add")
                  this.parentDocument.dispatchEvent(new Event("amendSubmit"));
                else if(_mode == "cancel")
                  this.parentDocument.dispatchEvent(new Event("cancelSubmit"));
            }
        ]]>
    </mx:Script>
    
   <mx:Button id="editRemarks" styleName="{_mode == 'add' ? 'BtnEdit' : 'BtnDelete'}" width="18" height="18" label="{_mode == 'add' ? 'Edit' : 'Cancel'}" click="handleMouseClick(event)"/>
   <mx:Image id="sView" source="{icoView}" click="handleMouseClick(event)" buttonMode="true" verticalAlign="middle" toolTip="View Details"/>
</mx:HBox>
