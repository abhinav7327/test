<?xml version="1.0" encoding="utf-8"?>

<!-- MXML module for displaying the Journal Detail for a specific journal Pk.  -->
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:cntrls="com.nri.rui.core.controls.*" 
    percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" 
    verticalScrollPolicy="off" creationComplete="init()">
    <mx:Script>
        <![CDATA[
            import mx.binding.utils.BindingUtils;
            import mx.collections.ArrayCollection;
            import com.nri.rui.core.controls.XenosAlert;
            import mx.managers.FocusManager;
            import mx.managers.PopUpManager;
            import mx.rpc.events.ResultEvent;
            import mx.rpc.events.FaultEvent;
            import mx.controls.Alert;
            import com.nri.rui.core.Globals;
            import com.nri.rui.core.utils.PrintUtils;
           
            [Bindable]private var ledgerResult:ArrayCollection = new ArrayCollection;
            
            [Bindable]private var ledgerPk : String = "";
            private var mode : String = "query";
            
            [Bindable]
            private var objForm:Object = null;
            [Bindable]
            private var objTxn:Object = null;
            
            /**
             * Extracts the parameters and set them to some variables for query criteria from the Module Loader Info.
             * 
             */ 
            public function parseUrlString():void {
                try {
                    // Remove everything before the question mark, including
                    // the question mark.
                    var myPattern:RegExp = /.*\?/; 
                    var s:String = this.loaderInfo.url.toString();
                    s = s.replace(myPattern, "");
                    // Create an Array of name=value Strings.
                    var params:Array = s.split(Globals.AND_SIGN); 
                     // Print the params that are in the Array.
                    var keyStr:String;
                    var valueStr:String;
                    var paramObj:Object = params;
                  
                    // Set the values of the salutation.
                    for (var i:int = 0; i < params.length; i++) {
                        var tempA:Array = params[i].split("=");  
                        if (tempA[0] == "ledgerPkStr") {
                            ledgerPk = tempA[1];
                        } 
                    }
                } catch (e:Error) {
                    trace(e);
                }               
            }
            /**
             * Initializes the module and send the submit request.
             * 
             */     
            private function init():void{
                
                parseUrlString();
                
                var reqObj:Object=new Object();
                reqObj.method="viewLedgerDetailsPopUp";
                reqObj.ledgerPkStr=this.ledgerPk;
                reqObj.mode=this.mode;
                
                var rndNo:Number = Math.random();
                ledgerHttpService.url= "gle/gleLedgerViewDispatch.action?rnd=" + rndNo;
                ledgerHttpService.request=reqObj;
                ledgerHttpService.send();
                PopUpManager.centerPopUp(this);
            }
            /**
             * Error Handler for the submit request.
             * 
             */ 
            private function httpService_fault(evt:FaultEvent):void {
                XenosAlert.error(evt.fault.faultDetail);
            }
            /**
             * Result handler for the submit Request. 
             * 
             */ 
            private function resultPage(event:ResultEvent):void {  
            	var rs:XML=XML(event.result);
                if (null != rs) {            
                   	if(rs.name()=="XenosErrors"){
                   		if(rs.child("Errors").length()>0) {
		                //some error found					 	
					 	var errorInfoList : ArrayCollection = new ArrayCollection();
		                //populate the error info list 			 	
					 	for each ( var error:XML in rs.Errors.error ) {
			 			   errorInfoList.addItem(error.toString());
						}
					 	errPage.showError(errorInfoList);//Display the error
	                  }                                   
                    }else if(rs.name()=="gleLedgerViewActionForm"){
                        errPage.clearError(event);                        
                        objForm = rs;
                        
                        //Handle the Transaction Object  objTxn
                        if(null == rs.ledgerOb){ //means Audit Object is null
                            XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('gle.ledgerDetails.label.nodetailfound')); 
                        }else{                          
                            //populate the Transaction Object value
                            objTxn =  rs.ledgerOb;
                        }
                        
                       ledgerResult.removeAll();
                        /*if(event.result.gleLedgerViewActionForm.journalListColl.journalList is ArrayCollection) {
                                ledgerResult = event.result.gleLedgerViewActionForm.journalListColl.journalList as ArrayCollection;
                        } else {
                        }*/  
                        
                        var staLedgerObj:Object= rs.strategyLedgerSubcode as Object;
                        staLedgerObj.subCode="Strategy";
                        ledgerResult.addItem(staLedgerObj);
                        var actLedgerObj:Object= rs.accountLedgerSubcode as Object;
                        actLedgerObj.subCode="Account";
                        ledgerResult.addItem(actLedgerObj);
                        var proLedgerObj:Object= rs.productLedgerSubcode as Object;
                        proLedgerObj.subCode="Product";
                        ledgerResult.addItem(proLedgerObj);
                        var affLedgerObj:Object= rs.affiliateLedgerSubcode as Object;
                        affLedgerObj.subCode="Affiliate";
                        ledgerResult.addItem(affLedgerObj);
                        var rrLedgerObj:Object= rs.rrnumberLedgerSubcode as Object;
                        rrLedgerObj.subCode="RR Number";
                        ledgerResult.addItem(rrLedgerObj);

                       
                    } 
                    else{
                    	XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
                    }
                }else {
                    ledgerResult.removeAll();
                    XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
                }                
            }
            private function getEmptyStrForTotal(item:Object, column:DataGridColumn):String {
                if(item.total == true){
                    return "";
                }else{
                    return item[column.dataField];
                }
            }
            private function getStrTotal(item:Object, column:DataGridColumn):String {
                if(item.total == true){                    
                    return this.parentApplication.xResourceManager.getKeyValue('gle.journalquery.label.total');
                }else{
                    return item[column.dataField];    
                }                
            }
            private function getAmountTotal(item:Object, column:DataGridColumn):String {
                if(item.total == true){
                    return item.totalAmountCCYFormat;
                }else{
                    return item[column.dataField];
                }
            }            
            // DataTipFunction for the Amount Calculator Pk column
            private function toolTipForAmtCalcPk(item:Object):String {
            	if(item.total == true)
            		return this.toolTip = "";
            	else
                    return item.formula;
            }
        ]]>
    </mx:Script>
    
    <cntrls:XenosHTTPService id="ledgerHttpService" 
            useProxy="false"
            fault="httpService_fault(event);"
            result="resultPage(event)" showBusyCursor="true" resultFormat="xml" >
     </cntrls:XenosHTTPService>
    
    <mx:VBox width="100%" height="0%">
	    <mx:HBox width="100%" styleName="ButtonBackPanel" horizontalAlign="right">
	        <mx:Button id="Print" styleName="PrintBtnStyle" toolTip="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.print')}" click="PrintUtils.printDetail(this.detail)"/>
	    </mx:HBox>
    </mx:VBox>
    
    <mx:VBox width="100%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off">       
        <!--mx:Label width="100%" color="blue" 
            text="{this.parentApplication.xResourceManager.getKeyValue('gle.journalquery.label.journalquerydetail')}"/-->          

        <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none" paddingLeft="10" paddingRight="10"/>
        				 <mx:VBox width="100%" height="100%" styleName="Padding" id="detail">
							 <mx:Grid width="100%" horizontalGap="0" verticalGap="0">
							       <mx:GridRow width="100%"> 
				                        <mx:GridItem width="20%" styleName="LabelBgColor">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.ledger_code')}"/>
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" >
				                            <mx:Text text="{objTxn.ledgerCode==null? '' : objTxn.ledgerCode}"/>                            
				                        </mx:GridItem> 
				                        <mx:GridItem width="20%" styleName="LabelBgColor">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.ledger_type')}"/>
				                        </mx:GridItem>
				                        <mx:GridItem width="30%">
				                            <mx:Text text="{objTxn.ledgerType==null? '' : objTxn.ledgerType}"/>
				                        </mx:GridItem>
				                    </mx:GridRow>
							       <mx:GridRow width="100%"> 
				                        <mx:GridItem width="20%" styleName="LabelBgColor">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.short_name')}" />
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" >
				                            <mx:Text text="{objTxn.shortName==null? '' : objTxn.shortName}"/>                            
				                        </mx:GridItem> 
				                        <mx:GridItem width="20%" styleName="LabelBgColor">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.subcodetype')}" />
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" >
				                            <mx:Text text="{objTxn.subcodeType==null? '' : objTxn.subcodeType}"/>
				                        </mx:GridItem>
				                    </mx:GridRow>
							       <mx:GridRow width="100%"> 
				                        <mx:GridItem width="20%" styleName="LabelBgColor">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.long_name')}" />
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" >
				                            <mx:Text text="{objTxn.longName==null? '' : objTxn.longName}"/>                            
				                        </mx:GridItem> 
				                        <mx:GridItem width="20%" styleName="LabelBgColor">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerQuery.label.status')}"/>
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" >
				                            <mx:Text text="{objTxn.status==null? '' : objTxn.status}"/>
				                        </mx:GridItem>
				                    </mx:GridRow>
					           </mx:Grid>
            
            <mx:Spacer height="5" />
             <mx:DataGrid id="SummaryResult" dataProvider="{this.ledgerResult}" rowCount="4" width="100%" height="100%" sortableColumns="false" variableRowHeight="true" horizontalScrollPolicy="auto">
                <mx:columns>  
                   <mx:DataGridColumn width="{SummaryResult.width/5}" headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.subcode')}" dataField="subCode"/>
                   <mx:DataGridColumn width="{SummaryResult.width/5}" headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.required')}" dataField="subcodeReqd"/>
                   <mx:DataGridColumn width="{SummaryResult.width/5}" headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.subcodetype')}" dataField="subcodeType"/>
                   <mx:DataGridColumn width="{SummaryResult.width/5}" headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.defaultvalue')}" dataField="defaultSubcode" />
               </mx:columns>
             </mx:DataGrid>
           </mx:VBox> 
            
     </mx:VBox>
</mx:Module>
