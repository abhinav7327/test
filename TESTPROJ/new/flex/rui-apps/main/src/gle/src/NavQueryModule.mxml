<?xml version="1.0" encoding="utf-8"?>

<!--Mxml file for GLE Nav Query Implementation -->

<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import com.nri.rui.core.renderers.StatusRenderer;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.ref.renderers.MarketAmendQueryRenderer;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			
			    
    		/**
			 * This method should be called on creationComplete of the datagrid 
			 */ 
			private function bindDataGrid():void {
				qh.dgrid = resultSummary;
			}
			
			/**
			 * Formatting price
			 */
			/*private function priceHandler():void{
				inputPrice.text=numberFormatter.format(inputPrice.text);   
			}*/

		]]>
	</mx:Script>
	<mx:Script source="actionscripts/NavQueryModule.as"/>
	
	<containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
	<!-- Define Transition array with one Transition object.-->
	<containers:transitions>
		<!-- A transition for changing from any state to any state. -->
		<mx:Transition id="qryTransition" fromState="*" toState="*">
			<!-- Define a Parallel effect as the top-level effect.-->
			<mx:Parallel id="t1" targets="{[qry,rslt]}">
				<!-- Define a Move and Resize effect.-->
				<mx:Move  duration="400"/>
				<!--<mx:Resize duration="400"/>-->
			</mx:Parallel>
		</mx:Transition>
	</containers:transitions>
	<frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
	
	<mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
		<mx:HBox width="100%" styleName="ExCoBgPanel">
			<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';"  />    	
			<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
			<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
		</mx:HBox>
	</mx:VBox>
	
	<mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
		<mx:VBox width="100%" height="100%">
			<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
			<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
				<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
					<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
						
					<mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
					
					<mx:Grid width="100%" borderThickness="0">
						<mx:GridRow width="100%">
							<mx:GridItem width="20%" borderThickness="0">
								<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.navquery.label.fundcode')}"/>
							</mx:GridItem>
							<mx:GridItem width="30%" borderThickness="0">
								<xenospopup:FundPopUpHbox id="fundPopUp"/>
							</mx:GridItem> 
							<mx:GridItem width="20%" borderThickness="0">
								<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.navquery.label.valuationdate')}"/>
							</mx:GridItem>
							<mx:GridItem width="30%" borderThickness="0">
								<mx:DateField id="valuationDate"  formatString="YYYYMMDD" editable="true" width="90"/>
							</mx:GridItem>                         
						</mx:GridRow>
					</mx:Grid>
					
					<mx:HBox width="100%" styleName="ButtonBackPanel">
						<cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.dispatchEvent(new Event('querySubmit'))}" />
						<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.dispatchEvent(new Event('queryReset'))}" />
	        		</mx:HBox>
					
				</mx:VBox>
			</mx:Canvas>
				
			<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >			
	        	<cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="1"/>
				
				<cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{summaryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" headerRelease="dataGrid_headerRelease(event)"> 
					<cntrls:columns>		    	   
						<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" />
						<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.navquery.label.fundcode')}" dataField="fundCode" textAlign="left"  showDataTips="true" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
						<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.navquery.label.fundname')}" dataField="fundName" textAlign="left"  showDataTips="true" sortCompareFunction="sortUtil.sortString"/>	                    
						<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.navquery.label.valuationdate')}" dataField="valuationDateDisplay"  showDataTips="true" itemRenderer="com.nri.rui.core.renderers.NullValueRenderer" sortCompareFunction="sortUtil.sortString"/>
						<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.navquery.label.currency')}"  dataField="currency"  showDataTips="true" itemRenderer="com.nri.rui.core.renderers.NullValueRenderer" sortCompareFunction="sortUtil.sortString"/>
						<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.navquery.label.navamount')}"  dataField="navAmountStr" textAlign="right" showDataTips="true" itemRenderer="com.nri.rui.core.renderers.NullValueRenderer" sortCompareFunction="sortUtil.sortNumeric"/>
						<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.navquery.label.detail')}"  draggable="false" resizable="false" itemRenderer="com.nri.rui.gle.renderers.GleNavDetailQueryRenderer" sortable="false"/>
					</cntrls:columns>
				</cntrls:CustomDataGrid>
			</mx:VBox>
			</mx:HDividedBox>
		</mx:VBox>
	</mx:Canvas>  

</containers:XenosQueryModule>
