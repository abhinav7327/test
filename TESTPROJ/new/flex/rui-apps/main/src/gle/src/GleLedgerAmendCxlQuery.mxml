<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" >

	
	<mx:Script>
		<![CDATA[
			import com.nri.rui.gle.renderers.GleLedgerSummaryRenderer;
			import com.nri.rui.gle.renderers.GleAmendCancelRenderer;
			import mx.events.DataGridEvent;			
			import com.nri.rui.core.Globals;			
			import mx.resources.ResourceBundle;						
			import com.nri.rui.core.RendererFectory;
			
			
			    
   		 /**
		  * This method should be called on creationComplete of the datagrid 
		  */ 
		 private function bindDataGrid():void {
			qh.dgrid = resultSummary;
		 }
	
	     /**
 		  *  datagrid header release event handler to handle datagridcolumn sorting
 		  */
		 public function dataGrid_headerRelease(evt:DataGridEvent):void {				
			var dg:CustomDataGrid = CustomDataGrid(evt.currentTarget);
            sortUtil.clickedColumn = dg.columns[evt.columnIndex];	
		 }
	
	]]>
	</mx:Script>
	<mx:Script source="actionscripts/GleLedgerAmendCxlQuery.as"/>
	
	<containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" creationComplete="lCode.setFocus();" verticalScrollPolicy="auto">
    	<mx:VBox width="100%" height="100%"> 
    	<!--containers:CollapsibleHDividedBox id="hdbox1" width="100%" height="100%" liveDragging="true" paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" creationComplete="initPageStart()" horizontalScrollPolicy="off" verticalScrollPolicy="off"-->
			<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
				<mx:VBox label="Query Criteria" width="100%" height="100%" id="qry" styleName="HDivideStyle" >
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
						<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
						<mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />
							 <mx:Grid width="100%" borderThickness="0">
							       <mx:GridRow width="100%"> 
				                        <mx:GridItem width="20%" borderThickness="0">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.ledger_code')}"/>
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" borderThickness="0">
				                            <mx:TextInput id="lCode" restrict="{Globals.INPUT_PATTERN}"/>                            
				                        </mx:GridItem> 
				                        <mx:GridItem width="20%" borderThickness="0">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.ledger_type')}"/>
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" borderThickness="0">
				                            <mx:ComboBox id="ltype" labelField="label" prompt="Select" dataProvider="{ledgerTypeValuesList}"/>
				                        </mx:GridItem>
				                    </mx:GridRow>
							       <mx:GridRow width="100%"> 
				                        <mx:GridItem width="20%" borderThickness="0">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.short_name')}" />
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" borderThickness="0">
				                            <mx:TextInput id="sName" restrict="{Globals.INPUT_PATTERN}"/>                            
				                        </mx:GridItem> 
				                        <mx:GridItem width="20%" borderThickness="0">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.subcodetype')}" />
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" borderThickness="0">
				                            <mx:ComboBox id="sCodeType" labelField="label" prompt="Select" dataProvider="{subCodeTypeValuesList}"/>
				                        </mx:GridItem>
				                    </mx:GridRow>
							       <mx:GridRow width="100%"> 
				                        <mx:GridItem width="20%" borderThickness="0">
				                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.long_name')}" />
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" borderThickness="0">
				                            <mx:TextInput id="lName" restrict="{Globals.INPUT_PATTERN}"/>                            
				                        </mx:GridItem> 
				                        <mx:GridItem width="20%" borderThickness="0" >
				                            <mx:Label id="statuslabel"  text="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerQuery.label.status')}"/>
				                        </mx:GridItem>
				                        <mx:GridItem width="30%" borderThickness="0">
				                            <mx:ComboBox id="status" labelField="label" prompt="Select" dataProvider="{statusValuesList}" />
				                        </mx:GridItem>
				                    </mx:GridRow>
					           </mx:Grid>
	        
	        <mx:HBox width="100%" styleName="ButtonBackPanel">
   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')) : (this.mode == 'amend' ? this.dispatchEvent(new Event('amendSubmit')) : this.dispatchEvent(new Event('cancelSubmit')))}" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('queryReset')) : (this.mode == 'amend' ? this.dispatchEvent(new Event('amendReset')) : this.dispatchEvent(new Event('cancelReset')))}" />
	        </mx:HBox>
	        
		</mx:VBox>
		
		<mx:VBox width="0%" height="100%" id="rslt" styleName="HDivideStyle" horizontalScrollPolicy="off" verticalScrollPolicy="off" paddingLeft="6">		        		
		    <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'query' ? 1 : 2}" endIndex="6"/>
			<cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" creationComplete="bindDataGrid()" headerRelease="dataGrid_headerRelease(event)">
		        <cntrls:columns>		    	   
		    	   <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="{mode == 'query' ? new RendererFectory(GleLedgerSummaryRenderer) : new RendererFectory(GleAmendCancelRenderer,mode)}" sortable="false"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.ledger_code')}" dataField="ledgerCode"  showDataTips="true" itemRenderer="com.nri.rui.gle.renderers.LedgerDetailsRenderer" sortCompareFunction="sortUtil.sortString" width="200"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.short_name')}" dataField="shortName" itemRenderer="com.nri.rui.core.renderers.NullValueRenderer" visible="true" sortCompareFunction="sortUtil.sortString" width="200"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.ledger_type')}" dataField="ledgerType" textAlign="left" sortCompareFunction="sortUtil.sortString" width="200"/>	                   
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerEntry.label.subcodetype')}"  dataField="subcodeType" itemRenderer="com.nri.rui.core.renderers.NullValueRenderer" sortCompareFunction="sortUtil.sortString" width="200"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('gle.ledgerQuery.label.status')}"  dataField="status" itemRenderer="com.nri.rui.core.renderers.StatusRenderer" sortCompareFunction="sortUtil.sortString" visible="{this.mode=='query'}"/>	                   	                   
                </cntrls:columns>
		 </cntrls:CustomDataGrid>  
		</mx:VBox>
		
	</mx:HDividedBox>    
   </mx:VBox>
 </mx:Canvas>
 	 
</containers:XenosQueryModule>
