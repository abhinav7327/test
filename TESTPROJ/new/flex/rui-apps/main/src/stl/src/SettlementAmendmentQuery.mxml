<?xml version="1.0" encoding="utf-8"?>

<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" xmlns:valdtrs="com.nri.rui.core.validators.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off">
	
	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import com.nri.rui.core.utils.XenosStringUtils;
			import mx.utils.StringUtil;
			import com.nri.rui.core.controls.XenosAlert;
			import com.nri.rui.core.renderers.StatusRenderer;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import com.nri.rui.stl.renderers.SettlementAmendmentRenderer;
				    
		    /**
			 * This method should be called on creationComplete of the datagrid 
			 */ 
			private function bindDataGrid():void {
				qh.dgrid = resultSummary;				
			}
			/**
			 * This method return the status of the settlement ('FAIL', 'OUTSTANDING')
			 */
			private function getSettlementStatus(item:Object, column:DataGridColumn):String{
                if(XenosStringUtils.isBlank(item.failStatus)){
                    return item.settlementStatus;
                } else { 
                    return item.failStatus;
                }
            }
            /**
             *  This method is fired when submit button of the form is clicked.
             */
			private function onSubmit():void {
				this.errPageResultSummary.removeError();
				this.dispatchEvent(new Event('amendSubmit'));
			}
		]]>
	</mx:Script>
	<mx:Script source="actionscripts/SettlementAmendmentQuery.as"/>
	
	<containers:states>
		<mx:State name="result">
			<mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
    	<!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
        	<!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
            	<!-- Define a Move and Resize effect.-->
                <mx:Move duration="400"/>
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';"/>    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'"/>
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    </mx:VBox>
	
	<mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<mx:VBox width="100%" height="100%">
			<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}">
		
				<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
				<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle">
				<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
				<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
		
               	<mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%"/>
				<mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundcode')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:FundPopUpHbox id="fundPopUp"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
	                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}"/>
	                    </mx:GridItem>
	                    <mx:GridItem width="30%" borderThickness="0">
	                    	<xenospopup:AccountPopUpHbox id="fundAccountNo" retContextItem="{returnContextItem}" recContextItem="{populateFundAccountContext()}"/>
	                    </mx:GridItem>
	                </mx:GridRow>	
               	 	<mx:GridRow width="100%">
               	 		<mx:GridItem width="20%" borderThickness="0">
               	 			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementreferenceno')}"/>
               	 		</mx:GridItem>
               	 		<mx:GridItem width="30%" borderThickness="0">
               	 			<mx:TextInput id="settlementReferenceNo" restrict="{Globals.INPUT_PATTERN}" maxChars="16"/>
               	 		</mx:GridItem>
               	 		<mx:GridItem width="20%" borderThickness="0">
               	 			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementtype')}"/>
               	 		</mx:GridItem>
               	 		<mx:GridItem width="30%" borderThickness="0">
               	 			<mx:ComboBox id="settlementType" labelField="label" prompt="Select"/>
               	 		</mx:GridItem>                         
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.swiftreferenceno')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:TextInput id="swiftReferenceNo" restrict="{Globals.INPUT_PATTERN}" maxChars="16"/>                          
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradereferenceno')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox width="100%" horizontalGap="0">
                            	<mx:TextInput id="tradeReferenceNo" width="130" restrict="{Globals.INPUT_PATTERN}" maxChars="16"/>
                            	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.for')}"/>
                            	<mx:ComboBox id="settlementFor" labelField="label" prompt="Select"/>
                            </mx:HBox>                             
                        </mx:GridItem>
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.transactiontype')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="transactionType" labelField="label" prompt="Select"/>                            
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyaccountno')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="counterPartyAccountNo" retContextItem="{returnContextItem}" recContextItem="{populateCounterPartyAccountContext()}"/>
                        </mx:GridItem>
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                    	<mx:GridItem width="20%" borderThickness="0">
                        	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedatefromto')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">							
							<mx:HBox>
								<mx:DateField id="trdDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                       			<mx:DateField id="trdDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
            				</mx:HBox>
                        </mx:GridItem>   
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.valuedatefromto')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox>
                       			<mx:DateField id="valueDateFrom" formatString="YYYYMMDD" editable="true" width="90"/>
                       			<mx:DateField id="valueDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
            				</mx:HBox>                          
                        </mx:GridItem> 
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                    	<mx:GridItem width="20%" borderThickness="0">
                    		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">							
							<xenospopup:InstrumentPopUpHbox id="securityCode"/>
                        </mx:GridItem>   
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementccy')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <cntrls:CurrencyHBox id="currency"/>                           
                        </mx:GridItem> 
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                    	<mx:GridItem width="20%" borderThickness="0">
                    		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementqueryfor')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">							
							<mx:ComboBox id="settlementQueryFor" labelField="label" prompt="Select"/> 
                        </mx:GridItem>   
                         <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.standingstatus')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="settlementStandingStatus" labelField="label" prompt="Select"/>                           
                        </mx:GridItem> 
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                    	<mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ourbank')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">							
							<xenospopup:FinInstitutePopUpHbox id="firmSettlementBank" recContextItem="{populateFirmBankContext()}"/>
                        </mx:GridItem>   
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.oursettleac')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="firmSettlementAccount" retContextItem="{returnContextItem}" recContextItem="{populateFirmSettlementAccountContext()}"/>                           
                        </mx:GridItem> 
                    </mx:GridRow>
	            </mx:Grid>
	            
	            <!-- Sort Order -->
				<flexlib:WindowShade id="ws1" tabChildren="{ws1.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
	        	<mx:Grid width="100%" borderThickness="0">
	            	<mx:GridRow width="100%">
	                	<mx:GridItem width="100%" borderThickness="0">
	                    	<mx:HBox width="100%">
	                        	<mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()" width="200" itemRenderer="mx.controls.Label"></mx:ComboBox>
								<mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()" width="200" itemRenderer="mx.controls.Label"></mx:ComboBox>
								<mx:ComboBox id="sortField3" labelField="label" change="sortOrder3Update()" width="200" itemRenderer="mx.controls.Label"></mx:ComboBox>
								<mx:ComboBox id="sortField4" labelField="label" width="200" itemRenderer="mx.controls.Label"> </mx:ComboBox>
	                    	</mx:HBox> 
	                	</mx:GridItem>                         
	            	</mx:GridRow>
	        	</mx:Grid>
	    		</flexlib:WindowShade>

				<mx:HBox width="100%" styleName="ButtonBackPanel">
					<cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="onSubmit();"/>
					<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="this.dispatchEvent(new Event('amendReset'))" />
		        </mx:HBox>
			    </mx:VBox>
				</mx:Canvas>
				
				<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >
				<cntrls:XenosErrors id="errPageResultSummary" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
				<cntrls:XenosErrors id="errPageResultSummaryPending" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
				<cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="2"/>
				<cntrls:XenosDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" headerRelease="dataGrid_headerRelease(event)">
					<cntrls:columns>
						<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" textAlign="center" sortable="false"/>
						<mx:DataGridColumn headerText="" width="40"  draggable="false" resizable="false" id="imgRenderer" itemRenderer="{new RendererFectory(SettlementAmendmentRenderer, mode)}" textAlign="center" sortable="false"/>
						<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementreferenceno')}" dataField="settlementReferenceNo" itemRenderer="com.nri.rui.stl.renderers.SettlementAmendmentViewRenderer" sortCompareFunction="sortUtil.sortString"/>
						<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundcode')}" dataField="fundPk" labelFunction="getFundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
						<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" dataField="fundAccountPk" labelFunction="getFundAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
						<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedate')}" dataField="tradeDateStr" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.valuedate')}" dataField="valueDateStr" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" dataField="instrumentPk" labelFunction="getSecurityId" itemRenderer="com.nri.rui.core.renderers.AdvInstrumentDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="alternateSecurityId" itemRenderer="com.nri.rui.core.renderers.NullValueRenderer" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityShortName" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.amount')}" dataField="amountStr" sortCompareFunction="sortUtil.sortNumeric"/>
			   			<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.quantity')}" dataField="quantityStr" sortCompareFunction="sortUtil.sortNumeric"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.swiftreferenceno')}" dataField="swiftReferenceNo" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ourbank')}" dataField="ownBankCode" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ouraccountbrkno')}" dataField="ownAccountNoStr" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyac')}" dataField="cpAccountPk" labelFunction="getCpAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.standingstatus')}" dataField="settlementInfoStatus" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlestatus')}" dataField="settlementStatus" labelFunction="getSettlementStatus" sortCompareFunction="sortUtil.sortString"/>
			   			<mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.status')}" dataField="status" sortCompareFunction="sortUtil.sortString"/>
			       </cntrls:columns>
				</cntrls:XenosDataGrid>
				</mx:VBox>
			</mx:HDividedBox>
    	</mx:VBox>
    </mx:Canvas>  
		 
</containers:XenosQueryModule>