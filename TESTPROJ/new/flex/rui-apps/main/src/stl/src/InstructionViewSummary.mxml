<?xml version="1.0" encoding="utf-8"?>

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml"  xmlns:flexlib="http://code.google.com/p/flexlib/" layout="absolute"
    xmlns:cntrls="com.nri.rui.core.controls.*" creationComplete="submitDetailQuery()" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import mx.rpc.events.ResultEvent;
			import com.nri.rui.core.Globals;
			import com.nri.rui.core.utils.PrintUtils;
			import com.nri.rui.core.utils.XenosStringUtils;
			import com.nri.rui.core.controls.XenosErrors;
			import com.nri.rui.core.controls.XenosAlert;
			import com.nri.rui.stl.StlConstants;
			[Bindable]
    		private var queryResult:XML= new XML();
    		
    		[Bindable]public var stlInfoPk:String = XenosStringUtils.EMPTY_STR;
    		[Bindable]public var copyFlag:String  = XenosStringUtils.EMPTY_STR;
    		
    		[Bindable]
			public var transmissionStatusStr:String;
			
			[Bindable]
			public var cxlAcceptanceStatusStr:String;
			
			[Bindable]
			private var acceptanceStatusStr:String;
			/**
		    * This method will be called at the time of the loading this module and pressing the reset button.
		    * 
		    */
		    private function submitDetailQuery():void {  
		    	parseUrlString();
		    	var reqObj :Object = new Object();
		    	
		    	var stlInfoPkArray:Array = new Array();
		    	stlInfoPkArray.push(stlInfoPk);
		    	
		    	reqObj.stlInfoPkArray = stlInfoPkArray;
		    	reqObj.copyFlag       = copyFlag;
		    	
		    	inxViewRequest.request = reqObj;
		    	inxViewRequest.send();
		    }
		    
		    private function parseUrlString():void {
		        try {
		            // Remove everything before the question mark, including
		            // the question mark.
		            var myPattern:RegExp = /.*\?/; 
		            var s:String = this.loaderInfo.url.toString();
		            s = s.replace(myPattern, "");
		            // Create an Array of name=value Strings.
		            var params:Array = s.split("&"); 
		             // Print the params that are in the Array.
		            var keyStr:String;
		            var valueStr:String;
		            var paramObj:Object = params;
		          
		            // Set the values of the salutation.
		            for (var i:int = 0; i < params.length; i++) {
		                var tempA:Array = params[i].split("=");  
		                if (tempA[0] == StlConstants.STL_INFO_PK) {
		                    stlInfoPk = tempA[1];
		                }
		                if(tempA[0] == StlConstants.COPY_FLAG) {
		                	copyFlag = tempA[1];
		                }
		            }                    
				 } catch (e:Error) {
		            trace(e);
		        }
		    }
		    /**
		    * This method works as the result handler of the Submit Query Http Services.
		    * 
		    */
		    public function onResult(event:ResultEvent):void {
		    	if (null != event) {  
		    		if(null == event.result){
		    			//queryResult.removeAll(); // clear previous data if any as there is no result now.
		            	if(null == event.result.XenosErrors){ // i.e. No result but no Error found.
		            	  errPage.clearError(event);
		            	  XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
		            	} else { // Must be error
		            		
		            		errPage.displayError(event);
		            	}            	
		            }else {
		            	errPage.clearError(event);
		            	queryResult = event.result as XML;
		            	if(XenosStringUtils.isBlank(queryResult.instructionRefNo)){
		            		XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
		            	}else {
		            		populateData();
		            	}
			        } 
		        }else {
		            //queryResult.removeAll();
		            XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
		        }
		    }
		    /**
		    * Populate the Status Strings
		    */
		    private function populateData():void{
		    	if(!XenosStringUtils.equals(queryResult.inxStatus,Globals.STATUS_CANCEL)){
		    		    	transmissionStatusStr = queryResult.transmissionStatus;
		    	}else {
		    				transmissionStatusStr = "CANCELLED";
		    	}
		    	if(XenosStringUtils.equals(queryResult.inxStatus,Globals.STATUS_NORMAL)){
					if(queryResult.transReqdForCxl == "N")
						acceptanceStatusStr = "(Marked)";
					else
						acceptanceStatusStr = queryResult.acceptanceStatus;
				}
				else{
					acceptanceStatusStr = queryResult.acceptanceStatus;
				}
				if(XenosStringUtils.equals(queryResult.inxStatus,Globals.STATUS_CANCEL)){
					if(queryResult.transReqdForCxl == "N"){
						if(queryResult.acceptanceStatus == "NG")
							cxlAcceptanceStatusStr = "";
						else
							cxlAcceptanceStatusStr = "(Reset)";
					}
					else if(queryResult.transReqdForCxl == "Y"){
							cxlAcceptanceStatusStr = queryResult.cxlAcceptanceStatus;
					}
					else if(queryResult.transReqdForCxl == null){
							cxlAcceptanceStatusStr = "(Expired)";
					}
				}
				else{
					cxlAcceptanceStatusStr = "";
				}
		    }
		]]>
	</mx:Script>
	
	<!--The popup Query request HTTPService object-->
     <cntrls:XenosHTTPService id="inxViewRequest"
     	 showBusyCursor="true"
     	 method="POST" 
     	 url="stl/trxMaintenanceDetailsDispatch.action?method=view" 
         result="onResult(event)" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultDetail)"
         useProxy="false" resultFormat="e4x">
       
    </cntrls:XenosHTTPService>
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" height="100%">
    	<mx:HBox width="100%" styleName="ButtonBackPanel" horizontalAlign="right">
    		<mx:Button id="print" styleName="PrintBtnStyle" toolTip="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.print')}" click="PrintUtils.printDetail(this.instructionView)"/>
    	</mx:HBox>
    
	    <mx:VBox id="instructionView" width="100%" verticalGap="0" horizontalGap="0" height="100%">
			 <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
			 <mx:Grid verticalGap="0" horizontalGap="0" width="100%">
			 <mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inxtransmission')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.transmissionReqd}"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.copyflag')}"  styleName="FormLabelHeading"/>
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.copyFlag}"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.instructionrefno')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.instructionRefNo}"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.firmsettlementaccount')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.firmSettlementAccount}"/>
					</mx:GridItem>
					
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmissionstatus')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{transmissionStatusStr}"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmissiondate')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.transmissionDate}"/>
					</mx:GridItem>
					
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.ackstatus')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{acceptanceStatusStr}"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.errorcode')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.errorCode}"/>
					</mx:GridItem>
					
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.errorDesc')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="80%" colSpan="3">
						<mx:Label text="{queryResult.errorDesc}"/>
					</mx:GridItem>
				</mx:GridRow>	
				<mx:GridRow width="100%">	
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.cxlackstatus')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{cxlAcceptanceStatusStr}"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.cxlerrorcode')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.cxlErrorCode}"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.cxlerrorDesc')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="80%" colSpan="3">
						<mx:Label text="{queryResult.cxlErrorDesc}"/>
					</mx:GridItem>
				</mx:GridRow>
			 </mx:Grid>
		</mx:VBox>	
	</mx:VBox> 	
</mx:Module>
