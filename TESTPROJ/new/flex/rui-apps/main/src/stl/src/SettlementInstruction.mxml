<?xml version="1.0" encoding="utf-8"?>

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" creationComplete="loadAll()">
	<mx:Script>
		<![CDATA[
			import com.nri.rui.core.Globals;
			import com.nri.rui.core.utils.XenosStringUtils;
			import com.nri.rui.core.RendererFectory;
			import mx.controls.dataGridClasses.DataGridColumn;
			import com.nri.rui.core.controls.XenosAlert;
			import mx.events.DataGridEvent;
			import com.nri.rui.stl.renderers.StlAmendCpSsiFromInxRenderer;
			
			public var trxpop : TrxConfirm;
			public var duplicatepop : TrxDuplicateRecords;
			public var pset70eFlag:Boolean = true;
			public var bulkTransmitInx : BulkTransmitInx;
            
            private function getFundAccountNo(item:Object,column : DataGridColumn):String {
            	return item.fundAccountNo;
            }
            
            private function getFirmBrokerCode(item:Object,column : DataGridColumn):String {
				var obj:XML = XML(item);
				
				if(obj.child("brokerCode").length()>0) 
					return item.displayAccountNo+"("+item.brokerCode+")";
				else
					return item.displayAccountNo+"()";
            }
            
            private function getReferenceNo(item:Object,column : DataGridColumn):String {
            	return item.settlementReferenceNo+"-"+item.versionNo;
            }
            
            private function getTrxStatus(item:Object,column : DataGridColumn):String {
            	
            	if(item.status == "CANCEL") 
            		return "CANCELLED";
            	else 
            		return item.transmissionStatus;
            }
            
            private function getAckStatus(item:Object,column : DataGridColumn):String{
            	
            	var obj:XML = XML(item);
            	
            	var acceptanceStatus:String = obj.child("acceptanceStatus").toString();
            	
            	if(StringUtil.trim(acceptanceStatus) == Globals.EMPTY_STRING || StringUtil.trim(acceptanceStatus)== null) {
            		acceptanceStatus = "";
            	}
            	            	
            	if(item.status == Globals.STATUS_NORMAL) {
            		if(item.transReqdForCxl == "N") {
            			return "(Marked)";
            		} else {
            			return acceptanceStatus;
            		}
            	}
            	return acceptanceStatus;
            }
            
            private function getCxlAckStatus(item:Object,column : DataGridColumn):String{
            	
            	var obj:XML = XML(item);
            	
            	if(item.status == Globals.STATUS_CANCEL) {
            		if(XenosStringUtils.equals(item.actualTrxFlag,Globals.DATABASE_NO)) {
            			return "(Marked)";
            		} else if(item.transReqdForCxl == "N") {
            			if(item.acceptanceStatus == "NG") {
            				return XenosStringUtils.EMPTY_STR;
            			} else {
            				return "(Reset)";
            			}
            		} else if(item.transReqdForCxl == "Y") {
            			return item.cxlAcceptanceStatus;
            		} else if(!obj.child("transReqdForCxl").length()>0) {
            			return "(Expired)";
            		}
            	}
            	return "";
            }
            
            private function getCpSsiInfo(item:Object,column : DataGridColumn):String{
            	if(item.dtcParticipantId != null) {
            		return item.dtcParticipantIdDisp;
            	} else if(item.contraId != null) {
            		return item.contraId;
            	} else {
            		return item.cpSsiInternational;
            	}
            }
            
            /**
 			*  datagrid header release event handler to handle datagridcolumn sorting
 			*/
			public function dataGrid_headerRelease(evt:DataGridEvent):void {				
				var dg:CustomDataGrid = CustomDataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];
			}
			
			private function selectColor(item:Object, color:uint):uint {
				
				if(XenosStringUtils.equals(item.unknownCpSsi, Globals.DATABASE_YES)){
					return 0xFFCCFF;
				}
				if(!XenosStringUtils.isBlank(item.preferredCodetypeNotset)) {
					return 0xFFFF00;
				}
				if(!XenosStringUtils.isBlank(item.psetNotset)) {
					return 0x9966FF;
				}
				if(!XenosStringUtils.isBlank(item.pset70tag)) {
					return 0xFF6633;
				}
				return color;
			}
            
		]]>
	</mx:Script>
	
    <mx:Script source="actionscripts/SettlementInstruction.as"/>
      <mx:states>
    	<mx:State name="result">
            <mx:SetProperty target="{stackForQry}" name="width" value="0%"/>
          <mx:SetProperty target="{stack}" name="width" value="100%"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{stackForQry}" name="width" value="50%"/>
            <mx:SetProperty target="{stack}" name="width" value="50%"/>
           <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </mx:states> 
    <!-- Define Transition array with one Transition object.-->
   <mx:transitions>
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <mx:Parallel id="t1" targets="{[stackForQry,stack]}">
                <mx:Move  duration="400"/>
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>
    	
    <cntrls:XenosHTTPService id="initializeInxQuery" fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred.initialize') + event.fault.faultString)" 
             method="POST" useProxy="false" result="initPage(event)" showBusyCursor="true"/> 
     
     <cntrls:XenosHTTPService id="inxQueryResetRequest" 
         url="stl/trxMaintenanceQueryDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultDetail)"
         result="initPage(event)" showBusyCursor="true"/>
             
    <cntrls:XenosHTTPService id="inxQueryRequest" 
         url="stl/trxMaintenanceQueryDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultDetail)"
         result="loadSummaryPage(event)" showBusyCursor="true" resultFormat="xml" method="POST"/>
         
    <cntrls:XenosHTTPService id="inxDetailConfirmRequest" 
         url="stl/trxMaintenanceDetailsDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultDetail)"
         result="confirmHandler(event)" showBusyCursor="true" resultFormat="xml" method="POST"/> 
    
    <cntrls:XenosHTTPService id="populatePset70eNarrative" 
         url="stl/trxMaintenanceQueryDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultDetail)"
         result="loadValuesForDropDown(event)" showBusyCursor="true" />
         
    <cntrls:XenosHTTPService id="addPset70eNarrative" 
         url="stl/trxMaintenanceDetailsDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultDetail)"
         result="submitQuery()" showBusyCursor="true" resultFormat="xml" method="POST"/>    
    
    <cntrls:XenosHTTPService id="bulkTransmitRequest" 
         url="stl/trxMaintenanceQueryDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultDetail)"
         result="openBulkTransmitUserConfirmation(event)" showBusyCursor="true" resultFormat="xml" method="POST"/>
    
    <mx:VBox id="stateVb" width="100%" verticalGap="0" horizontalGap="0" >    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="clearState()"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="changeState()" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
         
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
	    <mx:VBox width="100%" height="100%" >	    	
	    	<mx:HDividedBox id="hdbox1" styleName="Padding4" width="100%" height="100%" liveDragging="true" creationComplete="initPageStart()">
				<mx:ViewStack id="stackForQry" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" width="100%" height="100%" creationPolicy="all">
			    	<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
			    	
			       	<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
			            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
			            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
			            <mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />
			            <mx:Grid width="100%" borderThickness="0">
			            	<mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundcode')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <xenospopup:FundPopUpHbox id="fundPopUp"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <xenospopup:AccountPopUpHbox id="fundActPopUp" retContextItem="{returnFundContextItem}" recContextItem="{populateFundContext()}" />
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.swiftrefno')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:TextInput id="swiftRefNo" text="" restrict="{Globals.INPUT_PATTERN}"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.refno')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:TextInput id="inxRefNo" text="" restrict="{Globals.INPUT_PATTERN}"/>
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ourbank')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <xenospopup:FinInstitutePopUpHbox id="bankPopUp" recContextItem="{populateFinInstRole()}"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.oursettleac')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <xenospopup:AccountPopUpHbox id="ourActPopUp" retContextItem="{returnOurContextItem}" recContextItem="{populateOurContext()}" />
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.opobj')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:ComboBox id="opObjective" labelField="label" change="onChangeOperationObjective(event)" width="160" itemRenderer="mx.controls.Label" />
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.ackstatus')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:ComboBox id="ackStatus" labelField="label" prompt="Select" width="160" itemRenderer="mx.controls.Label"/>
		                        </mx:GridItem> 
		                    </mx:GridRow>
			            </mx:Grid>
			            
			            <flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" opened="false" width="100%">
			            <mx:Grid width="100%" borderThickness="0">
			            	<mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.traderefno')}"/>
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:TextInput id="tradeRefNo" text="" restrict="{Globals.INPUT_PATTERN}"/>
		                           <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.for')}" />
		                           <mx:ComboBox id="tradeReferenceForValues" labelField="label" prompt="Select" width="125" itemRenderer="mx.controls.Label"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.stlrefno')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:TextInput id="refNo" text="" restrict="{Globals.INPUT_PATTERN}"/>
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.valuedatefromto')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:HBox width="100%">
		                                   <mx:DateField id="valdateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
		                                   <mx:DateField id="valdateTo" formatString="YYYYMMDD" editable="true" width="90"/>
		                            </mx:HBox>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedatefromto')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:HBox width="100%">
		                                   <mx:DateField id="trddateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
		                                   <mx:DateField id="trddateTo" formatString="YYYYMMDD" editable="true" width="90"/>
		                            </mx:HBox>
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <xenospopup:InstrumentPopUpHbox id="instPopUp"/>  
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitytype')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                             <cntrls:TreeCombo id="instrumentType" dataSource="{new XML((app.cachedItems.instrumentTree).toString())}" editMode="true" displayClearIcon="true" labelField="label" treeHeight="200"  x="10" y="10">
		                            </cntrls:TreeCombo>
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyac')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <xenospopup:AccountPopUpHbox id="cpActPopUp" retContextItem="{returnCpContextItem}" recContextItem="{populateCpContext()}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <!--mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.localac')}" /-->
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementccy')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <!--xenospopup:LocalAccountPopUpHbox id="localAc"/-->
		                           <cntrls:CurrencyHBox id="ccyBox"/>
		                           <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.exclude')}" name="{this.parentApplication.xResourceManager.getKeyValue('stl.label.exclude')}" id="stlCcyChkBox"/>
		                        </mx:GridItem>  
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementfor')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:ComboBox id="settlementFor" labelField="label" prompt="Select" width="160" itemRenderer="mx.controls.Label"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradeccy')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <cntrls:CurrencyHBox id="tradeCcyBox"/>
		                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.exclude')}" name="{this.parentApplication.xResourceManager.getKeyValue('stl.label.exclude')}" id="trdCcyChkBox"/>
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    
		                    <mx:GridRow width="100%">
		                    <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="" />
		                    </mx:GridItem>
		                    <mx:GridItem width="80%" borderThickness="0" colSpan="3">
			                        	<mx:HBox width="100%">
			                        	<mx:Grid width="100%" borderThickness="0">
			                        		<mx:GridRow width="100%">
						                        <mx:GridItem borderThickness="0">
						                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cashfreepayment')}" name="CASH_FREE_DELIVER" id="cashDel"/>
						                        </mx:GridItem>
						                        <mx:GridItem borderThickness="0">
						                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cashfreereceipt')}" name="CASH_FREE_RECEIVE" id="cashRec"/>
						                        </mx:GridItem>
						                        <mx:GridItem borderThickness="0">
						                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.dvp')}" name="DELIVER_AGAINST_PAYMENT" id="dvp"/>
						                        </mx:GridItem>
						                        <mx:GridItem borderThickness="0">
						                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.rvp')}" name="RECEIVE_AGAINST_PAYMENT" id="rvp"/>
						                        </mx:GridItem>
						                        <mx:GridItem borderThickness="0">
						                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.freedeliver')}" name="SECURITY_FREE_DELIVER" id="secDel"/>
						                        </mx:GridItem>
						                        <mx:GridItem borderThickness="0">
						                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.freereceipt')}" name="SECURITY_FREE_RECEIVE" id="secRec"/>
						                        </mx:GridItem>
						                    </mx:GridRow>
						                    </mx:Grid>
			                        	</mx:HBox>
			                 </mx:GridItem>
		                    </mx:GridRow>
		                    
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.inxcreateddate')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:DateField id="inxCreateDate"  formatString="YYYYMMDD" editable="true" width="90"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmissiondate')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:DateField id="trxDate"  formatString="YYYYMMDD" editable="true" width="90"/>
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%" >
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.office')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:ComboBox id="office" prompt="Select" width="160" itemRenderer="mx.controls.Label"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label id="origindatasourceLabel"  text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.origindatasource')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:ComboBox id="origindatasource" prompt="Select" width="160" itemRenderer="mx.controls.Label"/>
		                        </mx:GridItem> 
		                    </mx:GridRow>   
		                    <mx:GridRow width="100%" id="g1" includeInLayout="false" visible="false">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.status')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:ComboBox id="status" labelField="label" prompt="Select" width="160" itemRenderer="mx.controls.Label"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:Label text="" />
		                        </mx:GridItem> 
                    		</mx:GridRow>                 
			            </mx:Grid>
			            </flexlib:WindowShade>
			            
			            <flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
			                <mx:Grid width="100%" id="sg1" includeInLayout="true" visible="true" borderThickness="0">
			                    <mx:GridRow width="100%">
			                        <mx:GridItem width="100%" borderThickness="0">
			                            <mx:HBox width="100%">
			                                <mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"/>
			                                <mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"/>
			                                <mx:ComboBox id="sortField3" labelField="label"/>
			                            </mx:HBox> 
			                        </mx:GridItem>                         
			                    </mx:GridRow>
			                </mx:Grid>  
		            	</flexlib:WindowShade>
		            
		            <mx:HBox width="100%" styleName="ButtonBackPanel">            
		                <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="inxSubmit" styleName="BtnStyle" click="this.submitQuery();" />
		                <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle"  click="this.resetQuery();"/>                    
		            </mx:HBox>
		            
		            </mx:VBox>
		            </mx:Canvas>
					<mx:Canvas id="inxQry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
			    	
			       	<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
			            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
			            <cntrls:XenosErrors id="inxErrPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
			            <mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />
			            <mx:Grid width="100%" borderThickness="0">
			            	<mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundcode')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <xenospopup:FundPopUpHbox id="fundPopUpForInxQry"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <xenospopup:AccountPopUpHbox id="fundActPopUpForInxQry" retContextItem="{returnFundContextItem}" recContextItem="{populateFundContext()}" />
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
								<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.officeid')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:ComboBox id="officeForInxQry" prompt="Select" width="160" itemRenderer="mx.controls.Label"/>
		                        </mx:GridItem>
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.reportReferenceNo')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:TextInput id="reportRefNoForInxQry" text="" restrict="{Globals.INPUT_PATTERN}"/>
		                        </mx:GridItem>						                        
		                    </mx:GridRow>
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.inxcreateddate')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:DateField id="inxCreateDateForInxQry"  formatString="YYYYMMDD" editable="true" width="90"/>
		                        </mx:GridItem> 
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmissiondate')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:DateField id="trxDateForInxQry"  formatString="YYYYMMDD" editable="true" width="90"/>
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    <mx:GridRow width="100%" >
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.opobj')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:ComboBox id="opObjectiveForInxQry" labelField="label" change="onChangeOperationObjective(event)" width="160" itemRenderer="mx.controls.Label" />
		                        </mx:GridItem>
		                    </mx:GridRow>                    
			            </mx:Grid>
			            <flexlib:WindowShade id="ws4" tabChildren="{ws4.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">                
		                <mx:Grid width="100%" id="sg2" includeInLayout="true" visible="true" borderThickness="0">
		                    <mx:GridRow width="100%" >
		                        <mx:GridItem width="100%" borderThickness="0">
		                            <mx:HBox width="100%">
		                                <mx:ComboBox id="sortField4" labelField="label" change="sortOrder4Update()"/>
		                                <mx:ComboBox id="sortField5" labelField="label"/>                                
		                            </mx:HBox> 
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                </mx:Grid>                
		            </flexlib:WindowShade>
		            
		            <mx:HBox width="100%" styleName="ButtonBackPanel">            
		                <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="this.submitQuery();" />
		                <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle"  click="this.resetQuery();"/>                    
		            </mx:HBox>            
		            </mx:VBox>
		            <!-- Help Grid -->
			       	<mx:VBox width="100%" height="100%" id="helpBox" styleName="HDivideStyle" visible="false" includeInLayout="false">
			       		<mx:Grid width="100%" borderThickness="0" verticalGap="0" horizontalGap="0">
			       			<mx:GridRow width="100%" backgroundColor="0xFFCCFF" borderThickness="0">
		                        <mx:GridItem width="100%">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.unknown.cpssi')}" />
		                        </mx:GridItem>
				            </mx:GridRow>
				            <mx:GridRow width="100%" backgroundColor="0xFFFF00" borderThickness="0">
		                        <mx:GridItem width="100%">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.preferred.code.notset')}" />
		                        </mx:GridItem>
				            </mx:GridRow>
				            <mx:GridRow width="100%" backgroundColor="0x9966FF" borderThickness="0">
		                        <mx:GridItem width="100%">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.others.missing.bic.participantid')}" />
		                        </mx:GridItem>
				            </mx:GridRow>
				            <mx:GridRow width="100%" backgroundColor="0xFF6633" borderThickness="0">
		                        <mx:GridItem width="100%">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.70E.tag.text.required')}" />
		                        </mx:GridItem>
				            </mx:GridRow>
			       		</mx:Grid>
	       			</mx:VBox>
		        </mx:Canvas>
            </mx:ViewStack>
	        <mx:ViewStack id="stack" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" width="0%" height="100%" creationPolicy="auto">
	         <mx:VBox width="100%" height="100%" id="query" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" updateComplete="setVisibleQh(qh1)">
	         	<cntrls:QueryResultHeader id="qh1" pdfFunction="generatePdf" xlsFunction="generateXls" printFunction="doPrint" previousFunction="doPrev" nextFunction="doNext" width="100%" startIndex="2" showRecordCount="true"/>
	         	<mx:HBox width="100%" styleName="ButtonBackPanel" verticalCenter="0" verticalAlign="middle" horizontalAlign="left" paddingLeft="0" paddingRight="0">
                    <mx:HBox height="100%" width="100%" verticalCenter="0" verticalAlign="middle" horizontalAlign="left">
                        <mx:Label width="100%" id="swiftNormal" text="" fontWeight="bold" verticalCenter="0" textAlign="left" height="40"/>
                    </mx:HBox>  
                </mx:HBox>
	         	<mx:Label textAlign="center" width="100%" fontWeight="bold" text="{opObjDisp}"/> 
	         	<cntrls:CustomDataGrid id="inxSummary1" width="100%" height="100%" dataProvider="{summaryResult}" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindQryDataGrid(qh1,inxSummary1)">
	             <cntrls:columns>
	             	 <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.stl.renderers.InxImgSummaryRenderer" sortable="false" editable="false"/>
	             	 <mx:DataGridColumn textAlign="center" headerText="View" dataField="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.stl.renderers.InstructionViewRenderer" editable="false" sortable="false" />
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.stlrefnoversion')}" width="130" dataField=""  labelFunction="getReferenceNo" itemRenderer="com.nri.rui.stl.renderers.SettlementInstructionDetailRenderer" editable="false" sortCompareFunction="sortUtil.sortString" />

	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" dataField="inventoryAccountPk" labelFunction="getFundAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" editable="false" sortCompareFunction="sortUtil.sortString"  />
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountname')}" visible="false" dataField="fundAccountName" editable="false" sortCompareFunction="sortUtil.sortString"  />
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.instructionreferenceno')}" width="145" dataField="instructionRefNo" editable="false" sortCompareFunction="sortUtil.sortString" itemRenderer="com.nri.rui.stl.renderers.ViewMT54xRenderer"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cxlinstructionreferenceno')}" width="145" dataField="cxlInstructionRefNo" editable="false" visible="false" sortCompareFunction="sortUtil.sortString" itemRenderer="com.nri.rui.stl.renderers.ViewMT54xRenderer"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedate')}" dataField="tradeDateStr"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.valuedate')}" dataField="valueDateStr"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyac')}" dataField="cpTradingAccount" visible="false" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyaccountname')}" visible="false" dataField="cpTradingAccountName" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	             	 <!--mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.localac')}" dataField="localAccountNo" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/-->
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.deliverreceive')}" dataField="deliverReceiveDisplay"  editable="false" sortCompareFunction="sortUtil.sortString"/>

	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" dataField="instrumentPk" labelFunction="getInstrumentCode" editable="false"  sortCompareFunction="sortUtil.sortString" itemRenderer="com.nri.rui.core.renderers.AdvInstrumentDetailsRenderer"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityShortName" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="altSecurityCode" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/>
					 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.quantity')}" dataField="instructionQuantityStr" textAlign="right" visible="false" editable="false" sortCompareFunction="sortUtil.sortNumeric"  />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.isincode')}" dataField="isinCode" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ccy')}" dataField="ccyCode" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.amount')}" dataField="instructionAmountStr" textAlign="right" visible="false" editable="false" sortCompareFunction="sortUtil.sortNumeric" />
					 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.brokerbank')}" dataField="brokerBankPk" labelFunction="getCpBankDisplay" itemRenderer="com.nri.rui.stl.renderers.BrokerBankDetailRenderer" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.brokerstlaccount')}" dataField="brokerAccountPk" labelFunction="getCpAccountNo" itemRenderer="com.nri.rui.stl.renderers.BrokerAccountDetailRenderer" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.participantid')}" dataField="participantId" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.participantid2')}" dataField="participantId2" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.psetcode')}" dataField="psetDisplay" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.receiverbic')}" dataField="firmBank"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.receivername')}" visible="false" dataField="firmBankName"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <!--mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundbankname')}" visible="false" dataField="firmBankName"  editable="false" sortCompareFunction="sortUtil.sortString"/>-->
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.firmac')}" dataField="" labelFunction="getFirmBrokerCode"  editable="false" sortCompareFunction="sortUtil.sortString" />
					 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmissionstatus')}" dataField="" labelFunction="getTrxStatus" editable="false" sortCompareFunction="sortUtil.sortString" />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.ackstatus')}" dataField="status"  labelFunction="getAckStatus" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.status')}" dataField="csiStatus"  itemRenderer="com.nri.rui.core.renderers.StatusRenderer" editable="false" id="cstatus" sortCompareFunction="sortUtil.sortString"/>
					 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.cxlackstatus')}" dataField="acceptanceStatus" labelFunction="getCxlAckStatus" editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
					 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.copy')}" dataField="copyFlag" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <!--<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cpssiinfo')}" dataField="" labelFunction="getCpSsiInfo" editable="false" />-->
	              </cntrls:columns>
	            </cntrls:CustomDataGrid>
	       	</mx:VBox>
	       	
	        <mx:VBox width="100%" height="100%" id="sendNew" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" updateComplete="setVisibleQh(qh2)">
	         <cntrls:QueryResultHeader id="qh2" pdfFunction="generatePdf" xlsFunction="generateXls" printFunction="doPrint" previousFunction="doPrev" nextFunction="doNext" width="100%" startIndex="2" showHelp="true" helpFunction="displayHelp" showRecordCount="true"/>
	         		<cntrls:XenosErrors id="errPage2" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
	         		<cntrls:XenosErrors id="errPageResultSummary" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
	         		<mx:HBox width="100%">
	         			<cntrls:SoftWarningControl id="softWarning" color="#FF0000" backgroundAlpha="0" borderStyle="none" fontWeight="bold"/>
	         			<mx:Label id="sendNewDispText" fontWeight="bold"   text="{opObjDisp}" visible="false" includeInLayout="false" />
	         			<mx:Label id="sendNewDispTextOriginal" width="100%" textAlign="center" fontWeight="bold"  text="{opObjDisp}"/>
	         		</mx:HBox>
	            	
	         		<cntrls:CustomDataGrid id="inxSummary2" width="100%" height="100%" dataProvider="{summaryResult}" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="on" creationComplete="bindQryDataGrid(qh2,inxSummary2)" rowColorFunction="selectColor">
	         	
	             <cntrls:columns>
	             	 <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.stl.renderers.InxImgSummaryRenderer" sortable="false" editable="false"/>
	             	 <mx:DataGridColumn textAlign="center" headerText="" width="45" id="dgColumnCb1" editable="false" dataField="selected" sortable="false"  headerRenderer="com.nri.rui.stl.renderers.SelectAllRecords" itemRenderer="com.nri.rui.stl.renderers.SelectRecord" />
	             	 <mx:DataGridColumn headerText="" width="40"  draggable="false" resizable="false" id="imgRenderer" itemRenderer="{new RendererFectory(StlAmendCpSsiFromInxRenderer,mode)}" textAlign="center" sortable="false"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.stlrefnoversion')}" width="130" dataField=""  labelFunction="getReferenceNo" itemRenderer="com.nri.rui.stl.renderers.SettlementInstructionDetailRenderer" editable="false" sortCompareFunction="sortUtil.sortString"  />
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" dataField="" labelFunction="getFundAccountNo" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountname')}" visible="false" dataField="fundAccountName" editable="false" sortCompareFunction="sortUtil.sortString"  />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedate')}" dataField="tradeDateStr"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.valuedate')}" dataField="valueDateStr"  editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyac')}" dataField="cpTradingAccount" editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyaccountname')}" visible="false" dataField="cpTradingAccountName" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	             	 <!--mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.localac')}" dataField="localAccountNo" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/-->	            	 
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.delrec')}" dataField="deliverReceiveDisplay"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" dataField="instrumentCode" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityShortName" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="altSecurityCode" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.quantity')}" dataField="instructionQuantityStr" textAlign="right" editable="false" visible="false" sortCompareFunction="sortUtil.sortNumeric"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.isincode')}" dataField="isinCode" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ccy')}" dataField="ccyCode" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.origindatasource')}" dataField="originDataSource" editable="false" sortCompareFunction="sortUtil.sortString"/>
	              	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.amount')}" dataField="instructionAmountStr" textAlign="right" editable="false" visible="false" sortCompareFunction="sortUtil.sortNumeric"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.brokerbank')}" dataField="cpBankDisplay" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.brokerstlaccount')}" dataField="cpAccountNo" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.participantid')}" dataField="participantId" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.participantid2')}" dataField="participantId2" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.psetcode')}" dataField="psetDisplay" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.receiverbic')}" dataField="firmBank"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.receivername')}" visible="false" dataField="firmBankName"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.firmac')}" dataField="" labelFunction="getFirmBrokerCode"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmissionstatus')}" dataField="" labelFunction="getTrxStatus" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.ackstatus')}" dataField="status"  labelFunction="getAckStatus" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.status')}" dataField="csiStatus"  itemRenderer="com.nri.rui.core.renderers.StatusRenderer" editable="false" id="snStatus" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.cxlackstatus')}" dataField="acceptanceStatus" labelFunction="getCxlAckStatus" editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.freetexttype')}" dataField="freeTextType" id="tt1" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.freetext')}" dataField="freeTextValue" id="txt1" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="Add Fields" itemRenderer="com.nri.rui.stl.renderers.StlAddButtonRenderer"/>
	             </cntrls:columns>
	         </cntrls:CustomDataGrid> 
	         
	         <mx:HBox id="hbTransmit" width="100%" styleName="ButtonBackPanel">            
                <cntrls:XenosButton id="transmit" label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmit')}" styleName="BtnStyle" click="this.validateRecords();" />
                <cntrls:XenosButton id="duplicatebtn" label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.duplecate')}" styleName="BtnStyle" click="this.duplicateRecords();" visible="false" includeInLayout="false"/>
                <cntrls:XenosButton id="transmitAll" label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmit.all')}" styleName="BtnStyle" click="this.bulkTransmit();"/>
             </mx:HBox>
            
	        </mx:VBox>
	        
	        
	        <mx:VBox width="100%" height="100%" id="pending" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" updateComplete="setVisibleQh(qh4)">
	         <cntrls:QueryResultHeader id="qh4" pdfFunction="generatePdf" xlsFunction="generateXls" printFunction="doPrint" previousFunction="doPrev" nextFunction="doNext" width="100%" startIndex="2" showRecordCount="true" showHelp="true" helpFunction="displayHelp"/>
	         		<cntrls:XenosErrors id="errPage4" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
	         		<cntrls:XenosErrors id="errPageResultSummaryPending" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
	            	<mx:Label textAlign="center" width="100%" fontWeight="bold"  text="{opObjDisp}"/> 
	         		<cntrls:CustomDataGrid id="inxSummary4" width="100%" height="100%" dataProvider="{summaryResult}" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="on" creationComplete="bindQryDataGrid(qh4,inxSummary4)" rowColorFunction="selectColor">
	         	
	             <cntrls:columns>
	             	 <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.stl.renderers.InxImgSummaryRenderer" sortable="false" editable="false"/>
	             	 <mx:DataGridColumn headerText="" width="40"  draggable="false" resizable="false" id="imgRendererPending" itemRenderer="{new RendererFectory(StlAmendCpSsiFromInxRenderer,mode)}" textAlign="center" sortable="false"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.stlrefnoversion')}" width="130" dataField=""  labelFunction="getReferenceNo" itemRenderer="com.nri.rui.stl.renderers.SettlementInstructionDetailRenderer" editable="false" sortCompareFunction="sortUtil.sortString"  />
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" dataField="" labelFunction="getFundAccountNo" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountname')}" visible="false" dataField="fundAccountName" editable="false" sortCompareFunction="sortUtil.sortString"  />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedate')}" dataField="tradeDateStr"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.valuedate')}" dataField="valueDateStr"  editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyac')}" dataField="cpTradingAccount" editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyaccountname')}" visible="false" dataField="cpTradingAccountName" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	             	 <!--mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.localac')}" dataField="localAccountNo" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/-->	            	 
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.delrec')}" dataField="deliverReceiveDisplay"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" dataField="instrumentCode" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityShortName" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="altSecurityCode" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.quantity')}" dataField="instructionQuantityStr" textAlign="right" editable="false" visible="false" sortCompareFunction="sortUtil.sortNumeric"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.isincode')}" dataField="isinCode" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ccy')}" dataField="ccyCode" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.amount')}" dataField="instructionAmountStr" textAlign="right" editable="false" visible="false" sortCompareFunction="sortUtil.sortNumeric"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.brokerbank')}" dataField="cpBankDisplay" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.brokerstlaccount')}" dataField="cpAccountNo" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.participantid')}" dataField="participantId" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.participantid2')}" dataField="participantId2" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.psetcode')}" dataField="psetDisplay" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.receiverbic')}" dataField="firmBank"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.receivername')}" visible="false" dataField="firmBankName"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.firmac')}" dataField="" labelFunction="getFirmBrokerCode"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmissionstatus')}" dataField="" labelFunction="getTrxStatus" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.ackstatus')}" dataField="status"  labelFunction="getAckStatus" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.status')}" dataField="csiStatus"  itemRenderer="com.nri.rui.core.renderers.StatusRenderer" editable="false" id="snStatusPending" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.cxlackstatus')}" dataField="acceptanceStatus" labelFunction="getCxlAckStatus" editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.freetexttype')}" dataField="freeTextType" id="ptt1" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.freetext')}" dataField="freeTextValue" id="ptxt1" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="Add Fields" itemRenderer="com.nri.rui.stl.renderers.StlAddButtonRenderer"/>
	             </cntrls:columns>
	         </cntrls:CustomDataGrid> 
            
	        </mx:VBox>
	        
	        
	        
	        <mx:VBox width="100%" height="100%" id="other" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" updateComplete="setVisibleQh(qh3)">
	         	<cntrls:QueryResultHeader id="qh3" pdfFunction="generatePdf" xlsFunction="generateXls" printFunction="doPrint" previousFunction="doPrev" nextFunction="doNext" width="100%" startIndex="3" showRecordCount="true"/>
	         	<cntrls:XenosErrors id="errPage3" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
	         	<mx:Label textAlign="center" width="100%" fontWeight="bold" id="resultHead" text="{opObjDisp}"/> 
	         	<cntrls:CustomDataGrid id="inxSummary3" width="100%" height="100%" dataProvider="{summaryResult}" editable="true" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="on" creationComplete="bindQryDataGrid(qh3,inxSummary3)">
	             <cntrls:columns>
	             	 <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" sortable="false" itemRenderer="com.nri.rui.stl.renderers.InxImgSummaryRenderer" editable="false"/>
	             	 <mx:DataGridColumn textAlign="center" headerText="" width="45" id="dgColumnCb2" editable="false" dataField="selected" sortable="false"  headerRenderer="com.nri.rui.stl.renderers.SelectAllRecords" itemRenderer="com.nri.rui.stl.renderers.SelectRecord" />
	             	 <mx:DataGridColumn id="TransmissionViewPopupColumn" textAlign="center" headerText="View" dataField="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.stl.renderers.InstructionViewRenderer" editable="false" sortable="false" />
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.stlrefnoversion')}" width="130" dataField=""  labelFunction="getReferenceNo" itemRenderer="com.nri.rui.stl.renderers.SettlementInstructionDetailRenderer" editable="false" sortCompareFunction="sortUtil.sortString" />
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" dataField="" labelFunction="getFundAccountNo" editable="false" sortCompareFunction="sortUtil.sortString" />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountname')}" visible="false" dataField="fundAccountName" editable="false" sortCompareFunction="sortUtil.sortString"  />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.instructionreferenceno')}" width="145" dataField="instructionRefNo" editable="false" sortCompareFunction="sortUtil.sortString" itemRenderer="com.nri.rui.stl.renderers.ViewMT54xRenderer" id="instRefNo" />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedate')}" dataField="tradeDateStr"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.valuedate')}" dataField="valueDateStr"  editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyac')}" dataField="cpTradingAccount" editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	             	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyaccountname')}" visible="false" dataField="cpTradingAccountName" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	             	 <!--mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.localac')}" dataField="localAccountNo" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/-->	            	 
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.delrec')}" dataField="deliverReceiveDisplay"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" dataField="instrumentCode" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityShortName" editable="false"  sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="altSecurityCode" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.quantity')}" dataField="instructionQuantityStr" textAlign="right" editable="false" visible="false" sortCompareFunction="sortUtil.sortNumeric" />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.isincode')}" dataField="isinCode" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ccy')}" dataField="ccyCode" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.amount')}" dataField="instructionAmountStr" textAlign="right" editable="false" visible="false" sortCompareFunction="sortUtil.sortNumeric" />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.brokerbank')}" dataField="cpBankDisplay" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.brokerstlaccount')}" dataField="cpAccountNo" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.participantid')}" dataField="participantId" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.participantid2')}" dataField="participantId2" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.psetcode')}" dataField="psetDisplay" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <!--<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cpssiinfo')}" dataField="" labelFunction="getCpSsiInfo" editable="false" sortCompareFunction="sortUtil.sortString"  />-->
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.receiverbic')}" dataField="firmBank"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.receivername')}" visible="false" dataField="firmBankName"  editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.firmac')}" dataField="" labelFunction="getFirmBrokerCode"  editable="false" sortCompareFunction="sortUtil.sortString"  />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.transmissionstatus')}" dataField="" labelFunction="getTrxStatus" editable="false" sortCompareFunction="sortUtil.sortString" />
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.ackstatus')}" dataField="status"  labelFunction="getAckStatus" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.status')}" dataField="csiStatus"  itemRenderer="com.nri.rui.core.renderers.StatusRenderer" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.cxlackstatus')}" dataField="acceptanceStatus" labelFunction="getCxlAckStatus" editable="false" visible="false" sortCompareFunction="sortUtil.sortString"/>
	            	 <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.copy')}" dataField="copyFlag" editable="false" sortCompareFunction="sortUtil.sortString"/>
	            </cntrls:columns>
	            </cntrls:CustomDataGrid>
	            <mx:HBox id="hbInxOP" width="100%" styleName="ButtonBackPanel">            
                	<cntrls:XenosButton id="btnInxOp" styleName="BtnStyle" click="validateRecords()"/>
             	</mx:HBox>	 
	       	</mx:VBox>
	       	<mx:VBox width="100%" height="100%" id="inxReportQuery" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" updateComplete="setVisibleQh(qh5)">
	         	<cntrls:QueryResultHeader id="qh5" previousFunction="doPrev" nextFunction="doNext" width="100%" startIndex="2" showRecordCount="true" />
	         	<cntrls:XenosErrors id="errPage5" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
	         	<mx:Label textAlign="center" width="100%" fontWeight="bold" text="{opObjDisp}"/> 
	         	<cntrls:CustomDataGrid id="inxSummary5" width="100%" height="100%" dataProvider="{summaryResult}" editable="true" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="on" creationComplete="bindQryDataGrid(qh5,inxSummary5)">
	             <cntrls:columns>
	             	<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" sortable="false" itemRenderer="com.nri.rui.stl.renderers.InxImgSummaryRenderer" editable="false"/>
	             	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.reportReferenceNo')}" width="130" dataField="reportReferenceNo" editable="false" />
		    		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" dataField="fundAccountPk" labelFunction="getFundAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" editable="false"/>
		    		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.transmissionDate')}" width="130" dataField="transmissionDateStr" editable="false"/>
		    		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.downloadReport')}" dataField="" itemRenderer="com.nri.rui.stl.renderers.InstructionReportXlsPdfRenderer" editable="false"/>	              
		        </cntrls:columns>
	            </cntrls:CustomDataGrid>
	       	</mx:VBox>
	       </mx:ViewStack>            
	     </mx:HDividedBox>
	     </mx:VBox>
	 </mx:Canvas>                    
</mx:Module>
