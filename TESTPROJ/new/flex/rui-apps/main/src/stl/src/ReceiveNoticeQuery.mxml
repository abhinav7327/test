<?xml version="1.0" encoding="utf-8"?>

<!--Mxml file for Receive Notice Query Implementation -->

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" 
           xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" 
           xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" 
           xmlns:valdtrs="com.nri.rui.core.validators.*" layout="vertical" percentWidth="100" 
           percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off">

	<mx:Script>
		<![CDATA[
		    import com.nri.rui.core.utils.XenosPopupUtils;
		    import mx.core.UIComponent;
			import mx.controls.DataGrid;
			import com.nri.rui.core.Globals;
			import mx.containers.TitleWindow;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			//import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.CheckBox;
			import mx.managers.PopUpManager;
			
			import com.nri.rui.core.controls.XenosAlert;
			import mx.events.DataGridEvent;
			
			[Embed(source="../../assets/img/inf/addcolunm.png")]
			[Bindable]
			private var icoColumns:Class;
            public static var popupColumns:TitleWindow = null;
            public var gridColumns:ArrayCollection = new ArrayCollection();
			private function changeCurrentState():void{
				currentState = "result";
				app.submitButtonInstance = null;
			}
			private function getReferenceNo(item:Object,column : DataGridColumn):String{
            	
            	return item.settlementReferenceNo+"-"+item.versionNo;
            	
            }
            
            private function getSecurityCode(item:Object,column : DataGridColumn):String{
            	
            	var obj:XML = XML(item);
				
				if(obj.child("extSecurityId").length()>0) 
					return item.extSecurityDisplayStr;
				else 
					return item.instrumentCode;
            	
            }
            
             private function getSecurityName(item:Object,column : DataGridColumn):String{
             	
             	var obj:XML = XML(item);
				
				if(obj.child("instrumentCode").length()>0) 
					return item.securityShortName;
				else 
					return item.correspondingSecurityName;
            	
            }
            private function getSecurityNameDataTip(item:Object):String{
            	
            	var obj:XML = XML(item);
				
				if(obj.child("instrumentCode").length()>0) 
					return item.securityShortName;
				else 
					return item.correspondingSecurityName;            	
            }
            
            private function getFundAccountNo(item:Object,column : DataGridColumn):String {
            	
            	return item.fundAccountNo;
            	
            }
            
            private function getSettleStatus(item:Object,column : DataGridColumn):String {
            	
            	if(item.failStatus == "FAIL") {
        			return item.failStatus;
        		} else {
        			return item.settleStatusString;
        		}
            }
			
			private function selectFailStatusColor(item:Object, color:uint):uint {
				if(item.failStatus == "FAIL"){
					return 0xFFCCFF;
				}
				return color;
			}
			
			/**
 			*  datagrid header release event handler to handle datagridcolumn sorting
 			*/
			public function dataGrid_headerRelease(evt:DataGridEvent):void {				
				//sortUtil.clickedColumn=evt.dataField;
				var dg:DataGrid = DataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];		
			}
			public function showSettlementDetail(stlPk:String):void{
			    var viewMode:String = "Instruction"; // Must be specified
    			var parentApp :UIComponent = UIComponent(this.parentApplication);    			
    			XenosPopupUtils.showSettlementDetails(stlPk, 
    												  parentApp,
    												  this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.settlementviewheader'),
    												  viewMode);
			}			
			public function showReceiveNoticeDetail(receiveNoticePk:String):void{			    
    			var parentApp :UIComponent = UIComponent(this.parentApplication);    			
    			XenosPopupUtils.showReceiveNoticeDetail(receiveNoticePk,parentApp);
			}
		]]>
	</mx:Script>
	
	<mx:Script source="actionscripts/ReceiveNoticeQuery.as"/>
    
    <mx:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </mx:states>
    <!-- Define Transition array with one Transition object.-->
    <mx:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>                
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>

	<cntrls:XenosHTTPService id="initializeReceiveNoticeQuery" fault="XenosAlert.error('Error Occured Initialize :  ' + event.fault.faultString)" 
             method="POST" useProxy="false" result="initPage(event)" showBusyCursor="true"/>	

    <cntrls:XenosHTTPService id="receiveNoticeQueryRequest" 
         url="stl/receiveNoticeQueryDispatch.action?" 
         fault="XenosAlert.error('Error Occured :  ' + event.fault.faultString)" method="POST"
         result="loadResultPage(event)" resultFormat="xml">
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="receiveNoticeResetQueryRequest" url="stl/receiveNoticeQueryDispatch.action?method=resetQuery"
        result="initPage(event)" showBusyCursor="true" useProxy="false">
    </cntrls:XenosHTTPService>
    
    
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;" />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
	
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
	<mx:VBox width="100%" height="100%">
	<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="initPageStart()"  >
	<!--<containers:CollapsibleHDividedBox id="hdbox1" width="100%" height="100%" x="0" y="0" liveDragging="true" creationComplete="initPageStart()" paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" >-->
		
		<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">		
		<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
			<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
			
			<mx:Grid width="100%" borderThickness="0">
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.cpbank')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:FinInstitutePopUpHbox id="cpBank" recContextItem="{populateFinInstRole()}"/>
                    </mx:GridItem>
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.cpaccount')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="cpAccount" restrict="{Globals.INPUT_PATTERN}"/>
                    </mx:GridItem>
                </mx:GridRow>	
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.ourbank')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:FinInstitutePopUpHbox id="ourBank" recContextItem="{populateFinInstRole()}"/>
                    </mx:GridItem>
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.ouraccount')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">                        
                        <xenospopup:AccountPopUpHbox id="ourBankAccount" retContextItem="{returnContextItem}" recContextItem="{populateInvActContext()}"/>                           
                    </mx:GridItem>
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.securitycode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:InstrumentPopUpHbox id="securityId"/>                          
                    </mx:GridItem>	                
            		<mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.settlementccy')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <cntrls:CurrencyHBox id="ccy"/>
                    </mx:GridItem>
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.correspondingsecuritycode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:InstrumentPopUpHbox id="correspondingSecurityId"/>                          
                    </mx:GridItem>	                
            		<mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.reasoncode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:ComboBox id="recvNoticeReasonCode" labelField="label" prompt="Select"/>
                    </mx:GridItem>
                </mx:GridRow>
            	<mx:GridRow width="100%">                        
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.settledatefromto')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox>
                   			<mx:DateField id="settlementDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                   			<mx:DateField id="settlementDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
        				</mx:HBox>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.rcvdCompNoticeRefNo')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="rcvdCompNoticeRefNo" restrict="{Globals.INPUT_PATTERN}"/>                           
                    </mx:GridItem>
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.finInstGroup')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:ComboBox id="finInstGroup" labelField="label" prompt="Select"/>
                    </mx:GridItem>                        
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.senderrefno')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="senderReferenceNo" restrict="{Globals.INPUT_PATTERN}"/>
                    </mx:GridItem> 
                </mx:GridRow>        
            </mx:Grid>
			
			<flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" width="100%" opened="false">			
                <mx:Grid width="100%" borderThickness="0">
                	<mx:GridRow width="100%">
                        <mx:GridItem width="100%" borderThickness="0" colSpan="4">
                        	<mx:HBox width="100%">
                        	<mx:Grid width="100%" borderThickness="0">
                        		<mx:GridRow width="100%">
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.match')}" name="MATCHED" id="chkbox1"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.forecmatch')}" name="FORCE_MATCHED" id="chkbox2"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.oustanding')}" name="OUTSTANDING" id="chkbox3"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.markasmatch')}" name="MARK_AS_MATCH" id="chkbox4"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.dk')}" name="DKED" id="chkbox5"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.dkcleared')}" name="DK_CLEARED" id="chkbox6"/>
			                        </mx:GridItem>
			                    </mx:GridRow>
			                    <mx:GridRow width="100%">
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.instrqry.label.cashfreepayment')}" name="CASH_FREE_DELIVER" id="chkbox7"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.instrqry.label.cashfreereceipt')}" name="CASH_FREE_RECEIVE" id="chkbox8"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.instrqry.label.dvp')}" name="DELIVER_AGAINST_PAYMENT" id="chkbox9"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.instrqry.label.rvp')}" name="RECEIVE_AGAINST_PAYMENT" id="chkbox10"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.instrqry.label.freedeliver')}" name="SECURITY_FREE_DELIVER" id="chkbox11"/>
			                        </mx:GridItem>
			                        <mx:GridItem width="16%" borderThickness="0">
			                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.instrqry.label.freereceipt')}" name="SECURITY_FREE_RECEIVE" id="chkbox12"/>
			                        </mx:GridItem>
			                    </mx:GridRow>
			                </mx:Grid>	                        		
                        	</mx:HBox>	                            
                        </mx:GridItem>	                         
                    </mx:GridRow>
                	<mx:GridRow width="100%">
                	    <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.datasource')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="dataSource" labelField="label" prompt="Select"/>
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.includematch')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:CheckBox id="matchFilterFlag" click="MatchFilter()"/>                            
                        </mx:GridItem>	                         
                    </mx:GridRow>				 		
                </mx:Grid>			 
			</flexlib:WindowShade>
			
			<mx:HBox width="100%" styleName="ButtonBackPanel">
	           <!--<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" styleName="BtnStyle" click="this.submitQuery();" />-->
	           <cntrls:XenosButton id="submit" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" styleName="BtnStyle" click="this.submitQuery();" />
	           <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle"  click="this.resetQuery();"/>
	        </mx:HBox>
	        
		</mx:VBox>
		
		</mx:Canvas>
				
		<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >			
		    <mx:VDividedBox id="vdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true">
		    <mx:VBox width="100%" height="50%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
    			<cntrls:QueryResultHeader  width="100%" id="qh" pdfFunction="generatePdf" xlsFunction="generateXls" printFunction="doPrint" previousFunction="doPrev" nextFunction="doNext" visible="true" 
    			                           creationComplete="{qh.resultHeader.text=this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.recvnoticesummaryheader')}"/>    			
    			<cntrls:XenosDataGrid id="receiveNoticeOutQueryResult" width="100%" height="90%" dataProvider="{queryResult1}" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" rowColorFunction="selectFailStatusColor">    				
    				<cntrls:columns>
    				   	<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" sortable="false"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.sndrrefnetgrp')}" dataField="senderReferenceNo" sortCompareFunction="sortUtil.sortString"/>           
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.ourbank')}" dataField="secOurBank" sortCompareFunction="sortUtil.sortString"/>
    	              	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.cpbank')}" dataField="secCpBank" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.cashourbank')}" dataField="cashOurBank" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.cashcpbank')}" dataField="cashCpBank" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.securitycode')}" dataField="instrumentCode" showDataTips="true" dataTipField="securityName" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityName" visible="false"  sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.ccy')}" dataField="ccyCode" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.outstandingamount')}" dataField="outstandingAmountStr"  sortCompareFunction="sortUtil.sortNumeric"/>
    	               	<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.outstandingquantity')}" dataField="outstandingQuantityStr"  sortCompareFunction="sortUtil.sortNumeric"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.stlstatus')}" dataField="settlementStatus" sortCompareFunction="sortUtil.sortString" />
    		           	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.valudedate')}" dataField="valueDateStr" visible="false" sortCompareFunction="sortUtil.sortString" />
    		       		<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.deliverreceive')}" dataField="deliverReceiveDisplay" sortCompareFunction="sortUtil.sortString" />
    		       		<mx:DataGridColumn textAlign="center" headerText="" dataField="" width="40" sortCompareFunction="sortUtil.sortNumeric">
                            <mx:itemRenderer>
                                <mx:Component>
                                    <mx:HBox horizontalAlign="center">
                                        <mx:Button styleName="BtnView" width="18" height="18" click="{parentDocument.showSettlementDetail(data.settlementInfoPk)}" label="View"/>                                
                                    </mx:HBox>                                    
                                </mx:Component>
                            </mx:itemRenderer>		       		    
    		       		</mx:DataGridColumn>		       		
    	            </cntrls:columns>
    	     	</cntrls:XenosDataGrid>	
	     	</mx:VBox>
	     	<mx:VBox width="100%" height="50%">
		        <cntrls:QueryResultHeader width="100%" id="qh2" pdfFunction="generatePdf2" xlsFunction="generateXls2" printFunction="doPrint2" previousFunction="doPrev2" nextFunction="doNext2" visible="true" 
		                                  creationComplete="{qh2.resultHeader.text=this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.oustandingquery')}"/>    			
    			<cntrls:XenosDataGrid id="receiveNoticeInQueryResult" width="100%" height="100%" dataProvider="{queryResult2}" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid2()" rowColorFunction="selectFailStatusColor">    				
    				<cntrls:columns>
    				   	<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" sortable="false"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.sndrrefnetgrp')}" dataField="senderReferenceNo" sortCompareFunction="sortUtil.sortString"/>           
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.ourbank')}" dataField="secOurBank" sortCompareFunction="sortUtil.sortString"/>
    	              	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.cpbank')}" dataField="secCpBank" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.cashourbank')}" dataField="cashOurBank" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.cashcpbank')}" dataField="cashCpBank" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.securitycode')}" visible="true" labelFunction="getSecurityCode" showDataTips="true" dataTipField="securityName" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityName" visible="false"  sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.ccy')}" dataField="ccyCode" visible="true" sortCompareFunction="sortUtil.sortString"/>
    	               	<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.amount')}" dataField="amountStr" sortCompareFunction="sortUtil.sortNumeric"/>
    	               	<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.quantity')}" dataField="quantityStr" sortCompareFunction="sortUtil.sortNumeric"/>
    	               	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.msgstatus')}" dataField="messageStatus" sortCompareFunction="sortUtil.sortString" />
    		           	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.valudedate')}" dataField="valueDateStr" visible="false" sortCompareFunction="sortUtil.sortString" />
    		       		<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.stldate')}" dataField="settleDateStr" sortCompareFunction="sortUtil.sortString" />		       		
    		       		<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.deliverreceive')}" dataField="deliverReceiveDisplay" visible="false"  sortCompareFunction="sortUtil.sortString" />		       		
    		       		<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.receivenoticeqry.label.reasoncode')}" dataField="reasonCode" visible="false"  sortCompareFunction="sortUtil.sortString" />
    		       		<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.stlqry.label.rcvdCompNoticeRefNo')}" dataField="rcvdCompNoticeRefNo" sortCompareFunction="sortUtil.sortString" />		       		
    		       		<mx:DataGridColumn textAlign="center" headerText="" dataField="receivedCompNoticeInfoPk" width="40" sortCompareFunction="sortUtil.sortNumeric">
    		       		    <mx:itemRenderer>
                                <mx:Component>
                                    <mx:HBox horizontalAlign="center">
                                        <mx:Button styleName="BtnView" width="18" height="18" click="{parentDocument.showReceiveNoticeDetail(data.receivedCompNoticeInfoPk)}" label="View"/>                                
                                    </mx:HBox>                                    
                                </mx:Component>
                            </mx:itemRenderer>	
    		       		</mx:DataGridColumn>		       		
    	            </cntrls:columns>
    	     	</cntrls:XenosDataGrid>	
		    </mx:VBox>
		    </mx:VDividedBox>		
		</mx:VBox>	
	</mx:HDividedBox>
    </mx:VBox>
    
    </mx:Canvas>
</mx:Module>
