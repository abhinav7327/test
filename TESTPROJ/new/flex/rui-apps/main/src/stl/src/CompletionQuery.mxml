<?xml version="1.0" encoding="utf-8"?>

<!--Mxml file for Stl Completion Entry & Cancel Implementation -->
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:valdtrs="com.nri.rui.core.validators.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
    
	<mx:Script>
		<![CDATA[
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
            import com.nri.rui.core.renderers.StatusRenderer;
		]]>
	</mx:Script>
    
	<mx:Script source="actionscripts/CompletionQuery.as"/>

    <containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{mode == 'DELETE' ? cancelSubmit : entrySubmit}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>	

    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel" id="qryNResultPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres';app.submitButtonInstance = submit;"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
	    <mx:VBox width="100%" height="100%">
	    	<mx:HDividedBox id="hdbox1" styleName="Padding4" width="100%" height="100%" liveDragging="true" creationComplete="{this.loadAll()}">
			<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
	       	<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
	            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
	            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
	            <mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />
	        	<mx:Grid width="100%" borderThickness="0">
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundcode')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:FundPopUpHbox id="fundPopUp"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="fundActPopUp" retContextItem="{returnFundContextItem}" recContextItem="{populateFundContext()}"/>
                        </mx:GridItem> 
                    </mx:GridRow>
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementreferenceno')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:TextInput id="stlRefNo" text="" restrict="{Globals.INPUT_PATTERN}"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.swiftreferenceno')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:TextInput id="swiftRefNo" text="" restrict="{Globals.INPUT_PATTERN}"/>
                        </mx:GridItem> 
                    </mx:GridRow>
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedatefromto')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox width="100%">
                                   <mx:DateField id="trddateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                                   <mx:DateField id="trddateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                            </mx:HBox>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.valuedatefromto')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox width="100%">
                                   <mx:DateField id="valdateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                                   <mx:DateField id="valdateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                            </mx:HBox>
                        </mx:GridItem> 
                    </mx:GridRow>
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.firmsettlementbank')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:FinInstitutePopUpHbox id="bankPopUp" recContextItem="{populateFinInstRole()}"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settleac')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="ourActPopUp" retContextItem="{returnOurContextItem}" recContextItem="{populateOurContext()}" />
                        </mx:GridItem> 
                    </mx:GridRow>
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:InstrumentPopUpHbox id="instPopUp"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementccy')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <cntrls:CurrencyHBox id="ccyBox"/>
                        </mx:GridItem> 
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.underlyingsecuritycode')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:InstrumentPopUpHbox id="correspInstPopUp"/>
                        </mx:GridItem> 
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="" />
                    </mx:GridItem>
                    <mx:GridItem width="80%" borderThickness="0" colSpan="3">
                                <mx:HBox width="100%">
                                <mx:Grid width="100%" borderThickness="0">
                                    <mx:GridRow width="100%">
                                        <mx:GridItem borderThickness="0">
                                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cashfreepayment')}" name="CASH_FREE_DELIVER" id="cashDel"/>
                                        </mx:GridItem>
                                        <mx:GridItem borderThickness="0">
                                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cashfreereceipt')}" name="CASH_FREE_RECEIVE" id="cashRec"/>
                                        </mx:GridItem>
                                        <mx:GridItem borderThickness="0">
                                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.dvp')}" name="DELIVER_AGAINST_PAYMENT" id="dvp"/>
                                        </mx:GridItem>
                                        <mx:GridItem borderThickness="0">
                                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.rvp')}" name="RECEIVE_AGAINST_PAYMENT" id="rvp"/>
                                        </mx:GridItem>
                                        <mx:GridItem borderThickness="0">
                                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.freedeliver')}" name="SECURITY_FREE_DELIVER" id="secDel"/>
                                        </mx:GridItem>
                                        <mx:GridItem borderThickness="0">
                                            <mx:CheckBox label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.freereceipt')}" name="SECURITY_FREE_RECEIVE" id="secRec"/>
                                        </mx:GridItem>
                                    </mx:GridRow>
                                    </mx:Grid>
                                </mx:HBox>
                     </mx:GridItem>
                    </mx:GridRow>
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementqueryfor')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="settlementQueryForList" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inputdatefromto')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox width="100%">
                                   <mx:DateField id="inputdateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                                   <mx:DateField id="inputdateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                            </mx:HBox>
                        </mx:GridItem> 
                    </mx:GridRow>
	        		<mx:GridRow width="100%" visible="{this.mode == 'ADD'}" includeInLayout="{this.mode == 'ADD'}">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementstatus')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="settleStatusList" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.contractualsettlementstatus')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="contractualSettlementStatus" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                    </mx:GridRow>
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.instructionreferenceno')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:TextInput id="instructionRefNo" text="" restrict="{Globals.INPUT_PATTERN}"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.subtradetype')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="subTradeTypeList" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                    </mx:GridRow>
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.eventtype')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="subEventTypeList" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.completionfor')}" visible="{this.mode == 'ADD'}" includeInLayout="{this.mode == 'ADD'}"/>
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cancellationfor')}" visible="{this.mode == 'DELETE'}" includeInLayout="{this.mode == 'DELETE'}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="completionForList" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                    </mx:GridRow>
	        		<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementmode')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="settlementModeList" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyaccount')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="cpActPopUp" retContextItem="{returnCpContextItem}" recContextItem="{populateCpContext()}" />
                        </mx:GridItem> 
                    </mx:GridRow>
	        
                </mx:Grid>

				<!-- Sort Order -->
				<flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
		        	<mx:Grid width="100%" borderThickness="0">
		            	<mx:GridRow width="100%">
		                	<mx:GridItem width="100%" borderThickness="0">
		                    	<mx:HBox width="100%">
		                        	<mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()" width="200" itemRenderer="mx.controls.Label" prompt="Select"></mx:ComboBox>
									<mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()" width="200" itemRenderer="mx.controls.Label" prompt="Select"> </mx:ComboBox>
									<mx:ComboBox id="sortField3" labelField="label" width="200" itemRenderer="mx.controls.Label" prompt="Select"></mx:ComboBox>
		                    	</mx:HBox> 
		                	</mx:GridItem>                         
		            	</mx:GridRow>
		        	</mx:Grid>
		    	</flexlib:WindowShade>

				<mx:HBox width="100%" styleName="ButtonBackPanel">
	   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'ADD' ?  this.dispatchEvent(new Event('querySubmit')) : this.dispatchEvent(new Event('cancelSubmit'))}" />
	               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'ADD' ?  this.dispatchEvent(new Event('queryReset')) : this.dispatchEvent(new Event('cancelReset'))}" />
		        </mx:HBox>
			</mx:VBox>			
			</mx:Canvas>

            <mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle">
                <cntrls:XenosErrors id="errPageQueryRes" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
                <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'ADD' ? 1 : 2}" creationComplete="pdfXlsHide()"/>
            
                <cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" includeInLayout="{this.mode == 'ADD'}" visible="{this.mode == 'ADD'}"> 
                    <cntrls:columns>                   
                        <mx:DataGridColumn textAlign="center" headerText="" width="40" draggable="false" resizable="false" id="imgRendererCancel" itemRenderer="{new RendererFectory(ImgSummaryRenderer)}" />
                        <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.completiontype')}" dataField="completionTp" itemRenderer="com.nri.rui.stl.renderers.CompletionTypeDropDownRenderer" editable="true" rendererIsEditor="true" visible="true" minWidth="120" resizable="false"/>
                        <!--mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementdate')}" dataField="stlDateStr" itemRenderer="com.nri.rui.stl.renderers.SettlementDateRenderer" editable="true" rendererIsEditor="true" visible="true" minWidth="120" paddingLeft="10" resizable="false"/-->
                        <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementdate')}" dataField="settlementDateStr" editorDataField="selectedDate" editable="true" rendererIsEditor="true" visible="true" width="110" resizable="false">
                        <mx:itemRenderer>
                        <mx:Component>
							<mx:DateField textAlign="center" editable="true" formatString="YYYYMMDD" width="90" change="onDateChange()" valueCommit="onDateChange()" dataChange="onDateChange()">
							    <mx:Script>
							        <![CDATA[
							            import mx.events.FlexEvent;
							            private var _data:Object;
							            override public function set data(value:Object):void {
							                _data = value;
							                
							                try {
							                    text = value.settlementDateStr.toString();
							                    selectedDate = stringToDate(text, "YYYYMMDD");
							                    this.dispatchEvent(new FlexEvent(FlexEvent.DATA_CHANGE));
							                } catch(e:Error) {
							                    trace(e.message);
							                }
							            }
							                                                
							            override public function get data():Object {
							            	if(_data!=null) {
							            	    //_data.stlDateStr = text;
							            	}
							                return _data;
							            }
							            
							            private function onDateChange():void{
							                 if(_data!=null) {
                                                _data.settlementDateStr = text;
                                            }
							            }
							        ]]>
							    </mx:Script>
							</mx:DateField>
						</mx:Component>
						</mx:itemRenderer>                    
                        </mx:DataGridColumn>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementreferenceno')}" dataField="settlementReferenceNo" itemRenderer="com.nri.rui.stl.renderers.CompletionDetailsRenderer" visible="true" width="75"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.valuedate')}" dataField="valueDateStr" visible="true" width="75"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" dataField="fundAccountPk" labelFunction="getFundAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" visible="true" width="80"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" dataField="instrumentPk" labelFunction="getInstrumentCode" itemRenderer="com.nri.rui.core.renderers.AdvInstrumentDetailsRenderer" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="displayAlternativeSecId" visible="true" width="70"/>    
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityName" visible="true" width="70"/>  
                        <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.outstandingquantity')}" dataField="outstandingQuantityStr" visible="true"/>  
                        <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.outstandingamount')}" dataField="outstandingAmountStr" visible="true"/>  
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ccy')}" dataField="ccyCode" visible="true" width="40"/>    
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.underlyingsecuritycode')}" dataField="correspondingInstrumentPk" labelFunction="getUnderlyingSecurityCode" itemRenderer="com.nri.rui.core.renderers.AdvInstrumentDetailsRenderer" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.underlyingsecurityname')}" dataField="underlyingSecurityName" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountname')}" dataField="accName" visible="false"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.counterpartyaccount')}" dataField="clientAccountPk" labelFunction="getClientAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.cpssiinfo')}" dataField="cpSsiDisp" visible="true" width="200"/>    
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.instructionreferenceno')}" dataField="instructionRefno" visible="true"/>    
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundsettleac')}" dataField="firmAccountPk" labelFunction="getDisplayAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundsettleaccname')}" dataField="accountShortName" visible="false"/>  
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundbank')}" dataField="bankPk" labelFunction="getFinInstRoleCode" itemRenderer="com.nri.rui.core.renderers.FinancialInstitutionDetailsRenderer" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundbankname')}" dataField="finInstRoleName" visible="false"/>
                    </cntrls:columns>
                </cntrls:CustomDataGrid>
                <cntrls:CustomDataGrid id="resultSummaryCancel" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" includeInLayout="{this.mode == 'DELETE'}" visible="{this.mode == 'DELETE'}"> 
                    <cntrls:columns>                   
                        <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="{new RendererFectory(ImgSummaryRenderer)}" />
                        <mx:DataGridColumn headerText="" dataField="selected" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.SelectItem" headerRenderer="com.nri.rui.core.renderers.SelectAllItem" sortable="false" visible="true" editable="false"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementreferenceno')}" dataField="settlementReferenceNo" itemRenderer="com.nri.rui.stl.renderers.CompletionDetailsRenderer" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.valuedate')}" dataField="valueDateStr" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settleac')}" dataField="ourSettleAcPk" labelFunction="getDisplayAccountNo" visible="true" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settleaccname')}" dataField="accountName" visible="false"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" dataField="instrumentPk" labelFunction="getInstrumentCode" itemRenderer="com.nri.rui.core.renderers.AdvInstrumentDetailsRenderer" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityName" visible="true"/>  
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="displayAlternativeSecId" visible="true"/>    
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ccy')}" dataField="ccyCode" visible="true" width="40"/>    
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ourbank')}" dataField="bankPk"  labelFunction="getOurBank" itemRenderer="com.nri.rui.core.renderers.FinancialInstitutionDetailsRenderer" visible="true" />
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ourbankname')}" dataField="ourBankName" visible="false"/>    
                        <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.quantity')}" dataField="quantityStr" visible="true"/>  
                        <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.amount')}" dataField="amountStr" visible="true"/>  
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.instructionreferenceno')}" dataField="instructionRefno" visible="true"/>    
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.reasoncode')}" dataField="reasonCode" visible="true"/>  
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.remarks1')}" dataField="remarks1" visible="true"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.remarks2')}" dataField="remarks2" visible="true"/>                         
                    </cntrls:columns>
                </cntrls:CustomDataGrid>
                <mx:HBox width="100%" styleName="ButtonBackPanel" includeInLayout="{mode == 'ADD'}" visible="{mode == 'ADD'}">
                   <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.settlementdate')}"/>
                   <mx:DateField id="stlDate"  formatString="YYYYMMDD" editable="true" width="90" selectedDate="{DateField.stringToDate(commonStlDateStr, 'YYYYMMDD')}"/>
                   <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.copy')}" styleName="BtnStyle" click="copyStlDate()"/>
                </mx:HBox>
                <mx:HBox width="100%" styleName="ButtonBackPanel">
                   <cntrls:XenosButton id="cancelSubmit" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" styleName="BtnStyle" click="showConfirmModule()" includeInLayout="{mode == 'DELETE'}" visible="{mode == 'DELETE'}"/>
                   <cntrls:XenosButton id="entrySubmit" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" styleName="BtnStyle" click="validateSubmitEntry()" includeInLayout="{mode == 'ADD' || mode == 'CAX_RECEIVE_NOTICE'}" visible="{mode == 'ADD' || mode == 'CAX_RECEIVE_NOTICE'}"/>
                </mx:HBox>
            </mx:VBox>            
		</mx:HDividedBox>    
    	</mx:VBox>
    </mx:Canvas>         
</containers:XenosQueryModule>