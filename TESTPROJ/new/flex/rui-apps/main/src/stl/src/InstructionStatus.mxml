<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:containers="com.nri.rui.core.containers.*" 
	xmlns:frmtrs="com.nri.rui.core.formatters.*" 
	xmlns:flexlib="http://code.google.com/p/flexlib/" 
	xmlns:cntrls="com.nri.rui.core.controls.*" 
	xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" 
	xmlns:valdtrs="com.nri.rui.core.validators.*" 
	layout="vertical" 
	percentWidth="100" 
	percentHeight ="100" 
	horizontalScrollPolicy="auto" 
	verticalScrollPolicy="auto">
	
	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import com.nri.rui.core.utils.XenosStringUtils;
			import mx.utils.StringUtil;
			import com.nri.rui.core.controls.XenosAlert;
			import com.nri.rui.core.renderers.StatusRenderer;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;			
			    
		    /**
			 * This method should be called on creationComplete of the datagrid 
			 */ 
			private function bindDataGrid():void {
				qh.dgrid = resultSummary;
			}
		]]>
	</mx:Script>
	<mx:Script source="actionscripts/InstructionStatus.as"/>
	
     <containers:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions> 
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    </mx:VBox>
	
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:VBox width="100%" height="100%">
		<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
			
			<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
			<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
				<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
				<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>			
                    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
                    <mx:Grid width="100%" borderThickness="0">
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundcode')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <xenospopup:FundPopUpHbox id="fundCode"/>
                                </mx:GridItem> 
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                   <xenospopup:AccountPopUpHbox id="fundAccountNo" recContextItem="{populateFundContext()}"/>
                                </mx:GridItem>
                            </mx:GridRow>   
                            
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.office')}" />
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:ComboBox id="office" labelField="label" prompt="Select"/>
                                </mx:GridItem>
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedatefromto')}" />
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">                                       
                                    <mx:HBox>
		                       			<mx:DateField id="tradedateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
		                       			<mx:DateField id="tradedateTo" formatString="YYYYMMDD" editable="true" width="90"/>
	            					</mx:HBox>
                                </mx:GridItem>                         
                            </mx:GridRow>
                           
                           <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.datasource')}" />
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:ComboBox id="dataSource" labelField="label" prompt="Select"/>
                                </mx:GridItem>
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.transmissiondate')}" />
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:DateField id="transmissionDate" formatString="YYYYMMDD" editable="true" width="90"/>
                                </mx:GridItem>
                           </mx:GridRow> 
                           
                           <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.swiftrefno')}" />
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:TextInput id="swiftRefNo" restrict="{Globals.INPUT_PATTERN}"/>
                                </mx:GridItem>
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.receiverbic')}" />
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:TextInput id="rcvBic" restrict="{Globals.INPUT_PATTERN}"/>
                                </mx:GridItem>
                           </mx:GridRow> 
                           
                           <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.mttype')}" />
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:ComboBox id="mtType" labelField="label" prompt="Select"/>
                                </mx:GridItem>
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.msgfuction')}" />
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:ComboBox id="msgFunc" labelField="label" prompt="Select"/>
                                </mx:GridItem>
                           </mx:GridRow>
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.inx.fundcategory')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                           <mx:ComboBox id="fundCategory" labelField="label" prompt="Select" />
		                        </mx:GridItem>
                                <mx:GridItem width="20%" borderThickness="0" >
                        			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitytype')}"  />
                        		</mx:GridItem>	
							 	<mx:GridItem width="30%"      borderThickness="0">	
							 		<cntrls:TreeCombo id="instrumentType" dataSource="{new XML((app.cachedItems.instrumentTree).toString())}" editMode="true" width="153"  displayClearIcon="true"  labelField="label" treeHeight="200"  x="10" y="10">
									</cntrls:TreeCombo> 
							 	</mx:GridItem>
                           </mx:GridRow>                       
                    </mx:Grid>
		            
		            <!-- Sort Order -->
					<flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
		                <mx:Grid width="100%" borderThickness="0">
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="100%" borderThickness="0">
		                            <mx:HBox width="100%">
		                                <mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"/>
			                            <mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"/>
		                            </mx:HBox> 
		                        </mx:GridItem>                         
		                    </mx:GridRow>
		                </mx:Grid>
		            </flexlib:WindowShade>
	
				<mx:HBox width="100%" styleName="ButtonBackPanel">
	   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.dispatchEvent(new Event('querySubmit'))}" />
	               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.dispatchEvent(new Event('queryReset'))}" />
		        </mx:HBox>
			</mx:VBox>
			</mx:Canvas>
					
			<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >			
                <cntrls:QueryResultHeader id="qh" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" printFunction="dispatchPrintEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'query' ? 1 : 2}" showRecordCount="true"/>
                <mx:HBox width="100%" styleName="ButtonBackPanel" verticalCenter="0" verticalAlign="middle" horizontalAlign="left" paddingLeft="0" paddingRight="0">
                    <mx:HBox height="100%" width="100%" verticalCenter="0" verticalAlign="middle" horizontalAlign="left">
                        <mx:Label width="100%" id="swiftNormal" text="" fontWeight="bold" verticalCenter="0" textAlign="left" height="40"/>
                    </mx:HBox>  
                </mx:HBox>
                <cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" creationComplete="bindDataGrid()" headerRelease="dataGrid_headerRelease(event)" rowColorFunction="selectColor"> 
                    <cntrls:columns>
                        <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{new RendererFectory(ImgSummaryRenderer)}" />
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.origindatasource')}" dataField="originDataSource" resizable="true" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.transmitdaytime')}"  dataField="" labelFunction="modifyTransmitTime" resizable="true" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.instructionreferenceno')}" dataField="instructionRefNo" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fund')}" dataField="fundPk" labelFunction="getFundCode" visible="true" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundname')}" dataField="fundName" visible="false" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountno')}" dataField="fundAccountPk" labelFunction="getFundAccountNo" visible="false" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.fundaccountname')}" dataField="fundAccountName" visible="false" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.receiverbic')}" dataField="custodianBic" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.tradedate')}" dataField="tradeDate" visible="true" textAlign="center" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.valuedate')}" dataField="settlementDate" textAlign="center" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.type')}" dataField="swiftMsgType" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securityname')}" dataField="securityName" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.securitycode')}" dataField="instrumentPk" labelFunction="getSecurityCode" visible="true" itemRenderer="com.nri.rui.core.renderers.AdvInstrumentDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.quantity')}" dataField="quantityStr" textAlign="right" visible="true" sortCompareFunction="sortUtil.sortNumeric"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.ccy')}" dataField="tradeCcy" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.amount')}" dataField="netAmountStr" textAlign="right" visible="true" sortCompareFunction="sortUtil.sortNumeric"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.brokeraccountname')}" dataField="brokerAccountPk" labelFunction="getBrokerAccountName" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.func')}" dataField="msgFunction" visible="true" sortCompareFunction="sortUtil.sortString"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('stl.label.xenosrefno')}" dataField="" labelFunction="getXenosReferenceNo" visible="true" itemRenderer="com.nri.rui.stl.renderers.SettlementDetailRenderer" sortCompareFunction="sortUtil.sortString"/>
                    </cntrls:columns>
                </cntrls:CustomDataGrid>
                <mx:HBox width="100%" id="buttonPanel" styleName="ButtonBackPanel">
                    <mx:HBox width="50%" horizontalAlign="left" borderStyle="none">
                         <cntrls:XenosButton id="btnRefresh" label="{this.parentApplication.xResourceManager.getKeyValue('stl.label.Refresh')}" styleName="BtnStyle" click="refreshQuery()"/>
                    </mx:HBox>
                </mx:HBox>    
			</mx:VBox>
		</mx:HDividedBox>
	    </mx:VBox>    
    </mx:Canvas>  		 
</containers:XenosQueryModule>
