<?xml version="1.0" encoding="utf-8"?>

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
	 xmlns:flexlib="http://code.google.com/p/flexlib/"
	 layout="vertical" 
	 xmlns:cntrls="com.nri.rui.core.controls.*" 
	 xmlns:controls="*" width="100%" height="100%" 
	 creationComplete="loadContractDetailViewForAction()">
   
	<mx:Script>
		<![CDATA[
			import com.nri.rui.core.Globals;
			import mx.events.CloseEvent;
			import com.nri.rui.core.utils.XenosStringUtils;
			import mx.utils.StringUtil;
			import com.nri.rui.core.utils.ProcessResultUtil;
			import mx.collections.XMLListCollection;
			import com.nri.rui.core.containers.SummaryPopup;
			
			import mx.rpc.events.ResultEvent;
			import mx.core.UIComponent;
			import mx.managers.PopUpManager;
    		import mx.collections.ArrayCollection;
    		import com.nri.rui.core.controls.XenosAlert;
    		import com.nri.rui.core.utils.XenosPopupUtils;
    		[Bindable]private var contractPk:String = XenosStringUtils.EMPTY_STR;
    		[Bindable]private var mode:String = XenosStringUtils.EMPTY_STR;
    		[Bindable]private var allRec:String;
    		[Bindable]private var queryResult:XML= new XML();
    		[Bindable]public var actionTypes:ArrayCollection = new ArrayCollection();
    		[Bindable]public var actions:XMLListCollection = new XMLListCollection();
    		private var sortUtil: ProcessResultUtil= new ProcessResultUtil();
    		private var sPopup : SummaryPopup;
			
			private function loadContractDetailViewForAction():void{
				parseUrlString();
				var reqObj:Object =  new Object();
				reqObj.method = "contractDetailsActionQueryExecute";
				reqObj.contractPk = contractPk;
				reqObj.SCREEN_KEY = 11114;
				ContractQueryDetailForActionRequest.request = reqObj;
				ContractQueryDetailForActionRequest.send();
			}
			
			private function LoadDetailContractForActionPage(event:ResultEvent):void{
				if (null != event) {            
		            if(null == event.result){
		            	if(null == event.result.XenosErrors){ // i.e. No result but no Error found.
		            		XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
		            	} else { // Must be error
		            	}            	
		            }else {
			             	queryResult = event.result as XML;
			             	actionTypes = new ArrayCollection();
			             	 for each(var xmlObj:Object in queryResult.actionTypeValues.actionTypeValue){
			    				actionTypes.addItem(xmlObj);
			    			}
			             	this.actionType.dataProvider = actionTypes;
			             	this.actions = new XMLListCollection(queryResult.securities.security);
		            } 
		        }else {
		            XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
		        }
			}
			
			
		     public function parseUrlString():void {
		        try {
		            // Remove everything before the question mark, including
		            // the question mark.
		            var myPattern:RegExp = /.*\?/; 
		            var s:String = this.loaderInfo.url.toString();
		            s = s.replace(myPattern, "");
		            // Create an Array of name=value Strings.
		            var params:Array = s.split("&"); 
		             // Print the params that are in the Array.
		            var keyStr:String;
		            var valueStr:String;
		            var paramObj:Object = params;
		          
		            // Set the values of the salutation.
		            for (var i:int = 0; i < params.length; i++) {
		                var tempA:Array = params[i].split("=");  
		                if (tempA[0] == "contractPk") {
		                    contractPk = tempA[1]; 
		                }
		                if (tempA[0] == "mode") {
		                    mode = tempA[1]; 
		                }
		            } 
		            
		        } catch (e:Error) {
		            trace(e);
		        }
    		}
			
			/**
	   * This method is used for loading FinInstPopUp module 
	   * 
	   */  
	   public function showFinInstPopUp(finInstPkStr:String):void{
			
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				
				XenosPopupUtils.showFinInstDetails(finInstPkStr,parentApp);
				
	   }
	   /**
	   * This method is used for loading Account Details popup module
	   * 
	   */  
	   public function showAccountDetail(accPk:String):void{
	   	var parentApp :UIComponent = UIComponent(this.parentApplication);
				XenosPopupUtils.showAccountSummary(accPk,parentApp);
				
	   }
	   
	   private function displayVersionNo(item:Object,column : DataGridColumn):String{
            	return item.refNo+"-"+item.verNo;
            	
            }
            
	   private function populateAltSecCode(item:Object,column : DataGridColumn):String{
	     	if(item.alternateSecurityId!=null&&StringUtil.trim(item.alternateSecurityId)!=""){
	     		return item.alternateSecurityId+"/"+item.alternateInstrumentCodeType;
	     	}
	     	else{
	     		return null;
	     	}
	    }

	    
	    private function submitAction():void{
	    	sPopup = SummaryPopup(PopUpManager.createPopUp(UIComponent(this.parentApplication),SummaryPopup,true));
	    	if(this.actionType.selectedItem == "Reprice"){
	    		sPopup.title = this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.repriceaction');
			    sPopup.addEventListener("OkSystemConfirm",handleOkSystemConfirm,false,0,true);
	            sPopup.width = 1000;
	    	    sPopup.height = 550;    		
	    	    PopUpManager.centerPopUp(sPopup);
	    	    sPopup.moduleUrl = "assets/appl/slr/SlrRepriceActionEntryPopup.swf" + Globals.QS_SIGN + "mode" + Globals.EQUALS_SIGN + this.mode+ Globals.AND_SIGN + "contractPk"+ Globals.EQUALS_SIGN + contractPk;
	    	}
	    	
	    	else if(this.actionType.selectedItem == "Rerate"){
                  sPopup.title = this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.rerateaction');
                  sPopup.addEventListener("OkSystemConfirm",handleOkSystemConfirm,false,0,true);
                  sPopup.width = 1000;
                sPopup.height = 550;            
                PopUpManager.centerPopUp(sPopup);
                sPopup.moduleUrl = "assets/appl/slr/SlrRerateEntry.swf?&action_type_mode=RERATE";

            }else if(this.actionType.selectedItem == "Closeout"){
                  sPopup.title = this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.closeouteaction');
                  sPopup.addEventListener(CloseEvent.CLOSE,handleOkSystemConfirm,false,0,true);
                  sPopup.width = 900;
                sPopup.height = 550;            
                PopUpManager.centerPopUp(sPopup);
                sPopup.moduleUrl = "assets/appl/slr/SlrCloseoutEntry.swf?&action_type_mode=CLOSEOUT";

            }
            //for substitution
            else if(this.actionType.selectedItem == "Substitution"){
                  sPopup.title = this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.substitutionactionentry');
                  sPopup.addEventListener("OkSystemConfirm",handleOkSystemConfirm,false,0,true);
                  sPopup.width = 1000;
                sPopup.height = 550;            
                PopUpManager.centerPopUp(sPopup);
                sPopup.moduleUrl = "assets/appl/slr/SlrSubstituteEntry.swf?&action_type_mode=SUBSTITUTION";

            }
            
	    }
	    
	    public function handleOkSystemConfirm(event:Event):void {
            loadContractDetailViewForAction();
        }
	
		]]>
	</mx:Script>
	
     <cntrls:XenosHTTPService id="ContractQueryDetailForActionRequest"
     	 showBusyCursor="true"
     	 url="slr/ContractDetailsDispatch.action?" 
         result="LoadDetailContractForActionPage(event)"  
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('slr.label.erroroccured') + event.fault.faultString)"
         useProxy="false" resultFormat="e4x">
    </cntrls:XenosHTTPService> 
     <mx:Canvas width="100%" height="100%">
    <mx:VBox width="100%" height="100%" styleName="Padding">
         <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
    	<!--   Start of contract Info section -->
    	<mx:VBox>
    		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.contractinformation')}" width="100%" fontWeight="bold"/>
    	</mx:VBox>
    	<mx:Grid id="grd" label="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.contractinformation')}" verticalGap="0" horizontalGap="0" width="100%">
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.contractno')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label  id="orgContractNo" text="{queryResult.contractNumber}-{queryResult.versionNo}"  selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.openended')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.openEnded}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.tradetype')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.tradeType}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.subtradetype')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.subTradeType}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
				<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.accountno')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
				<mx:Label text="{queryResult.accountNo}" click="showAccountDetail(queryResult.accountPk)" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.rr')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.rrName}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.executingrr')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.executingRrName}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.traderid')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.traderName}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
				<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.inventoryaccount')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
				<mx:Label text="{queryResult.inventoryAccount}" click="showAccountDetail(queryResult.inventoryAccountPk)" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.haircut')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.hairCut}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.brokercode')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.brokerCode}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.externalrefno')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.extRefNo}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			<!--<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.accountbalancetype')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.accountBalanceTypeValue}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
				</mx:GridItem>
				<mx:GridItem width="30%">
				</mx:GridItem>
			</mx:GridRow>-->
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.tradecurrency')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.tradeCurrency}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.settlementcurrency')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.settlementCurrency}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.tradedate')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.tradeDate}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.startdate')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.startDate}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
    	    <mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.tradetime')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.tradeTime}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.enddate')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.endDate}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>    
    	    <mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.expirationdate')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.expirationDate}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.accrualdays')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.accrualDays}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
    	    <mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.dividendrate')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.dividendRate}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.instrument.label.interestamount')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.interestAmount}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.interestrate')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.interestRate}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.principalamount')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.netPrincipal}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.brokerreferenceno')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.brokerReferenceNo}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
                  <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.paidinterest')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
				<mx:Label text="{queryResult.paidInterest}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.sublimit')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.subLimit}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.commission')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.commission}" selectable="true"/>
				</mx:GridItem>
			</mx:GridRow>
			
			<mx:GridRow width="100%">
				<mx:GridItem width="20%" styleName="LabelBgColor">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.remarks')}" styleName="FormLabelHeading" />
				</mx:GridItem>
				<mx:GridItem width="30%">
					<mx:Label text="{queryResult.remarks}" selectable="true"/>
				</mx:GridItem>
				<mx:GridItem width="20%" styleName="LabelBgColor">
				</mx:GridItem>
				<mx:GridItem width="30%">
				</mx:GridItem>
			</mx:GridRow>
    	</mx:Grid>
    	<mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.actionhistory')}" verticalGap="0" horizontalGap="0" width="100%">
    		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.actionhistory')}" width="100%" fontWeight="bold"/>
    	<mx:HBox width="100%">
    		<mx:Box width="100%" paddingRight="1">
	    		<mx:DataGrid dataProvider="{actions}" width="100%" height="100%" horizontalScrollPolicy="auto">
					<mx:columns>
						<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.refno')}" labelFunction="displayVersionNo" visible="true" sortCompareFunction="sortUtil.sortString"/>
						<mx:DataGridColumn  textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.legtype')}" dataField="legType" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.actiontype')}" dataField="actionType" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.valuedate')}" dataField="valueDate" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.seccode')}"  dataField="securityCode" itemRenderer="com.nri.rui.slr.renderers.instrDetailRenderer" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.alternatesecuritycode')}" labelFunction="populateAltSecCode" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.rate')}" dataField="rate" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.price')}" dataField="price" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.quantity')}"  dataField="quantity" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.principal')}" dataField="principalAmount" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.accrualdays')}" dataField="accrualDays" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.interest')}" dataField="interest" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.netamount')}"  dataField="netAmount" sortCompareFunction="sortUtil.sortString" />
						<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('slr.action.label.status')}" dataField="status"  itemRenderer="com.nri.rui.core.renderers.StatusRenderer" sortCompareFunction="sortUtil.sortString" />
					</mx:columns>
				</mx:DataGrid>
        	</mx:Box>
		</mx:HBox>
		<mx:HBox width="100%" styleName="ButtonBackPanel">
			   <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('slr.contract.label.actiontype')}" fontWeight="bold"/>
			   <mx:ComboBox id="actionType"/> 
   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="Submit" styleName="BtnStyle" click="submitAction()" includeInLayout="true" visible="true"/> 
	    </mx:HBox>
    	</mx:VBox>
    </mx:VBox>
     </mx:Canvas>
</mx:Module>
