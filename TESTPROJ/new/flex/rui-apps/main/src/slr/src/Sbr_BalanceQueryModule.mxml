<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" xmlns:valdtrs="com.nri.rui.core.validators.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
    <mx:Script>
        <![CDATA[
            import com.nri.rui.ref.renderers.DocumentAttributesRenderer;
            import mx.events.ValidationResultEvent;
            import com.nri.rui.core.utils.XenosStringUtils;
            import mx.utils.StringUtil;
            import com.nri.rui.core.controls.XenosAlert;
            import com.nri.rui.core.renderers.StatusRenderer;
            import com.nri.rui.core.RendererFectory;
            import com.nri.rui.core.renderers.ImgSummaryRenderer;
            import com.nri.rui.ref.renderers.CPStandingViewAmmendCancelRenderer;
            import mx.resources.ResourceBundle
            
         	/**
	     	 * This method should be called on creationComplete of the datagrid 
	     	 */ 
	     	private function bindDataGrid():void {
	        	qh.invalidateDisplayList();
	        	qh.dgrid = resultSummary;
	        }
        
        	/**
             * Retrieve and return the Fund Account Number.
             */
            private function getFundAccNo(item:Object, column : DataGridColumn):String {
                return item.fundAccountDisplayStr;
            }
            
            /**
             * Retrieve and return the Broker Account Number.
             */
            private function getBrokerAccNo(item:Object, column : DataGridColumn):String {
              return item.brokerAccountDisplayStr;
            }
            
        ]]>
    </mx:Script>
    <mx:Script source="actionscripts/Sbr_BalanceQueryModule.as"/>
    
    <mx:Metadata>
        [ResourceBundle("slrResources")]
        [ResourceBundle("coreResources")]
    </mx:Metadata>
    
     <containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions> 
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
        <mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';"  /> 
        <mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
        <mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres';"/>    
    </mx:HBox>
    </mx:VBox>
    
     <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
        <mx:VBox width="100%" height="100%">
        <mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
        
        <mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
         <mx:VBox width="100%" height="100%" styleName="HDivideStyle" >
            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
        
            <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
            
	        <mx:Grid width="100%" borderThickness="1">
	               <mx:GridRow width="100%">
	                    <mx:GridItem width="20%" borderThickness="0">
	                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.date')}" styleName="ReqdLabel" />
	                    </mx:GridItem>
	                    <mx:GridItem width="38%" borderThickness="0">
	                        <mx:DateField id="baseDate"  formatString="YYYYMMDD" editable="true" width="90"/>
	                   </mx:GridItem>
	                    
	                    <mx:GridItem width="15%" borderThickness="0">
	                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.balancebasis')}" />
	                    </mx:GridItem>
	                    <mx:GridItem width="27%" borderThickness="0">
	                        <mx:ComboBox id="balbasis" labelField="label" dataProvider="{balanceBasisList} " />  
	                     </mx:GridItem>
	               </mx:GridRow>
	               <mx:GridRow width="100%">
	                    <mx:GridItem width="20%" borderThickness="0">
	                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.fundcode')}" />
	                    </mx:GridItem>
	                    <mx:GridItem width="30%" borderThickness="0">
	                        <xenospopup:FundPopUpHbox id="fundPopUp" />
	                    </mx:GridItem>
	                    
	                    <mx:GridItem width="20%" borderThickness="0">
	                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.fundaccountno')}" />
	                    </mx:GridItem>
	                    <mx:GridItem width="30%" borderThickness="0">
	                        <xenospopup:AccountPopUpHbox id="fundactPopUp" retContextItem="{returnContextItem}" recContextItem="{populateInvActContext()}"/>
	                    </mx:GridItem>
	                </mx:GridRow>
	                
	               <mx:GridRow width="100%">
	                    <mx:GridItem width="20%" borderThickness="0">
	                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.securitycode')}" />
	                    </mx:GridItem>
	                    <mx:GridItem width="38%" borderThickness="0">
	                        <xenospopup:InstrumentPopUpHbox id="securityCode"/>  
	                    </mx:GridItem> 
	
	                 <mx:GridItem width="20%" borderThickness="0">
	                    </mx:GridItem>
	                   <mx:GridItem width="30%"   borderThickness="0">  
	                  </mx:GridItem>
	             </mx:GridRow>
	        </mx:Grid>
	            
	            <!-- Sort Order -->
	        <flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
	            <mx:Grid width="100%" borderThickness="0">
	                <mx:GridRow width="100%">
	                    <mx:GridItem width="100%" borderThickness="0">
	                        <mx:HBox width="100%">
	                            <mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"/>
	                            <mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"/>
	                            <mx:ComboBox id="sortField3" labelField="label" />
	                        </mx:HBox> 
	                    </mx:GridItem>                         
	                </mx:GridRow>
	            </mx:Grid>
	        </flexlib:WindowShade>
            
            <mx:HBox width="100%" styleName="ButtonBackPanel">
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="this.dispatchEvent(new Event('querySubmit'))" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="this.dispatchEvent(new Event('queryReset'))" />
            </mx:HBox>

            </mx:VBox>
        </mx:Canvas>
            
        <mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >          
            <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'QUERY' ? 1 : 2}"/> 
            <cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}"  dragEnabled="false" sortableColumns="false" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" editable="false"> 
                <cntrls:columns>      
                       <mx:DataGridColumn textAlign="left" headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{new RendererFectory(ImgSummaryRenderer)}" />
                       <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.fundcode')}" id="fundCode"  dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" width="90"/>
                       <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.fundname')}" id="fundname" dataField="fundName" width="150"/>
                       <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.fundacno')}" id="fundAccountNo" dataField="fundAccountPk" labelFunction="getFundAccNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" width="110"/>
                       <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.fundacname')}" id="fundAccountName" dataField="fundAccountName" width="150" wordWrap="true"/>
                       <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.brokeracno')}" id="brokerAccountNo" dataField="brokerAccountPk" labelFunction="getBrokerAccNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer"  width="110"/>
                       <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.brokeracname')}" id="brokerAccountName" dataField="brokerAccountName" width="150" wordWrap="true"/>
                       <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.securitycode')}" id="secCode" dataField="securityCode" itemRenderer="com.nri.rui.core.renderers.InstrumentDetailsRenderer" width="110"/>
                       <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.securityname')}" id="securityname" dataField="securityName" width="150" wordWrap="true"/>
                       <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" id="alternateSecurity" dataField="alternateSecurity" width="150" wordWrap="true"/>
                       <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('borrow.label.borrowedquantity')}" id="borrowedQty" dataField="borrowedQtyStr" width="90"/>
                </cntrls:columns> 
             </cntrls:CustomDataGrid>
        </mx:VBox>
    </mx:HDividedBox>
    
    </mx:VBox>
    
    </mx:Canvas>  
</containers:XenosQueryModule>