<?xml version="1.0" encoding="utf-8"?>


<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:containers="com.nri.rui.core.containers.*" xmlns:local="com.nri.rui.exm.controls.*" xmlns="*" xmlns:utils="com.nri.rui.exm.utils.*" layout="absolute" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" creationComplete="loadInit()">
	
     <mx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
		    import com.nri.rui.core.controls.XenosAlert;
		    import mx.rpc.events.ResultEvent;
    
    
    	    [Bindable]
    	    public var messageIdStr:String;	
    	    [Bindable]
    	    public var messageTypeStr:String;
    	    [Bindable]
    	    public var qIdStr:String;	
    	    [Bindable]
    	    public var modeStr:String;	
            public var o:Object = {};
             
            [Bindable]
		    private var xmlObj:XML;
		    [Bindable]
            public var resultObj:XML;
             
             
		    private function loadInit():void{
		    	//XenosAlert.info("loadInit");
		    	parseUrlString();
		    	var reqObj:Object=new Object();
		    	
		    	reqObj.method = "viewDetails";
		    	reqObj.action=messageIdStr;
		    	reqObj.messageType=messageTypeStr;
		    	reqObj.mode=modeStr;
		    	reqObj.rui="RUI";
		    	reqObj.qId=qIdStr;
		    	reqObj.SCREEN_KEY = '2';
		    	viewXmlRequest.request=reqObj;
		    	viewXmlRequest.send();
		    }
           
            private function saveXmlRequest():void {
		       	var url : String = "exm/messageBrowserRecycleBin.action?method=saveXml&mode=xml";
		    	var request:URLRequest = new URLRequest(url);
		    	request.method = URLRequestMethod.POST;
		    	 try {
		                navigateToURL(request,"_blank");
		            }
		            catch (e:Error) {
		                // handle error here
		                trace(e);
		            }
		    }
           
           public function restoreMessage(event:Event) :void {
           	
           	this.parentDocument.initializeActionEntry("Restore");
           	
           }
           
           public function deleteMessage(event:Event) :void{

			this.parentDocument.initializeActionEntry("Delete");

           }
		    
				          
		    public function parseUrlString():void {
		        try {
		            // Remove everything before the question mark, including
		            // the question mark.
		            var myPattern:RegExp = /.*\?/; 
		            var s:String = this.loaderInfo.url.toString();
		            s = s.replace(myPattern, "");
		            // Create an Array of name=value Strings.
		            var params:Array = s.split("&"); 
		             // Print the params that are in the Array.
		            var keyStr:String;
		            var valueStr:String;
		            var paramObj:Object = params;
		          
		            // Set the values of the salutation.
		            for (var i:int = 0; i < params.length; i++) {
		                var tempA:Array = params[i].split("=");  
		                if (tempA[0] == "messageId") {
		                    o.messageId = tempA[1]+"="+tempA[2];
		                } 
		                messageIdStr = o.messageId; 
		                if (tempA[0] == "messageType") {
		                    o.messageType = tempA[1];
		                } 
		                messageTypeStr = o.messageType;
		                if (tempA[0] == "qId") {
		                    o.qId = tempA[1];
		                } 
		                qIdStr = o.qId;
		                messageTypeStr = o.messageType;
		                if (tempA[0] == "mode") {
		                    o.mode = tempA[1];
		                } 
		                modeStr = o.mode;
		                 
		                
		            } 
		            
		        } catch (e:Error) {
		            trace(e);
		        }
		       
		    }
		    
				    
		    /**
		    * This method works as the result handler of the Initialization/Reset Http Services.
		    * 
		    */   
		    private function initPage(event: ResultEvent) : void {
		        var i:int = 0;
		        if(event.result.messageDetail != null) {
			    	if(modeStr=="xml"){			    		
			    	  viewXml.text = event.result.messageDetail;
			    	}else{
			    		viewXml.text = event.result.messageDetail;
			    	}
			    }else {
			    	XenosAlert.info("Unable to get message result.");
			    }
		       		        
		        viewXml.editable=false;
		        
		    }

			private function showError(event:Event,msg:String):void{
				
				XenosAlert.error("Error occured while "+msg+". Please refer to the log file for details.");
			}
			
		]]>
	</mx:Script>
	
	     <cntrls:XenosHTTPService id="viewXmlRequest" url="exm/messageBrowserRecycleBin.action?" fault="XenosAlert.error('Error Occured Initialize :  ' + event.fault.faultString + ' message :: '+event.fault.message + ' faultDetail :: '+event.fault.faultDetail + ' faultString :: '+event.fault.faultString)" 
                method="POST" useProxy="false" result="initPage(event)" showBusyCursor="true"/>
            	
			<mx:Form id="form" width="100%" height="100%" >
			
			 <mx:VBox width="100%" height="90%">  
			    <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
			    <mx:TextArea height="100%" width="100%" id="viewXml"/>
			 </mx:VBox>
			
			 
			 <mx:HBox>      
        		<mx:Button id="restorebtn" click="restoreMessage(event)" label="Restore"/>
        		<mx:Button id="deletebtn" click="deleteMessage(event)" label="Delete"/>
        		<mx:Button id="savebtn" click="saveXmlRequest()" label="Save"/>        
    		</mx:HBox>
    	</mx:Form>
</mx:Module>
