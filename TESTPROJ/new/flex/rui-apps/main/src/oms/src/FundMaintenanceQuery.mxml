<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" 
							 xmlns:containers="com.nri.rui.core.containers.*" 
							 xmlns:flexlib="http://code.google.com/p/flexlib/" 
							 xmlns:cntrls="com.nri.rui.core.controls.*" 
							 xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" 
							 xmlns:frmtrs="com.nri.rui.core.formatters.*"
            				 xmlns:valdtrs="com.nri.rui.core.validators.*"
							 layout="vertical" percentWidth="100" percentHeight ="100" 
							 horizontalScrollPolicy="off" verticalScrollPolicy="off"
							 creationComplete="loadResourceBundle()">
    <mx:Script>
    	<![CDATA[
    		import mx.events.DataGridEvent;
    		import com.nri.rui.core.Globals;
    		import mx.resources.ResourceBundle;
			import com.nri.rui.core.utils.XenosStringUtils;
			import com.nri.rui.core.controls.XenosAlert;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			
			/**
 			*  datagrid header release event handler to handle datagridcolumn sorting
 			*/
			public function dataGrid_headerRelease(evt:DataGridEvent):void {				
				var dg:DataGrid = DataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];		
			}
			
		 				
    	]]>
    </mx:Script>
    <mx:Metadata>
     	[ResourceBundle("omsResources")]
    </mx:Metadata>
	<mx:Script source="actionscripts/FundMaintenanceQuery.as"/>
	
	<containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <containers:transitions>
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <mx:Move  duration="400"/>
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions> 
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
	    <mx:HBox width="100%" styleName="ExCoBgPanel">
	    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />    	
	    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
	    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres';app.submitButtonInstance = submit;"/>    	
	    </mx:HBox>
    </mx:VBox>
    
<mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
	<mx:VBox width="100%" height="100%">
		<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
			<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
			  <mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" width="100%" height="100%" styleName="HDivideStyle" >
				<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
				<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
		        <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
		        
                <mx:Grid width="100%" borderThickness="0">
					 
					   <mx:GridRow width="100%" height="100%">
					   		<!--Fund Code-->
							<mx:GridItem width="20%" borderThickness="0" >
			                	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('oms.fund.code.label.fundMaintenance')}" />
			                </mx:GridItem>
			                <mx:GridItem width="30%" borderThickness="0" >
			                	<xenospopup:FundPopUpHbox id="fundPopUp" />
			                </mx:GridItem>
			                <!--Security Code-->
			                <mx:GridItem width="20%" borderThickness="0" >
			                	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('oms.sec.code.label.fundMaintenance')}" />
			                </mx:GridItem>
			                <mx:GridItem width="30%" borderThickness="0" >
			                	 <xenospopup:InstrumentPopUpHbox id="instPopUp"/>
			                </mx:GridItem>							
						</mx:GridRow>	
						
						<mx:GridRow width="100%" height="100%">
							<!--Buy/Sell Flag-->
							 <mx:GridItem width="20%" borderThickness="0" >
			                	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('oms.fund.maintenance.buysellflag')}"/>
			                </mx:GridItem>
			                <mx:GridItem width="30%" borderThickness="0" >
			                	 <mx:ComboBox id="buySellFlag" labelField="label" prompt="Select"/>
			                </mx:GridItem>	
							<!--Round Up/Down Flag-->
							 <mx:GridItem width="20%" borderThickness="0" >
			                	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('oms.fund.maintenance.round.up.down')}"/>
			                </mx:GridItem>
			                <mx:GridItem width="30%" borderThickness="0" >
			                	 <mx:ComboBox id="roundUpDownFlag" labelField="label" prompt="Select"/>
			                </mx:GridItem>								
														
						</mx:GridRow>
						
						<mx:GridRow width="100%" height="100%">
							<!--Status-->
							 <mx:GridItem width="20%" borderThickness="0" >
			                	<mx:Label id="statuslbl" text="{this.parentApplication.xResourceManager.getKeyValue('oms.fund.maintenance.status')}"/>
			                </mx:GridItem>
			                <mx:GridItem width="30%" borderThickness="0" >
			                	 <mx:ComboBox id="statusList" labelField="label" prompt="Select"/>
			                </mx:GridItem>	
			            </mx:GridRow>
			            
					 </mx:Grid>
               	 <!-- Sort Order -->
				<flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
		                <mx:Grid width="100%" borderThickness="0">
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="100%" borderThickness="0">
		                            <mx:HBox width="100%">
										<mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"></mx:ComboBox>
										<mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"> </mx:ComboBox>
										<mx:ComboBox id="sortField3" labelField="label" > </mx:ComboBox>
		                            </mx:HBox> 
		                        </mx:GridItem>                         
		                    </mx:GridRow>
		                </mx:Grid>
		       </flexlib:WindowShade>	
               <mx:HBox width="100%" styleName="ButtonBackPanel">
   	           		<cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')) : (this.mode == 'amend' ? this.dispatchEvent(new Event('amendSubmit')) : this.dispatchEvent(new Event('cancelSubmit')))}" />
               		<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('queryReset')) : (this.mode == 'amend' ? this.dispatchEvent(new Event('amendReset')) : this.dispatchEvent(new Event('cancelReset')))}" />
	           </mx:HBox>
	           </mx:VBox>
	           </mx:Canvas>
	           		<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle">			
						<cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'query' ? 1 : 2}"/>
						<mx:DataGrid id="fundMaintenanceSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()">
				            <mx:columns>
				            	<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" sortable="false"  />
				            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('oms.fund.code.label.fundMaintenance')}" dataField="fundCode"  sortCompareFunction="sortUtil.sortString" width="200" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer"/>
				            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('oms.sec.code.label.fundMaintenance')}" dataField="securityId" sortCompareFunction="sortUtil.sortString"  width="200" itemRenderer="com.nri.rui.core.renderers.InstrumentDetailsRenderer"/>
	            				<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('oms.fund.maintenance.buysellflag')}" dataField="buySellFlag"  sortCompareFunction="sortUtil.sortString"  width="200"/>
	            				<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('oms.fund.maintenance.round.up.down')}" dataField="roundUpDown"  sortCompareFunction="sortUtil.sortString"  width="200"/>
	            				<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('oms.fund.maintenance.status')}" dataField="status"  sortCompareFunction="sortUtil.sortString"  width="250" itemRenderer="com.nri.rui.core.renderers.StatusRenderer" />
				            </mx:columns>
					    </mx:DataGrid>
					</mx:VBox>
	           </mx:HDividedBox>
    		  </mx:VBox>
    	</mx:Canvas>
    
</containers:XenosQueryModule>