<?xml version="1.0" encoding="utf-8"?>

<containers:XenosQueryModule xmlns:containers="com.nri.rui.core.containers.*"
							xmlns:mx="http://www.adobe.com/2006/mxml"
                            xmlns:cntrls="com.nri.rui.core.controls.*"
                            xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" 
                            xmlns:flexlib="http://code.google.com/p/flexlib/" 
                            xmlns:frmtrs="com.nri.rui.core.formatters.*"
                            xmlns:valdtrs="com.nri.rui.core.validators.*"
                            layout="vertical" percentWidth="100"
                            percentHeight ="100" horizontalScrollPolicy="off"
                            verticalScrollPolicy="off"
                            creationComplete="focusManager.setFocus(submit);">

	<mx:Script source="actionscripts/PerSecurityStatusQuery.as" />
	
	<mx:Script>
		<![CDATA[
			import mx.utils.StringUtil;
			import mx.containers.TitleWindow;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.CheckBox;
			import mx.managers.PopUpManager;
			
			import com.nri.rui.core.controls.XenosAlert;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import mx.controls.DataGrid;
            import mx.events.DataGridEvent;
            import mx.core.Application;
            
            import com.nri.rui.core.controls.XenosAlert; 
            
			/**
             * This method should be called on creationComplete of the datagrid 
             */ 
             private function bindDataGrid1():void {
                qh1.dgrid = resultSummary1;
            }
            /**
             * This method should be called on creationComplete of the datagrid 
             */          
            
			private function changeCurrentState():void{
				currentState = "result";
				app.submitButtonInstance = null;
			}		
			/**
			 *  datagrid header release event handler to handle datagridcolumn sorting
			 */
			public function dataGrid_headerRelease1(evt:DataGridEvent):void {				
				var dg:CustomDataGrid = CustomDataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];		
			}	
			/**
			 *  datagrid header release event handler to handle datagridcolumn sorting
			 */
		]]>
	</mx:Script>	
	<containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">	
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
   
   <cntrls:XenosHTTPService id="initializePerSecurityStatusQuery"
   			fault="XenosAlert.error('Error Occured :  ' + event.fault.faultString)"
            method="POST" useProxy="false" result="initPage(event)" showBusyCursor="true"/>
    
    <cntrls:XenosHTTPService id="perSecurityStatusQueryRequest" 
         url="smr/perSecurityStatusQueryDispatch.action?" 
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('smr.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         result="loadPage(event)" showBusyCursor="true">
    </cntrls:XenosHTTPService>
    
	<mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
        <mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />       
        <mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result';" />
        <mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres';"/>        
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
	<mx:VBox width="100%" height="100%">
    <mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}">
    
    	<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
    		<mx:VBox width="100%" height="100%">
    			<mx:HDividedBox id="hdbox2" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="initPageStart()"  >
    		<mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" width="100%" height="100%" styleName="HDivideStyle" >
    			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
            	<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
            	<mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />
            	
            	<mx:Grid width="100%" borderThickness="0">
            		<mx:GridRow width="100%">
	                    <mx:GridItem width="40%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.requesteddate')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="60%" borderThickness="0">
                            <mx:HBox width="100%">
                               <mx:DateField id="dateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                               <mx:DateField id="dateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>
                        </mx:GridItem>
							<mx:GridItem width="20%" borderThickness="0">
					 		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.userid')}" />
					 	</mx:GridItem>
					 	<mx:GridItem id="grdItem1" width="30%" borderThickness="0">
					 		<xenospopup:EmployeePopUpHbox id="userIdPopUp" />
					 	</mx:GridItem>
            		</mx:GridRow>
            		<mx:GridRow width="100%">
            		     <mx:GridItem width="40%" borderThickness="0">
                        	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.requestedstatus')}"/>
                  		 </mx:GridItem>
                  	 	 <mx:GridItem width="60%" borderThickness="0">
                              <mx:List id="requestedStatus" width="230" labelField="label"  rowCount="7" allowMultipleSelection="true"/>
                  	 	 </mx:GridItem>  
	                    
            		</mx:GridRow>
				</mx:Grid>
				
			   <flexlib:WindowShade id="ws1" tabChildren="{ws1.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
                <mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                        <mx:GridItem width="100%" borderThickness="0">
                        	<mx:HBox width="100%">
			                    <mx:ComboBox id="sortFieldList1" labelField="label" change="sortOrder1Update()"/>                        
	                            <mx:ComboBox id="sortFieldList2" labelField="label" change="sortOrder2Update()"/>                 
	                            <mx:ComboBox id="sortFieldList3" labelField="label"/>
                            </mx:HBox>
                        </mx:GridItem>  
					  </mx:GridRow>
			       </mx:Grid>
			    </flexlib:WindowShade>
            	
            	<mx:HBox width="100%" styleName="ButtonBackPanel">
	                <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')) : this.dispatchEvent(new Event('amendSubmit'))}" />
	               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'query' ? this.dispatchEvent(new Event('queryReset')) : this.dispatchEvent(new Event('amendReset')) }" />    
	            </mx:HBox>
            
    		</mx:VBox>
    		</mx:HDividedBox>
    		</mx:VBox>
    	</mx:Canvas>
    	
    	<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >    
    		<cntrls:QueryResultHeader id="qh1" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'QUERY' ? 1 : 2}"/> 
    		<cntrls:CustomDataGrid id="resultSummary1" width="100%" height="100%" dataProvider="{queryResult1}" sortableColumns="{this.mode =='query'}" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid1()" headerRelease="dataGrid_headerRelease1(event)"> 
            <cntrls:columns>
            	<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" editable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" sortable="false"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.requestedsequenceno')}" dataField="requestedSequenceNo" wordWrap="true" width="180" sortCompareFunction="sortUtil.sortString" />
           		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.userid')}" dataField="userId" wordWrap="true" width="100" textAlign="left" sortCompareFunction="sortUtil.sortString"/>
           		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.requesteddate2')}" dataField="requestedDateDisp" wordWrap="true" width="180" sortCompareFunction="sortUtil.sortString" />
           		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.securitycode')}" dataField="securityCode" width="120" wordWrap="true" sortCompareFunction="sortUtil.sortString" />
           		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.codetype')}" dataField="codeType" wordWrap="true" sortCompareFunction="sortUtil.sortString" />
           		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.bbproductkey')}" dataField="bbProductKey" wordWrap="true" width="120" textAlign="left" sortCompareFunction="sortUtil.sortString"/>
           		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.requestedstatus')}" dataField="requestedStatus" wordWrap="true" width="210" sortCompareFunction="sortUtil.sortString" itemRenderer="com.nri.rui.smr.renderers.FailedStatusRenderer" />
           		<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.lastupdate')}" dataField="lastUpdateDisp" wordWrap="true" sortCompareFunction="sortUtil.sortString" />
            </cntrls:columns>
            </cntrls:CustomDataGrid>
	          <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('smr.persecuritystatusquery.label.refresh')}" id="refresh" styleName="BtnStyle" click="this.dispatchEvent(new Event('querySubmit'))" />
		       </mx:VBox>
    	
    </mx:HDividedBox>
    </mx:VBox>
    </mx:Canvas>
</containers:XenosQueryModule>