<?xml version="1.0" encoding="utf-8"?>
<!--



-->

<!--Mxml file for Derivative Trade Query Contract Detail View -->

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" 
    xmlns:cntrls="com.nri.rui.core.controls.*"
    xmlns:flexlib="http://code.google.com/p/flexlib/"  
    width="100%" height="100%" creationComplete="init()">
    
    <mx:Script>
        <![CDATA[
        	import mx.core.UIComponent;
        	import com.nri.rui.core.utils.XenosPopupUtils;
        	import com.nri.rui.core.utils.PrintUtils;
            import com.nri.rui.core.utils.XenosStringUtils;
            import com.nri.rui.core.controls.XenosAlert;
            import mx.managers.PopUpManager;
            import com.nri.rui.core.Globals;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;
            import mx.collections.ArrayCollection;
            [Bindable]
            private var summaryResult:ArrayCollection = new ArrayCollection;
            [Bindable]
            private var contractDetails:ArrayCollection = new ArrayCollection();
            [Bindable]
            private var contractDetailsObj:Object = new Object();
            [Bindable]
            private var contractPk : String = "";
            [Bindable]
 			public var actionMode:String = "query";
            /**
             * Extracts the parameters and set them to some variables for query criteria from the Module Loader Info.
             * 
             */ 
            public function parseUrlString():void {
                try {
                    // Remove everything before the question mark, including
                    // the question mark.
                    var myPattern:RegExp = /.*\?/; 
                    var s:String = this.loaderInfo.url.toString();
                    s = s.replace(myPattern, "");
                    // Create an Array of name=value Strings.
                    var params:Array = s.split(Globals.AND_SIGN); 
                     // Print the params that are in the Array.
                    var keyStr:String;
                    var valueStr:String;
                    var paramObj:Object = params;
                  
                    // Set the values of the salutation.
                    for (var i:int = 0; i < params.length; i++) {
                        var tempA:Array = params[i].split("=");  
                        if (tempA[0] == "contractPk") {
                            contractPk = tempA[1];
                        } 
                    }
                } catch (e:Error) {
                    trace(e);
                }               
            }
            /**
             * Initializes the module and send the submit request.
             * 
             */     
            private function init():void{
                
                parseUrlString();
                
                var rndNo:Number = Math.random();
                httpService.url= "drv/drvTradeDetails.action?rnd=" + rndNo;
                
                var req : Object = new Object();
                req.method="viewContractDetails";
                req.contractPk=this.contractPk;  
                httpService.request=req;
                
                httpService.send();
                PopUpManager.centerPopUp(this);
            }
            /**
             * Error Handler for the submit request.
             * 
             */ 
            private function httpService_fault(evt:FaultEvent):void {
                XenosAlert.error(evt.fault.faultDetail);
            }
            /**
             * Result handler for the submit Request. 
             * 
             */ 
            private function httpService_result(event:ResultEvent):void {               
                if (null != event) {            
                    if(null == event.result.drvTradeDetailsActionForm){
                        summaryResult.removeAll(); // clear previous data if any as there is no result now.
                        if(null == event.result.XenosErrors){ // i.e. No result but no Error found.
                            errPage.clearError(event); //clears the errors if any
                            XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
                        } else { // Must be error
                            errPage.displayError(event);    
                        }
                                   
                    }else {
                        errPage.clearError(event);
                        
                        var contractDetails:ArrayCollection = new ArrayCollection();
                        
                        if(null != event.result.drvTradeDetailsActionForm.contractDetailViewList){
                            if(event.result.drvTradeDetailsActionForm.contractDetailViewList is ArrayCollection){
                                contractDetails = event.result.drvTradeDetailsActionForm.contractDetailViewList as ArrayCollection;
                            }else{
                                contractDetails.addItem(event.result.drvTradeDetailsActionForm.contractDetailViewList);
                            }
                        }
                        
                        contractDetailsObj = contractDetails.getItemAt(0);
                        if(contractDetails.getItemAt(0).contractReferenceNo != null){
                            lblHeader.text = this.parentApplication.xResourceManager.getKeyValue('drv.label.contractinformation') + " [ Contract Reference No - " + contractDetails.getItemAt(0).contractReferenceNo + " ]"    
                        }
                        
                        if(null != contractDetails.getItemAt(0).tradeList){
                            if(contractDetails.getItemAt(0).tradeList is ArrayCollection){
                                summaryResult = contractDetails.getItemAt(0).tradeList as ArrayCollection;                                
                            }else{
                                summaryResult.addItem(contractDetails.getItemAt(0).tradeList);                                
                            }
                        }else{
                            XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('drv.alert.records.listnull'));
                        }
                    } 
                }else {
                    summaryResult.removeAll();
                    XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
                }                
            }
            /**
             * Retrieve and return the Reference No With Version as Labelfunction.
             */
            private function referenceNoWithVersion(item:Object, column:DataGridColumn):String{
                return item.tradeReferenceNo + "-" + item.versionNo;
            }
            /**
             * Extract the value of the colum cell removing the prefix added at '0'th index.
             */ 
            private function extractPrecisionedValue(item:Object, column:DataGridColumn):String{
                var strData:String = item[column.dataField];
                if(!XenosStringUtils.isBlank(strData) && strData.charAt(0)=="F"){
                    if(strData.length == 1)
                        return XenosStringUtils.EMPTY_STR;
                    else
                        return strData.substring(1);
                }else{
                    return item[column.dataField];                    
                }
            } 
            
            /**
		   * This method is used for loading Fund Details popup module
		   * 
		   */  
		   public function showFundDetail():void{
		   			var fundPkStr : String = contractDetailsObj.fundPk;
					var parentApp :UIComponent = UIComponent(this.parentApplication);
					XenosPopupUtils.showFundCodeDetails(fundPkStr,parentApp);
		   }
		   /**
		   * This method is used for loading Fund Account Details popup module
		   * 
		   */  
		   public function showFundAccountDetail():void{
		   			var accPkStr : String = contractDetailsObj.fundAccountPk;
					var parentApp :UIComponent = UIComponent(this.parentApplication);
					XenosPopupUtils.showAccountSummary(accPkStr,parentApp);
		   }
		   /**
		   * This method is used for loading Account Details popup module
		   * 
		   */  
		   public function showAccountDetail():void{
		   			var accPkStr : String = contractDetailsObj.cpAccountPk;
					var parentApp :UIComponent = UIComponent(this.parentApplication);
					XenosPopupUtils.showAccountSummary(accPkStr,parentApp);
		   }
		   
		   private function showInstrumentDetail():void {
		   			var instrStr : String = contractDetailsObj.instrumentPk;
					var parentApp :UIComponent = UIComponent(this.parentApplication);
					XenosPopupUtils.showInstrumentDetails(instrStr,parentApp);
		   }
        ]]>
    </mx:Script>
    <cntrls:XenosHTTPService id="httpService" 
            useProxy="false"
            fault="httpService_fault(event);"
            result="httpService_result(event)" showBusyCursor="true" >
           <!-- <mx:request >
                <method>viewContractDetails</method>
                <contractPk>{this.contractPk}</contractPk>                                
            </mx:request> -->
    </cntrls:XenosHTTPService>
    <mx:HBox width="100%" styleName="ButtonBackPanel" horizontalAlign="right">
     <mx:Button id="Print" styleName="PrintBtnStyle" toolTip="{this.parentApplication.xResourceManager.getkeyvalue('inf.form.button.lable.print')}" click="PrintUtils.printDetail(this.contractdetailsview)"/>
    </mx:HBox>
    <mx:Canvas width="100%" height="100%">
        <mx:VBox id="contractdetailsview" width="100%" height="100%">
		
        <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none" paddingLeft="10" paddingRight="10"/>
        
        <mx:Label width="100%" id="lblHeader" fontWeight="bold"/>
        <mx:Grid width="100%" horizontalGap="0" verticalGap="0">
            <mx:GridRow width="100%">
                <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundcode')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.fundCode==null? '' : contractDetailsObj.fundCode}" click="showFundDetail()" styleName="TextLink" buttonMode="true" useHandCursor="true" mouseChildren="false" selectable="true"/>
                </mx:GridItem>
                 <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundname')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.fundName==null? '' : contractDetailsObj.fundName}"  selectable="true"/>
                </mx:GridItem>                
            </mx:GridRow>
            <mx:GridRow width="100%">
                <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundaccountno')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.fundAccountNo==null? '' : contractDetailsObj.fundAccountNo}" click="showFundAccountDetail()" styleName="TextLink" buttonMode="true" useHandCursor="true" mouseChildren="false" selectable="true"/>
                </mx:GridItem>
                <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundaccountname')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.fundAccountName==null? '' : contractDetailsObj.fundAccountName}"  selectable="true"/>
                </mx:GridItem>
            </mx:GridRow>
            <mx:GridRow width="100%">
                <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.brokeraccountno')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.cpAccountNo==null? '' : contractDetailsObj.cpAccountNo}" click="showAccountDetail()" styleName="TextLink" buttonMode="true" useHandCursor="true" mouseChildren="false" selectable="true"/>
                </mx:GridItem>        
                <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.brokeraccountname')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.cpAccountName==null? '' : contractDetailsObj.cpAccountName}"  selectable="true"/>
                </mx:GridItem>          
            </mx:GridRow>
            <mx:GridRow width="100%" >
            	<mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.securitycode')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.securityCode==null? '' : contractDetailsObj.securityCode}" click="showInstrumentDetail()" styleName="TextLink" buttonMode="true" useHandCursor="true" mouseChildren="false" selectable="true"/>
                </mx:GridItem>
                <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.securityshortname')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.securityName==null? '' : contractDetailsObj.securityName}" />
                </mx:GridItem>                
            </mx:GridRow>
            <mx:GridRow width="100%" >
            	<mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.alternateSecurityCodeDisp==null? '' : contractDetailsObj.alternateSecurityCodeDisp}" selectable="true"/>
                </mx:GridItem>
                <mx:GridItem width="20%" styleName="LabelBgColor">
                   <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.underlyingshortname')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
					<mx:Text text="{contractDetailsObj.underLyingSecurityName==null? '' : contractDetailsObj.underLyingSecurityName}" />
                </mx:GridItem>                
            </mx:GridRow>
            <mx:GridRow width="100%">            
             	<mx:GridItem width="20%" styleName="LabelBgColor">                    
                </mx:GridItem>
                <mx:GridItem width="30%">                    
                </mx:GridItem>
                <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.opencontractbalance')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.openContractBalanceStr==null? '' : contractDetailsObj.openContractBalanceStr}" />
                </mx:GridItem>                           
            </mx:GridRow> 
            <mx:GridRow width="100%">
            	<mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.expiredbalance')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%" >
                    <mx:Text text="0" />
                </mx:GridItem>
                <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.settlementtype')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%">
                    <mx:Text text="{contractDetailsObj.drvSettlementTypeStr==null? '' : contractDetailsObj.drvSettlementTypeStr}" />
                </mx:GridItem>
                                  
            </mx:GridRow>
            <mx:GridRow width="100%">
             	<mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.settlementbasis')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%" >
                    <mx:Text text="{contractDetailsObj.settlementBasisStr==null? '' : contractDetailsObj.settlementBasisStr}" />
                </mx:GridItem>  
                 <mx:GridItem width="20%" styleName="LabelBgColor">
                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.expirystatus')}" styleName="FormLabelHeading" />
                </mx:GridItem>
                <mx:GridItem width="30%" >
                    <mx:Text text="{contractDetailsObj.expiryStatus==null? '' : contractDetailsObj.expiryStatus}" />
                </mx:GridItem>                             
            </mx:GridRow>           
        </mx:Grid>            
        
        <mx:Label width="100%" id="lblTrdInfo" fontWeight="bold" text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradeinfo')}"/>        
        <mx:DataGrid id="SummaryResult" dataProvider="{this.summaryResult}" rowCount="4" width="100%" height="100%" sortableColumns="false" variableRowHeight="true">
            <mx:columns>  
               <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradereferenceno')}" dataField="tradeReferenceNo" labelFunction="referenceNoWithVersion" itemRenderer="com.nri.rui.drv.rendrers.TradeDetailsRenderer"/>
               <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradedate')}" dataField="tradeDateStr"/>
               <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.opencloseposition')}" dataField="openCloseFlag"/>
               <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.quantity')}" dataField="quantityStr" textAlign="right"/>
               <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.openbalqty')}" dataField="openQuantityStr" textAlign="right"/>
               <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.price')}" dataField="priceStr" textAlign="right" labelFunction="extractPrecisionedValue"/>
               <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradecurrency')}" dataField="tradingCCY"/>
               <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.status')}" dataField="status" itemRenderer="com.nri.rui.core.renderers.StatusRenderer"/>                   
            </mx:columns>
        </mx:DataGrid>
        
     </mx:VBox>
    </mx:Canvas>
</mx:Module>
