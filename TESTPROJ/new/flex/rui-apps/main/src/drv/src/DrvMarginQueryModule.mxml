<?xml version="1.0" encoding="utf-8"?>
<!--



-->

<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" xmlns:valdtrs="com.nri.rui.core.validators.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
	
	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import com.nri.rui.core.utils.XenosStringUtils;
			import mx.utils.StringUtil;
			import com.nri.rui.core.controls.XenosAlert;
			import com.nri.rui.core.renderers.StatusRenderer;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import com.nri.rui.drv.rendrers.DrvMarginQueryDetailsRenderer;
			import mx.managers.PopUpManager;
			
					    
		    /**
			 * This method should be called on creationComplete of the datagrid 
			 */ 
			 private function bindDataGrid():void {
				qh.dgrid = resultSummary;
			 }
			 /**
            * Retrieve and return the Fund Account Number.
            */
            private function getFundAccNo(item:Object,column : DataGridColumn):String {
                return item.inventoryAccountNo;
            }  
            
            /**
            * Retrieve and return the Broker Account Number.
            */
            private function  getBrokerAccNo (item:Object,column : DataGridColumn):String {
                return item.cpAccountNo;
            } 

			]]>
		</mx:Script>
		
	<mx:Script source="actionscripts/DrvMarginQueryModule.as"/>
	
    
     <containers:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions> 
    
    <frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
       
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    </mx:VBox>
	
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
	<mx:VBox width="100%" height="100%">
	<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
		
		<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" width="100%" height="100%" styleName="HDivideStyle" >
			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
			<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
		
               <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
			      <mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundcode')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:FundPopUpHbox id="fundCode"/>
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundaccountno')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="fundAccountNo" retContextItem="{returnContextItem}" recContextItem="{populateContext()}"/>
                        </mx:GridItem>
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.accountno')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="brkAccountNo"  retContextItem="{returnContextItem}" recContextItem="{populateInvActContext()}"/>                           
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.securitycode')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:InstrumentPopUpHbox id="securityId"/>
                        </mx:GridItem>
                    </mx:GridRow>
                    
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradereferenceno')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:TextInput id="trdReferenceNo" restrict="{Globals.INPUT_PATTERN}"/>
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradedate.fromto')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox>
                       			<mx:DateField id="trddateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                       			<mx:DateField id="trddateTo" formatString="YYYYMMDD" editable="true" width="90"/>
            				</mx:HBox>                         
                        </mx:GridItem>
                    </mx:GridRow>
                    
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
							<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.margin.refno')}"/>
						</mx:GridItem>
						<mx:GridItem width="30%" borderThickness="0">
							<mx:TextInput id="marginReferenceNo" restrict="{Globals.INPUT_PATTERN}"/>
						</mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.margin.basedate')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:DateField id="baseDate"  formatString="YYYYMMDD" editable="true" width="90"/>
                    </mx:GridItem>  
                    </mx:GridRow>
					
					<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
	                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.margin.type')}"/>
	                    </mx:GridItem>
	                    <mx:GridItem width="30%" borderThickness="0">
	                        <mx:ComboBox id="marginType"  labelField="label"/>                         
	                    </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
							<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.margin.ccy')}"/>
						</mx:GridItem>
						<mx:GridItem width="30%" borderThickness="0">
							<cntrls:CurrencyHBox id="marginCcy"/>                           
						</mx:GridItem> 
                    </mx:GridRow>
                    
                    <mx:GridRow width="100%">                   
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label id="satatusLebel" text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.status')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="status" labelField="label"/>
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                                                        
                        </mx:GridItem>                          
                    </mx:GridRow>
                </mx:Grid>                
            
			<flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="Sort Order Fields" opened="true" width="100%">
				<mx:Grid width="100%" borderThickness="0">
					<mx:GridRow width="100%">
						<mx:GridItem width="100%" borderThickness="0">
							<mx:HBox width="100%">
								<mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"/>
								<mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"/>
								<mx:ComboBox id="sortField3" labelField="label"/>					
							</mx:HBox>						
						</mx:GridItem>
					</mx:GridRow>
				</mx:Grid>
			</flexlib:WindowShade>

			<mx:HBox width="100%" styleName="ButtonBackPanel">
   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'marginquery' ?  this.dispatchEvent(new Event('querySubmit')) : (this.mode == 'marginamend' ? this.dispatchEvent(new Event('amendSubmit')) : this.dispatchEvent(new Event('cancelSubmit')))}" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'marginquery' ?  this.dispatchEvent(new Event('queryReset')) : (this.mode == 'marginamend' ? this.dispatchEvent(new Event('amendReset')) : this.dispatchEvent(new Event('cancelReset')))}" />
	        </mx:HBox>

		</mx:VBox>
		
		</mx:Canvas>
				
		<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >			
	        <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'marginquery' ? 1 : 2}"/>
            <cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true"  variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" headerRelease="dataGrid_headerRelease(event)">
                <cntrls:columns>
                	<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{mode == 'marginquery' ? new RendererFectory(ImgSummaryRenderer) : new RendererFectory(DrvMarginQueryDetailsRenderer,mode)}" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundcode')}" dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" visible="true" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundname')}" dataField="fundName" visible="true" sortCompareFunction="sortUtil.sortString" />                        
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundaccountno')}" dataField="fundAccountPk" labelFunction="getFundAccNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundaccountname')}" dataField="fundAccountName" visible="false" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.accountno')}" dataField="brokerAccountPk" labelFunction="getBrokerAccNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.accountname')}" dataField="brokerAccountName"  visible="false" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.securitycode')}" dataField="securityId" showDataTips="true" itemRenderer="com.nri.rui.core.renderers.InstrumentDetailsRenderer" visible="true" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.securityname')}" dataField="securityName" showDataTips="true" visible="true" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="alternateSecCodeDisp" showDataTips="true" visible="true" sortCompareFunction="sortUtil.sortString" />
	               	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.referenceno')}" dataField="tradeReferenceNo" itemRenderer="com.nri.rui.drv.rendrers.TradeDetailsRenderer" id="colRefNo" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradedate')}" dataField="tradeDateStr" sortCompareFunction="sortUtil.sortString" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.margin.refno')}" width="150" dataField="marginReferenceNo" itemRenderer="com.nri.rui.drv.rendrers.MarginDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.margin.basedate')}" width="100" dataField="baseDateStr" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.margin.type')}" width="100" dataField="marginTypeDisp" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.margin.ccy')}" width="100" dataField="marginCcy" />
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.status')}" dataField="status" itemRenderer="com.nri.rui.core.renderers.StatusRenderer" sortCompareFunction="sortUtil.sortString" />
                </cntrls:columns>
         </cntrls:CustomDataGrid>
        </mx:VBox>
	</mx:HDividedBox>
    </mx:VBox>
    
    </mx:Canvas>  
		 
</containers:XenosQueryModule>
