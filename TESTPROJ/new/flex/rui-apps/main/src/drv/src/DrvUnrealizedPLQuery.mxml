<?xml version="1.0" encoding="utf-8"?>
<!--



-->

<containers:XenosQueryModule xmlns:containers="com.nri.rui.core.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml"
							xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" 
							xmlns:flexlib="http://code.google.com/p/flexlib/"
							layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" creationComplete="focusManager.setFocus(submit);">
	
	<mx:Script source="actionscripts/DrvUnrealizedPLQuery.as"/>	
    <mx:Script>
    	<![CDATA[
    		import mx.events.DataGridEvent;
    		import com.nri.rui.core.controls.CustomDataGrid;
    		/**
			 * This method should be called on creationComplete of the datagrid 
			 */ 
			 private function bindDataGrid():void {
				qh.dgrid = resultSummary;
			}
			/**
 			*  datagrid header release event handler to handle datagridcolumn sorting
 			*/
			public function dataGrid_headerRelease(evt:DataGridEvent):void {				
				var dg:CustomDataGrid = CustomDataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];	
			}
			/**
            * Retrieve and return the Instrument Name for dataTip.
            */
            private function getSecurityShortName(item:Object):String {
                return item.securityShortName;
            }
            /**
            * Retrieve and return the Account Short Name for dataTip.
            */
            private function getAccountShortName(item:Object):String {
            	return item.invAccountName;
            }
            private function getAccountNo(item:Object, column:DataGridColumn):String{
				return item.invAccountNo;
			}
    	]]>
    </mx:Script>
    <containers:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
    <mx:VBox width="100%" height="100%">
    <mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
    	<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" width="100%" height="100%" styleName="HDivideStyle" >
			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
			<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
			<mx:Grid width="100%" borderThickness="0">
				<mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundcode')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:FundPopUpHbox id="fundPopUp"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundaccountno')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                       <xenospopup:AccountPopUpHbox id="actPopUp" retContextItem="{returnContextItem}" recContextItem="{populateContext()}"/>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.accountno')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:AccountPopUpHbox id="brkAccountNo" retContextItem="{returnContextItem}" recContextItem="{populateInvActContext()}"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.securitycode')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                       <xenospopup:InstrumentPopUpHbox id="securityId"/>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.basedate')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:DateField id="basedate"  formatString="YYYYMMDD" editable="true" width="90"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.mrktpricenotfound')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                       <mx:ComboBox id="mrktpricenotfound" width="160"/>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.contractreferenceno')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="contractReferenceNo" restrict="{Globals.INPUT_PATTERN}"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradereferenceno')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                       <mx:TextInput id="trdReferenceNo" restrict="{Globals.INPUT_PATTERN}"/>
                    </mx:GridItem>                         
                </mx:GridRow>
			</mx:Grid>
			
			<mx:HBox width="100%" styleName="ButtonBackPanel">
              	<cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.dispatchEvent(new Event('querySubmit'))}" />
           		<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.dispatchEvent(new Event('queryReset')) }" />
        	</mx:HBox>
        	
		</mx:VBox>
		</mx:Canvas>
		
		<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >	
			<cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" />
			<cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" headerRelease="dataGrid_headerRelease(event)"> 
		   		 <cntrls:columns>
		   		 	<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" sortable="false"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.contractreferenceno')}" width="130" dataField="contractReferenceNo" itemRenderer="com.nri.rui.drv.rendrers.ContractDetailsRenderer"  sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.tradereferenceno')}" dataField="tradeReferenceNo"  itemRenderer="com.nri.rui.drv.rendrers.TradeDetailsRenderer"  sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.referenceno')}" dataField="referenceNo" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.basedate')}" dataField="baseDateDisp" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundcode')}" dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundname')}" dataField="fundName" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundaccountno')}" dataField="invAccountPk" labelFunction="getAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" showDataTips="true" dataTipFunction="getAccountShortName" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.fundaccountname')}" dataField="invAccountName" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.securitycode')}" dataField="securityId" dataTipFunction="getSecurityShortName" showDataTips="true" itemRenderer="com.nri.rui.core.renderers.InstrumentDetailsRenderer" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.securityname')}" dataField="securityShortName" showDataTips="true"  visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.common.label.alternatesecurityid')}" dataField="alternateSecurityCodeDisp" sortCompareFunction="sortUtil.sortString" />
	               	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.unrealizedpl')}" dataField="unrealizedPlDisp" visible="true" sortCompareFunction="sortUtil.sortNumeric" textAlign="right"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.quantity')}" dataField="quantityDisp" visible="true" sortCompareFunction="sortUtil.sortNumeric" textAlign="right"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.bookvalue')}" dataField="bookValueDisp" visible="true" sortCompareFunction="sortUtil.sortNumeric" textAlign="right"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.price')}" dataField="priceDisp" visible="true" sortCompareFunction="sortUtil.sortNumeric" textAlign="right"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.marketvalue')}" dataField="marketValueDisp" visible="true" sortCompareFunction="sortUtil.sortNumeric" textAlign="right"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.marketprice')}" dataField="marketPriceDisp" visible="true" sortCompareFunction="sortUtil.sortNumeric" textAlign="right"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.pricetype')}" dataField="priceType" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.datasource')}" dataField="dataSource" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('drv.label.pricenotfound')}" dataField="priceNotFound" visible="true" sortCompareFunction="sortUtil.sortString"/>
		   		 </cntrls:columns>
         </cntrls:CustomDataGrid> 
		</mx:VBox>
		
    </mx:HDividedBox>
    </mx:VBox>
    </mx:Canvas>
</containers:XenosQueryModule>
