<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" 
						     xmlns:containers="com.nri.rui.core.containers.*" 
						     xmlns:frmtrs="com.nri.rui.core.formatters.*" 
						     xmlns:flexlib="http://code.google.com/p/flexlib/" 
						     xmlns:cntrls="com.nri.rui.core.controls.*" 
						     xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" 
						     xmlns:valdtrs="com.nri.rui.core.validators.*" 
						     layout="vertical" percentWidth="100" 
						     percentHeight ="100" horizontalScrollPolicy="off" 
						     verticalScrollPolicy="off" >
	
	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import com.nri.rui.core.utils.XenosStringUtils;
			import mx.utils.StringUtil;
			import com.nri.rui.core.controls.XenosAlert;
			import com.nri.rui.core.renderers.StatusRenderer;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.ref.renderers.MarketAmendQueryRenderer;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import com.nri.rui.core.utils.HiddenObject;
			import com.nri.rui.cam.renderers.SecurityInOutAmendCancelRenderer;
			
			    
    /**
	 * This method should be called on creationComplete of the datagrid 
	 */ 
	 private function bindDataGrid():void {
		qh.dgrid = resultSummary;
	 }	

		/**
         * Retrieve and return the Account Name for dataTip.
         */
        private function getAccountName(item:Object):String {
            return item.accountName;
        }
        /**
        * Retrieve and return the Account No
        */
        private function getAccountNo(item:Object,column : DataGridColumn):String {
            return item.accountDisplayName;
        }
           /**
        * Retrieve and return the Our Settle Account No
        */
        private function getOurSettleAccNo(item:Object,column : DataGridColumn):String {
            return item.settleAccountNo;
        }
        /**
        * Retrieve and return the Instrument Name for dataTip.
        */
        private function getSecurityCode(item:Object):String {
            return item.securityCode;
        }
        /**
         * Retrieve and return the Instrument Name for dataTip.
         */
        private function getSecurityName(item:Object):String {
            return item.instrumentName;
        }

		]]>
	</mx:Script>
	<mx:Script source="actionscripts/SecurityInOutQueryModule.as"/>
	
    
     <containers:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State> 
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions> 
    
    <frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
	<!--valdtrs:XenosNumberValidator id="numVal1" requiredFieldError="" decimalPointCountError="" 
    	invalidCharError="Please enter a valid value for Rate" exceedsMaxError="9 digits are allowed before decimal point" negativeError="Please enter a valid value for Rate" separationError="" source="{price}" property="text" 
        allowNegative="false" domain="real" lowerThanMinError="" maxValue="999999999" minValue="" /-->
        
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    </mx:VBox>
	
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
	<mx:VBox width="100%" height="100%">
	<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
	<!--<containers:CollapsibleHDividedBox id="hdbox1" width="100%" height="100%" x="0" y="0" liveDragging="true" creationComplete="{}" paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" >-->
		
		<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
			<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
		
           	<mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
			<mx:Grid width="100%" borderThickness="0">
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.cashsecurity.label.referenceno')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="referenceNo" restrict="{Globals.INPUT_PATTERN}"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.securitydatefmto')}"  styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox width="100%">
                               <mx:DateField id="securityDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                               <mx:DateField id="securityDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>
                    </mx:GridItem> 
                    
                    
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:FundPopUpHbox id="fundPopUp"/>
                    </mx:GridItem>
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.cashsecurity.label.accountno')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:AccountPopUpHbox id="actPopUp" retContextItem="{returnContextItem}" recContextItem="{populateContext()}" />
                    </mx:GridItem> 
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.securitycode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:InstrumentPopUpHbox id="instPopUp"/>
                    </mx:GridItem> 
                </mx:GridRow>
        	</mx:Grid>
        	<flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" opened="false" width="100%">
                <mx:Grid width="100%" borderThickness="0">		
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.ledger')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="ledgerCode" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.bankcode')}" />
                        </mx:GridItem>                        
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:FinInstitutePopUpHbox id="custodianBank" recContextItem="{populateFinInstRole()}"/>
                        </mx:GridItem>
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.cashsecurity.label.innout')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="inOut" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.created_by')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:EmployeePopUpHbox id="entryBy"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.app_regi_date.from_to')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox width="100%">
                                   <mx:DateField id="appRegiDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                                   <mx:DateField id="appRegiDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                            </mx:HBox>
                        </mx:GridItem>
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.instrument.label.updatedby')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:EmployeePopUpHbox id="updateBy"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.instrument.label.updatedatefromto')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox width="100%">
                                   <mx:DateField id="updateDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                                   <mx:DateField id="updateDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                            </mx:HBox>
                        </mx:GridItem> 
                    </mx:GridRow>
                </mx:Grid>                
            </flexlib:WindowShade>

			<mx:HBox width="100%" styleName="ButtonBackPanel">
   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')) : (this.mode == 'amend' ? this.dispatchEvent(new Event('amendSubmit')) : this.dispatchEvent(new Event('cancelSubmit')))}" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('queryReset')) : (this.mode == 'amend' ? this.dispatchEvent(new Event('amendReset')) : this.dispatchEvent(new Event('cancelReset')))}" />
	        </mx:HBox>

		</mx:VBox>
		
		</mx:Canvas>
				
		<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >			
	         <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'query' ? 1 : 2}"/>
		
			<mx:DataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" headerRelease="dataGrid_headerRelease(event)"> 
			    <mx:columns>		    	   
			    	   <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{mode == 'query' ? new RendererFectory(ImgSummaryRenderer) : new RendererFectory(SecurityInOutAmendCancelRenderer,this.mode)}" />
			    	   
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.cashsecurity.label.referenceno')}" dataField="referenceNo" showDataTips="true" itemRenderer="com.nri.rui.cam.renderers.CamSecurityDetailRenderer" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}" dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.cashsecurity.label.accountno')}" dataField="accountPk"  labelFunction="getAccountNo" visible="true" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.securityinoutdate')}" dataField="securityInOutDisplayDate" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.securitycode')}" dataField="securityCode"  showDataTips="true" dataTipFunction="getSecurityCode" itemRenderer="com.nri.rui.core.renderers.InstrumentDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.securityname')}" dataField="instrumentName"  showDataTips="true" dataTipFunction="getSecurityName" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.qty')}" dataField="amountDisplayName" visible="false" sortCompareFunction="sortUtil.sortNumeric" />
	
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.custodianbankcode')}"  dataField="custodianBankCode" itemRenderer="com.nri.rui.core.renderers.FinancialInstitutionDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.custodianbankname')}"  dataField="custodianBankName" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" resizable="true"  headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.oursettleacno')}" dataField="ourSettleAccountPk"  labelFunction="getOurSettleAccNo" visible="false" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.label.created_by')}" dataField="createdBy" sortCompareFunction="sortUtil.sortString"/>
	                   <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.instrument.label.updatedby')}" dataField="updatedBy" sortCompareFunction="sortUtil.sortString"/>
		               <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.cashsecurity.label.status')}" dataField="status" itemRenderer="com.nri.rui.core.renderers.StatusRenderer" color="red" sortCompareFunction="sortUtil.sortString"/>
	           </mx:columns>
		 </mx:DataGrid>
		</mx:VBox>
	</mx:HDividedBox>
    </mx:VBox>
    
    </mx:Canvas>  
		 
</containers:XenosQueryModule>

