<?xml version="1.0" encoding="utf-8"?>

<!--Mxml file for Cam Movement Query Implementation -->

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off">

    <mx:Script>
        <![CDATA[
            import com.nri.rui.core.utils.XenosStringUtils;
            import mx.containers.TitleWindow;
            import mx.collections.ArrayCollection;
            import mx.events.CloseEvent;
            import mx.controls.dataGridClasses.DataGridColumn;
            import mx.controls.CheckBox;
            import mx.managers.PopUpManager;
            import mx.events.DataGridEvent;
            
            import com.nri.rui.core.controls.XenosAlert;
            
            private function changeCurrentState():void{
                currentState = "result";
                app.submitButtonInstance = null;
            }
            /**
             * Retrieve and return the Account Name for dataTip.
             */
            private function getAccountName(item:Object):String {
                return item.accountName;
            }

            /**
             * Extract the value of the colum cell removing the prefix added at '0'th index.
             */ 
            private function extractPrecisionedValue(item:Object, column:DataGridColumn):String{
                var strData:String = item[column.dataField];
                if(!XenosStringUtils.isBlank(strData) && strData.charAt(0)=="F"){
                    if(strData.length == 1)
                        return XenosStringUtils.EMPTY_STR;
                    else
                        return strData.substring(1);
                }else{
                    return item[column.dataField];                    
                }
            }
            private function selectFailStatusColor(item:Object, color:uint):uint {
				if(item.description == "CLOSING BALANCE"){
					return 0xFFCCFF;
				}
				return color;
			}
            /**
            * Retrieve and return the Instrument Name for dataTip.
            */
            private function getSecurityName(item:Object):String {
                return item.instrumentName;
            }
            /**
            * Retrieve and return the Security Code for dataTip.
            */
            private function getSecurityCode(item:Object):String {
                return item.securityId;
            }            
            			
            /**
 			*  datagrid header release event handler to handle datagridcolumn sorting
 			*/
			public function dataGrid_headerRelease(evt:DataGridEvent):void {				
				var dg:CustomDataGrid = CustomDataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];		
			}
          
       
        ]]>
    </mx:Script>
    
    <mx:Script source="actionscripts/CamMovementQuery.as"/>
   
    <mx:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </mx:states>
    <!-- Define Transition array with one Transition object.-->
    <mx:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>

    <cntrls:XenosHTTPService id="initializeMovementQuery" fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred.initialize') + event.fault.faultString)" 
             method="POST" useProxy="false" result="initPage(event)" showBusyCursor="true"/>    

    <cntrls:XenosHTTPService id="movementQueryRequest" 
         url="cam/camMovementQueryDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultString)"
         result="LoadSummaryPage(event)" showBusyCursor="true" resultFormat="xml">
    <!--    <mx:request>
            <method>submitQuery</method>
            <accountNo>{actPopUp.accountNo.text}</accountNo>
            <dateFrom>{dateFrom.text}</dateFrom>
            <dateTo>{dateTo.text}</dateTo>
            <accountFrom>{accountFrom.text}</accountFrom>
            <accountTo>{accountTo.text}</accountTo>      
            <movementBasis>{movementBasis.selectedItem.value}</movementBasis>
            <currency>{ccyBox.ccyText.text}</currency> 
            <securityCode>{instPopUp.instrumentId.text}</securityCode>            
            <instrumentType>{instrumentType.itemCombo.text}</instrumentType> 
            <form>{form.selectedItem.value}</form> 
            <accountBalanceType>{accountBalanceType.selectedItem.value}</accountBalanceType> 
            <appUpdDate>{appUpdDate.text}</appUpdDate>
            <fundCode>{fundPopUp.fundCode.text}</fundCode>
            <sortField1>{sortField1.selectedItem.value}</sortField1>
            <sortField2>{sortField2.selectedItem.value}</sortField2>
            <sortField3>{sortField3.selectedItem.value}</sortField3>
            <sortField4>{sortField4.selectedItem.value}</sortField4>                                    
        </mx:request>  -->
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="movementResetQueryRequest" url="cam/camMovementQueryDispatch.action?method=resetQuery"
        result="initPage(event)" showBusyCursor="true">
    </cntrls:XenosHTTPService>
    
    <mx:Validator source="{movementBasis}" required="true" property="value" />
    <mx:Validator source="{dateFrom}" required="true" property="text" />
    <mx:Validator source="{dateTo}" required="true" property="text" />
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;" />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
    
    <mx:VBox width="100%" height="100%">    
    <!--<containers:CollapsibleHDividedBox id="hdbox1" width="100%" height="100%" x="0" y="0" liveDragging="true" creationComplete="initPageStart()" paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" >-->
    <mx:HDividedBox id="hdbox1" styleName="Padding4" width="100%" height="100%" liveDragging="true" creationComplete="initPageStart()">
		<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
        <mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
            <mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />
            <!--flexlib:WindowShade id="ws1" tabChildren="{ws1.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.important.fields')}" width="100%" -->
                <mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                    	<mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.statementperiodfromto')}" styleName="ReqdLabel" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox width="100%">
                                   <mx:DateField id="dateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                                   <mx:DateField id="dateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                            </mx:HBox>
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.movementbasis')}" styleName="ReqdLabel" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="movementBasis" labelField="label" prompt="Select"/>
                        </mx:GridItem> 
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:FundPopUpHbox id="fundPopUp"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.fundaccountno')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="actPopUp" retContextItem="{returnContextItem}" recContextItem="{populateContext()}" />
                        </mx:GridItem> 
                    </mx:GridRow>
                </mx:Grid>                                               
            <!--/flexlib:WindowShade-->
            
            <!--flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" opened="false" width="100%"-->
            <flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" opened="false" width="100%">
                <mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.securitycode')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:InstrumentPopUpHbox id="instPopUp"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.securitytype')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <cntrls:TreeCombo id="instrumentType" dataSource="{new XML((app.cachedItems.instrumentTree).toString())}" editMode="true" displayClearIcon="true" labelField="label" treeHeight="200"  x="10" y="10">
                            </cntrls:TreeCombo>
                        </mx:GridItem> 
                    </mx:GridRow>
                    <mx:GridRow width="100%">                         
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.app_upd_date')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:DateField id="appUpdDate" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="" />
                        </mx:GridItem> 
                    </mx:GridRow>
                </mx:Grid>                
            </flexlib:WindowShade>
            
            <flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
                <mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                        <mx:GridItem width="100%" borderThickness="0">
                            <mx:HBox width="100%">
                                <mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"/>
                                <mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"/>
                                <mx:ComboBox id="sortField3" labelField="label"/>
                            </mx:HBox> 
                        </mx:GridItem>                         
                    </mx:GridRow>
                </mx:Grid>                
            </flexlib:WindowShade>
            
            <mx:HBox width="100%" styleName="ButtonBackPanel">            
                <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="this.submitQuery();" />
                <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle"  click="this.resetQuery();"/>                    
            </mx:HBox>
            
        </mx:VBox>
        </mx:Canvas>
        <mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >            
                             
	        <cntrls:QueryResultHeader id="qh" pdfFunction="generatePdf" xlsFunction="generateXls" printFunction="doPrint" previousFunction="doPrev" nextFunction="doNext" width="100%" />
	        <mx:Label textAlign="center" width="100%" fontWeight="bold" id="resultHead" text=""/>
	        <cntrls:CustomDataGrid id="movementSummary" width="100%" height="100%" dataProvider="{summaryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" rowColorFunction="selectFailStatusColor" headerRelease="dataGrid_headerRelease(event)">
	            <cntrls:columns> 
	               <!--mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('inf.title.summary.view')}" dataField="fundCode" minWidth="100" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" /-->           
	               <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.fundaccountno')}" dataField="accountPrefix"  showDataTips="true" dataTipFunction="getAccountName" itemRenderer="com.nri.rui.core.renderers.AccountDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.fundaccountname')}" dataField="accountName" visible="false" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}" dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundName')}" dataField="fundName" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.securitycode')}" dataField="securityId"  showDataTips="true" dataTipFunction="getSecurityCode" itemRenderer="com.nri.rui.core.renderers.InstrumentDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
	               <!-- mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.securitycodesymbol')}" dataField="securityId1"/ -->
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.securityname')}" dataField="instrumentName" showDataTips="true" dataTipFunction="getSecurityName" visible="true" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.security.label.alternatesecurity')}" dataField="alternateSecurity"  sortCompareFunction="sortUtil.sortString"/>	        
				   <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.refno')}" dataField="transactionRefNo" itemRenderer="com.nri.rui.cam.renderers.CamTransactionDetailRenderer" width="180" sortCompareFunction="sortUtil.sortString"/>
				   <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.basedate')}" dataField="baseDateDisp" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.tradedate')}"  dataField="tradeDateDisp" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.valuedate')}"  dataField="valueDateDisp" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.movementdescription')}" dataField="description" wordWrap="true" width="400" resizable="true" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.quantity')}" dataField="amountDisp" labelFunction="extractPrecisionedValue" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.price')}" dataField="formattedPrice" visible="false" labelFunction="extractPrecisionedValue" sortCompareFunction="sortUtil.sortString"/>                       
	               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.balance')}" dataField="balanceDisp" itemRenderer="com.nri.rui.core.renderers.NegativeNumberRenderer" labelFunction="extractPrecisionedValue" sortCompareFunction="sortUtil.sortString"/>
	               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.principalamount')}"  dataField="principalAmount" visible="false" labelFunction="extractPrecisionedValue" sortCompareFunction="sortUtil.sortString"/>
	               <!--<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.movementquery.label.form')}" dataField="form"/>
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.cashsecurity.label.accountbalancetype')}" dataField="accountBalanceTypeDesc"/>     -->
	            </cntrls:columns>
	         </cntrls:CustomDataGrid>            
        </mx:VBox>
    </mx:HDividedBox>
    
    </mx:VBox>
    
    </mx:Canvas> 
    
</mx:Module>
