<?xml version="1.0" encoding="utf-8"?>

<!--Mxml file for Cam Trader Pl Query Implementation -->

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" creationComplete="focusManager.setFocus(balanceType); ">


    <mx:Script>
        <![CDATA[
            import com.nri.rui.core.utils.XenosStringUtils;            
            import mx.collections.ArrayCollection;            
            import mx.controls.dataGridClasses.DataGridColumn;
            import com.nri.rui.core.controls.XenosAlert;
            import mx.events.DataGridEvent;
            
            private function changeCurrentState():void{
                currentState = "result";
                app.submitButtonInstance = null;
            }
            /**
             * Retrieve and return the Account Name for dataTip.
             */
            private function getAccountName(item:Object):String {
                return item.accountName;
            }            
            /**
             * Extract the value of the colum cell removing the prefix added at '0'th index.
             */ 
            private function extractPrecisionedValue(item:Object, column:DataGridColumn):String{
                var strData:String = item[column.dataField];
                if(!XenosStringUtils.isBlank(strData) && strData.charAt(0)=="F"){
                    if(strData.length == 1)
                        return XenosStringUtils.EMPTY_STR;
                    else
                        return strData.substring(1);
                }else{
                    return item[column.dataField];                    
                }
            }
            
            /**
             *  datagrid header release event handler to handle datagridcolumn sorting
             */
            public function dataGrid_headerRelease(evt:DataGridEvent):void {                
                var dg:DataGrid = DataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];        
            }
        ]]>
    </mx:Script>
    
    <mx:Script source="actionscripts/CamTraderPlQuery.as"/>
   
    <mx:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>            
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>            
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </mx:states>
    <!-- Define Transition array with one Transition object.-->
    <mx:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>                
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>

    <cntrls:XenosHTTPService id="initializeTraderPlQuery" fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred.initialize') + event.fault.faultString)" 
             method="POST" useProxy="false" result="initPage(event)" showBusyCursor="true"/>    

    <cntrls:XenosHTTPService id="traderPlQueryRequest" 
         url="cam/traderPlQueryDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultString)"
         result="LoadSummaryPage(event)" showBusyCursor="true" resultFormat="xml">    
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="traderPlResetQueryRequest" url="cam/traderPlQueryDispatch.action?method=resetQuery"
        result="initPage(event)" showBusyCursor="true">
    </cntrls:XenosHTTPService>
    
    <mx:Validator source="{balanceType}" required="true" property="value" />    
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0">    
        <mx:HBox width="100%" styleName="ExCoBgPanel">
            <mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;" />        
            <mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
            <mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>        
        </mx:HBox>
        <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
    
    <mx:VBox width="100%" height="100%">
            
    <mx:HDividedBox id="hdbox1" styleName="Padding4" width="100%" height="100%" liveDragging="true" creationComplete="initPageStart()">
        <mx:VBox label="Query Criteria" width="100%" height="100%" id="qry" styleName="HDivideStyle" >
            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
            <mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />            
            <mx:Grid width="100%" borderThickness="0">
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.balancetype')}" styleName="ReqdLabel" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:ComboBox id="balanceType" labelField="label"/>
                    </mx:GridItem>
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:FundPopUpHbox id="fundPopUp"/>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">                         
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.trederpl.label.accountno')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:AccountPopUpHbox id="actPopUp" retContextItem="{returnContextItem}" recContextItem="{populateContext()}" />
                    </mx:GridItem>
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.securitycode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:InstrumentPopUpHbox id="instPopUp"/>
                    </mx:GridItem>  
                </mx:GridRow>
            </mx:Grid>
            <flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" opened="false" width="100%">
                <mx:Grid width="100%" borderThickness="0">                    
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.issueccy')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <cntrls:CurrencyHBox id="issueCcyBox"/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="" />
                        </mx:GridItem> 
                    </mx:GridRow>
                </mx:Grid>                
            </flexlib:WindowShade>
            
            <mx:HBox width="100%" styleName="ButtonBackPanel">            
                <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="this.submitQuery();" />
                <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle"  click="this.resetQuery();"/>                    
            </mx:HBox>
            
        </mx:VBox>
        
        <mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >
            <cntrls:QueryResultHeader id="qh" pdfFunction="generatePdf" xlsFunction="generateXls" printFunction="doPrint" previousFunction="doPrev" nextFunction="doNext" width="100%" />
            <mx:Label textAlign="center" width="100%" fontWeight="bold" id="resultHead" text=""/>
            <mx:DataGrid id="traderPlSummary" width="100%" height="100%" dataProvider="{summaryResult}" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()">
                <mx:columns>                   
                   <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" sortable="false"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.trederpl.label.accountno')}" dataField="accountNoDisp"  showDataTips="true" dataTipFunction="getAccountName" itemRenderer="com.nri.rui.core.renderers.AccountDetailsRenderer" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.trederpl.label.accountname')}" dataField="accountName" visible="false" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}" dataField="fundCode" textAlign="left" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.securitycodedefault')}" dataField="securityId" showDataTips="true" itemRenderer="com.nri.rui.core.renderers.InstrumentDetailsRenderer" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.securitname')}" dataField="securityName" showDataTips="true"  sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.securitycodealt')}" dataField="alternateSecurityId" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.price')}" dataField="formattedMarketPrice" textAlign="right" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.pricedate')}" dataField="priceDateDisp" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.pricetype')}" dataField="priceType" visible="false" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.datasource')}" dataField="dataSource" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.position')}" dataField="formattedQuantity" textAlign="right" itemRenderer="com.nri.rui.core.renderers.NegativeNumberRenderer" headerRenderer="com.nri.rui.core.renderers.SortImg" sortCompareFunction="numaricCompareFunc" sortable="true"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.issueccy')}" dataField="currency" sortable="true" sortCompareFunction="sortUtil.sortString"/>
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.cost')}" dataField="costForDisplay" textAlign="right" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.traderpl')}" dataField="traderPlFormattedAmount" textAlign="right" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.todayunrealizedpl')}" dataField="formattedUnrealizedPl" textAlign="right" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.predayunrealizedpl')}" dataField="formattedPreviousUnrealizedPl" textAlign="right" visible="false" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.predayprice')}" dataField="preDayPriceDisplay" textAlign="right" visible="false" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.realizedpl')}" dataField="formattedProfitLoss" textAlign="right" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.adjustment')}" dataField="adjustmentForDisplay" textAlign="right" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.ltdbeforeadjustment')}" dataField="beforeAdjustmentForDisplay" textAlign="right" visible="false" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />
                   <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cam.traderpl.label.ltdafteradjustment')}" dataField="afterAdjustmentForDisplay" textAlign="right" visible="false" labelFunction="extractPrecisionedValue" sortable="true" sortCompareFunction="sortUtil.sortNumeric" />            
                </mx:columns>
             </mx:DataGrid>            
        </mx:VBox>
    </mx:HDividedBox>
    
    </mx:VBox>
    
    </mx:Canvas> 
    
</mx:Module>

