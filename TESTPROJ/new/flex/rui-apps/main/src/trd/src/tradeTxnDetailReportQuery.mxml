<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:valdtrs="com.nri.rui.core.validators.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
    <mx:Script>
        <![CDATA[
            import com.nri.rui.core.RendererFectory;
            import com.nri.rui.core.renderers.ImgSummaryRenderer;
            import mx.core.Application;
            
                
    /**
     * This method should be called on creationComplete of the datagrid 
     */ 
     private function bindDataGrid():void {
        qh.dgrid = resultSummary;
    }
        ]]>
    </mx:Script>
    
    <mx:Script source="actionscripts/tradeTxnDetailReportQuery.as"/>
    
     <containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State> 
    </containers:states>

    <!-- Define Transition array with one Transition object.-->

    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    
    <frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
    
       
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
        <mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />       
        <mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
        <mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres';app.submitButtonInstance = submit;"/>      
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
    <mx:VBox width="100%" height="100%">
    <mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
    <!--<containers:CollapsibleHDividedBox id="hdbox1" width="100%" height="100%" x="0" y="0" liveDragging="true" creationComplete="{}" paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" >-->
        
        <mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
        <mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('core.query.criteria')}" width="100%" height="100%" styleName="HDivideStyle" >
            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.querycriteria')}" fontWeight="bold"/>
            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
        
            <!--<flexlib:WindowShade id="ws1" tabChildren="{ws1.opened=false}" styleName="linkButtonWindowShade" label="Optional Fields - Group 1" width="100%">-->
            <mx:Grid width="100%" borderThickness="0">
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.fundcode')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:FundPopUpHbox id="fundPopUp" />
                    </mx:GridItem>
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.securitycode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:InstrumentPopUpHbox id="instPopUp"/>                         
                    </mx:GridItem>                     
                </mx:GridRow>                       
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.fundaccountno')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:AccountPopUpHbox id="actPopUp" retContextItem="{returnContextItem}" recContextItem="{populateContext()}" />
                    </mx:GridItem>                       
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.tradedatedateformto')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox>
                            <mx:DateField id="tradeDateFromStr"  formatString="YYYYMMDD" editable="true" width="90"/>
                            <mx:DateField id="tradeDateToStr" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>                         
                    </mx:GridItem>                
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.buysell')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:ComboBox id="buysellflagList" labelField="label" prompt="Select">
                        </mx:ComboBox>
                    </mx:GridItem>                       
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.brokercode')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:FinInstitutePopUpHbox id="finInstPopUp" recContextItem="{populateFinInstRole()}" />
                    </mx:GridItem>               
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.executionmarket')}" />
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <cntrls:TreeCombo id="executionMarket" dataSource="{new XML((app.cachedItems.marketTree).toString())}" editMode="true" width="153"  displayClearIcon="true"  labelField="label" treeHeight="200"  x="10" y="10"/>
                    </mx:GridItem>                       
                </mx:GridRow>
                
            </mx:Grid>
    
            <!-- Sort Order -->
            <flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
                <mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                        <mx:GridItem width="100%" borderThickness="0">
                            <mx:HBox width="100%">
                                <mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()" width="200" itemRenderer="mx.controls.Label"></mx:ComboBox>
                                <mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()" width="200" itemRenderer="mx.controls.Label"> </mx:ComboBox>
                                <mx:ComboBox id="sortField3" labelField="label" width="200" itemRenderer="mx.controls.Label"> </mx:ComboBox>
                            </mx:HBox> 
                        </mx:GridItem>                         
                    </mx:GridRow>
                </mx:Grid>
            </flexlib:WindowShade>

            <mx:HBox width="100%" styleName="ButtonBackPanel">
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.dispatchEvent(new Event('querySubmit'))}" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.dispatchEvent(new Event('queryReset'))}" />
            </mx:HBox>

        </mx:VBox>
        
        </mx:Canvas>
                
        <mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >          
             <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{1}" />
        
        <cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()"> 
            <cntrls:columns>                   
                   <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{new RendererFectory(ImgSummaryRenderer)}" />
                    
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.referenceno')}" dataField="referenceNo" itemRenderer="com.nri.rui.trd.renderers.TradeDetailRenderer"/>
                    <!--
                    <mx:DataGridColumn visible="false" headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.fundcode')}"     dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" />
                    <mx:DataGridColumn visible="false" headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.fundname')}"     dataField="fundName" />
                    <mx:DataGridColumn visible="false" headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.fundaccountno')}" dataField="fundAccountNo" itemRenderer="com.nri.rui.core.renderers.AccountDetailsRenderer" />  
                    <mx:DataGridColumn visible="false" headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.fundaccountname')}" dataField="fundAccountName" /> 
                    -->
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.tradedate')}"    dataField="tradeDateStr" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.valuedate')}"    dataField="valueDateStr" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.securitycode')}" dataField="securityId"  itemRenderer="com.nri.rui.core.renderers.InstrumentDetailsRenderer" /> 
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.isinsecuritycode')}" dataField="isinSecurity"/> 
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.symbolsecuritycode')}" dataField="symbolSecurity"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.securityname')}" dataField="securityName" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.country')}" dataField="countryCode"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.buysell')}" dataField="buySellLabel" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.quantity')}" textAlign="right" dataField="quantityStr" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.executionprice')}" textAlign="right" dataField="executionPriceStr" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.principalamount')}" textAlign="right" dataField="principalAmountStr"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.localtax')}" textAlign="right" dataField="localTaxStr"/>
                  	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.localtax02')}" textAlign="right" dataField="localTax02Str"/>
	                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.commission')}" textAlign="right" dataField="commissionStr"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.otherfee')}" textAlign="right" dataField="otherFeeStr"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.currency')}" dataField="ccyCode"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.netamount')}" textAlign="right" dataField="netAmountStr"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.brokeraccount')}" dataField="brokerAccount"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.brokeraccountname')}" dataField="brokerAccountName"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.brokerbic')}" dataField="brokerBic"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.settlacc')}" dataField="settlAccount" visible="false"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.securityCpbank')}" dataField="cpBank"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.securityCpbankName')}" dataField="cpBankName"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.pset')}" dataField="pset"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.participantid')}" dataField="participantId"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.accruedinterestamount')}" textAlign="right" dataField="accruedInterestAmountStr"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.accrueddays')}"    textAlign="right" dataField="accruedDaysStr" />
                    <!--
                    <mx:DataGridColumn visible="false" headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.market')}" width="100" dataField="market" />
                    <mx:DataGridColumn visible="false" headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.brokercode')}" dataField="brokerCode" itemRenderer="com.nri.rui.core.renderers.FinancialInstitutionDetailsRenderer" />  
                    <mx:DataGridColumn visible="false" headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.brokername')}" dataField="brokerName" />  
                    
                    <mx:DataGridColumn visible="false" headerText="{this.parentApplication.xResourceManager.getKeyValue('trd.tradetxndetailquery.label.source')}" dataField="source" />
                    -->
           </cntrls:columns>
         </cntrls:CustomDataGrid>
        </mx:VBox>
    </mx:HDividedBox>
    </mx:VBox>
    
    </mx:Canvas>  
         
</containers:XenosQueryModule>
