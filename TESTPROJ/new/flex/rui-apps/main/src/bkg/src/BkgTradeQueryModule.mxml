<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" 
							xmlns:containers="com.nri.rui.core.containers.*" 
							xmlns:flexlib="http://code.google.com/p/flexlib/" 
							xmlns:cntrls="com.nri.rui.core.controls.*" 
							xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" 
							xmlns:frmtrs="com.nri.rui.core.formatters.*"
							xmlns:valdtrs="com.nri.rui.core.validators.*"
							layout="vertical" 
							percentWidth="100" 
							percentHeight ="100" 
							horizontalScrollPolicy="off" 
							verticalScrollPolicy="off" >
	<mx:Script>
		<![CDATA[
			import mx.controls.DataGrid;
			import com.nri.rui.bkg.renderers.BkgTradeAmendCancelRenderer;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.ref.renderers.MarketAmendQueryRenderer;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import mx.containers.TitleWindow;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.CheckBox;
			import mx.managers.PopUpManager;
			
			import com.nri.rui.core.controls.XenosAlert;
			import mx.events.DataGridEvent;
						
			[Embed(source="../../assets/img/inf/addcolunm.png")]
			    
		    
			[Bindable]
			private var icoColumns:Class;
            public static var popupColumns:TitleWindow = null;
            public var gridColumns:ArrayCollection = new ArrayCollection();
			private function changeCurrentState():void{
				currentState = "result";
				app.submitButtonInstance = null;
			}
			/**
            * Retrieve and return the Fund Account Number.
            */
            private function getFundAccNo(item:Object, column : DataGridColumn):String {
                return item.fundAccNo;
            }
            /**
            * Retrieve and return the Counter Party Account Number.
            */
            private function getCpAccNo(item:Object, column : DataGridColumn):String {
                return item.cpAccountNo;
            }
            
            /**
 			*  datagrid header release event handler to handle datagridcolumn sorting
 			*/
			public function dataGrid_headerRelease(evt:DataGridEvent):void {				
				var dg:DataGrid = DataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];		
			}
			
			/**
			 * This method should be called on creationComplete of the datagrid 
			 */ 
			 private function bindDataGrid():void {
				qh.dgrid = resultSummary;
			}
			
		]]>
	</mx:Script>
	<mx:Script source="actionscripts/BkgTradeQueryModule.as"/>

     <containers:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    <frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
	<valdtrs:XenosNumberValidator id="numVal1" requiredFieldError="" decimalPointCountError="" 
    	invalidCharError="" exceedsMaxError="" negativeError="" separationError="" source="{principalAmtFrom}" property="text" 
        allowNegative="true" domain="real" lowerThanMinError="" />
    <valdtrs:XenosNumberValidator id="numVal2" requiredFieldError="" decimalPointCountError="" 
    	invalidCharError="" exceedsMaxError="" negativeError="" separationError="" source="{principalAmtTo}" property="text" 
        allowNegative="true" domain="real" lowerThanMinError="" />
 	<valdtrs:XenosNumberValidator id="numVal3" requiredFieldError="" decimalPointCountError="" 
    	invalidCharError="" exceedsMaxError="" negativeError="" separationError="" source="{netAmtFrom}" property="text" 
        allowNegative="true" domain="real" lowerThanMinError="" />
    <valdtrs:XenosNumberValidator id="numVal4" requiredFieldError="" decimalPointCountError="" 
    	invalidCharError="" exceedsMaxError="" negativeError="" separationError="" source="{netAmtTo}" property="text" 
        allowNegative="true" domain="real" lowerThanMinError="" />
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="{this.parentApplication.xResourceManager.getKeyValue('bkg.tooltip.query')}" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="{this.parentApplication.xResourceManager.getKeyValue('bkg.tooltip.result')}" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="{this.parentApplication.xResourceManager.getKeyValue('bkg.tooltip.qryrslt')}" buttonMode="true" click="currentState='qryres';app.submitButtonInstance = submit;"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
	
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
	<mx:VBox width="100%" height="100%">
	<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
		
		<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<mx:VBox label="Query Criteria" width="100%" height="100%" styleName="HDivideStyle" >
			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
			<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>

			<mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.fundcode')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:FundPopUpHbox id="fundPopUp"/>                            
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.inventoryaccountno')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:AccountPopUpHbox id="fundAccountPopup" retContextItem="{returnContextItem}" recContextItem="{populateInvActContext()}"/>
                        </mx:GridItem> 
                    </mx:GridRow>	
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.tradetype')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="tradeType" prompt="Select" width="160"/>                           
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.cpcode')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox id="counterpartyCodeBox" width="100%">
								<mx:ComboBox id="counterPartyCode" width="30%" labelField="label" prompt="Select" itemRenderer="mx.controls.Label" change="onChangeCounterpartyCode()"/>
							</mx:HBox>
                        </mx:GridItem> 
                    </mx:GridRow>
               	 	<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.referenceno')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:TextInput id="referenceNo" restrict="{Globals.INPUT_PATTERN}"/>                           
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.status')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:ComboBox id="statusCombo" prompt="Select" labelField="label" width="160" itemRenderer="mx.controls.Label"/>
                            <mx:TextInput id="statusTxt" editable="false" includeInLayout="false" visible="false"/>
                        </mx:GridItem> 
                    </mx:GridRow>
                	<mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.currencycode')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <cntrls:CurrencyHBox id="currencyCode"/>                          
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.tradedatefromto')}" />
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox>
                       			<mx:DateField id="tradeDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                       			<mx:DateField id="tradeDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
            				</mx:HBox>
                        </mx:GridItem> 
                    </mx:GridRow>
	                <mx:GridRow width="100%">
	                        <mx:GridItem width="20%" borderThickness="0">
	                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.startdate')}" />
	                        </mx:GridItem>
	                        <mx:GridItem width="30%" borderThickness="0">
	                            <mx:HBox>
	                       			<mx:DateField id="startDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
	                       			<mx:DateField id="startDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
	            				</mx:HBox>                          
	                        </mx:GridItem>
	                        <mx:GridItem width="20%" borderThickness="0">
	                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.maturitydateFromTo')}" />
	                        </mx:GridItem>
	                        <mx:GridItem width="30%" borderThickness="0">
	                            <mx:HBox>
	                       			<mx:DateField id="maturityDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
	                       			<mx:DateField id="maturityDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
	            				</mx:HBox>
	                        </mx:GridItem> 
	                    </mx:GridRow>
	                </mx:Grid>
	                
	                <flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" width="100%" opened="false">
						<mx:Grid width="100%" borderThickness="0">
							<mx:GridRow width="100%">
			                        <mx:GridItem width="20%" borderThickness="0">
			                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.principalamount')}" />
			                        </mx:GridItem>
			                        <mx:GridItem width="30%" borderThickness="0">
			                            <mx:HBox>
			                       			<mx:TextInput id="principalAmtFrom" width="100" focusOut="numberHandler(numVal1)"/>
			                       			<mx:TextInput id="principalAmtTo" width="100" focusOut="numberHandler(numVal2)"/>
			            				</mx:HBox>                         
			                        </mx:GridItem>
			                        <mx:GridItem width="20%" borderThickness="0">
			                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.netamount')}" />
			                        </mx:GridItem>
			                        <mx:GridItem width="30%" borderThickness="0">
			                            <mx:HBox>
			                       			<mx:TextInput id="netAmtFrom" width="100" focusOut="numberHandler(numVal3)"/>
			                       			<mx:TextInput id="netAmtTo" width="100" focusOut="numberHandler(numVal4)"/>
			            				</mx:HBox>
			                        </mx:GridItem> 
			                    </mx:GridRow>
		                
								<mx:GridRow width="100%">
			                        <mx:GridItem width="20%" borderThickness="0">
			                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.outstanding')}" />
			                        </mx:GridItem>
			                        <mx:GridItem width="30%" borderThickness="0">
			                             <mx:ComboBox id="outStand" labelField="label" prompt="Select" width="160" itemRenderer="mx.controls.Label"/>                        
			                        </mx:GridItem>
			                        <mx:GridItem width="20%" borderThickness="0">
			                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.cancelrefno')}" />
			                        </mx:GridItem>
			                        <mx:GridItem width="30%" borderThickness="0">
			                            <mx:TextInput id="cancelReferenceNo" width="100" restrict="{Globals.INPUT_PATTERN}"/>
			                        </mx:GridItem> 
			                    </mx:GridRow>		 	
					 			<mx:GridRow width="100%">
			                        <mx:GridItem width="20%" borderThickness="0">
			                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.counterpartyaccountno')}" />
			                        </mx:GridItem>
			                        <mx:GridItem width="30%" borderThickness="0">
			                            <xenospopup:AccountPopUpHbox id="accountNo" retContextItem="{returnContextItem}" recContextItem="{populateActContext()}"/>
			                        </mx:GridItem> 
			                        <mx:GridItem width="20%" borderThickness="0"/>
			                        <mx:GridItem width="30%" borderThickness="0"/>
			                    </mx:GridRow>
			            </mx:Grid>   
					</flexlib:WindowShade>
					
					<flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="Sort Order Fields" opened="true" width="100%">
						<mx:Grid width="100%" borderThickness="0">
							<mx:GridRow width="100%">
								<mx:GridItem width="100%" borderThickness="0">
									<mx:HBox width="100%">
										<mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"></mx:ComboBox>
										<mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"> </mx:ComboBox>
										<mx:ComboBox id="sortField3" labelField="label"> </mx:ComboBox>
									</mx:HBox>						
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</flexlib:WindowShade>

			<mx:HBox width="100%" styleName="ButtonBackPanel">
   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')) : (this.mode == 'amend' ? this.dispatchEvent(new Event('amendSubmit')) : this.dispatchEvent(new Event('cancelSubmit')))}" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('queryReset')) : (this.mode == 'amend' ? this.dispatchEvent(new Event('amendReset')) : this.dispatchEvent(new Event('cancelReset')))}" />
	        </mx:HBox>

		</mx:VBox>
		
		</mx:Canvas>
				
		<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >			
	         <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'query' ? 1 : 2}"/>
		<cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" headerRelease="dataGrid_headerRelease(event)" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()"> 
		    <cntrls:columns>		    	   
		    	   <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{mode == 'query' ? new RendererFectory(ImgSummaryRenderer) : new RendererFectory(BkgTradeAmendCancelRenderer,mode)}" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.fundcode')}" dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.fundname')}" dataField="fundName" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.inventoryaccountno')}" dataField="fundAccountPk" labelFunction="getFundAccNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.fundaccountname')}" dataField="fundAccName" visible="false" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.counterpartyaccountno')}" dataField="cpAccountPk" labelFunction="getCpAccNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.counterpartyaccountname')}" dataField="cpAccountName" visible="false"  sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.tradingccy')}" dataField="tradingCcy" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.tradedate')}" dataField="tradeDateStr" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.startdate')}" dataField="startDateStr" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.maturitydate')}" dataField="maturityDateStr" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.principalamountview')}" dataField="principalAmountStr" sortCompareFunction="sortUtil.sortNumeric" />
	               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.netamountview')}" dataField="netAmountStr" sortCompareFunction="sortUtil.sortNumeric" />
	               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.interestrate')}" dataField="interestRateStr" visible="false" sortCompareFunction="sortUtil.sortNumeric" />
	               <mx:DataGridColumn textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.interestamount')}" dataField="interestAmountStr" visible="false" sortCompareFunction="sortUtil.sortNumeric" />
	               <mx:DataGridColumn textAlign="left" width="150" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.referenceno')}" dataField="referenceNo" itemRenderer="com.nri.rui.bkg.renderers.BkgTrdDetailRenderer" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.tradetype')}"  dataField="tradeType" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.maturitystatus')}" dataField="maturityStatus" sortCompareFunction="sortUtil.sortString" />
	               <mx:DataGridColumn textAlign="left" headerText="{this.parentApplication.xResourceManager.getKeyValue('bkg.label.status')}" dataField="status" itemRenderer="com.nri.rui.core.renderers.StatusRenderer" visible="true" sortCompareFunction="sortUtil.sortString" />
           </cntrls:columns>
		 </cntrls:CustomDataGrid>
		</mx:VBox>
	</mx:HDividedBox>
    </mx:VBox>
    
    </mx:Canvas>  
		 
</containers:XenosQueryModule>
