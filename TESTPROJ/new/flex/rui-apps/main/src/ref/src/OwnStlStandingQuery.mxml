<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:containers="com.nri.rui.core.containers.*" 
    xmlns:flexlib="http://code.google.com/p/flexlib/" 
    xmlns:cntrls="com.nri.rui.core.controls.*" 
    xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" 
    layout="vertical" 
    percentWidth="100" 
    percentHeight ="100" 
    horizontalScrollPolicy="off" 
    verticalScrollPolicy="off">
    
    <mx:Script>
        <![CDATA[
            import com.nri.rui.ref.renderers.OwnStlStandingAmendCancelRenderer;
            import com.nri.rui.ref.renderers.OwnStlStandingDetailRenderer;
            import com.nri.rui.core.RendererFectory;
            import mx.controls.DataGrid;
            import mx.events.DataGridEvent;
            import com.nri.rui.core.utils.HiddenObject;
            import mx.collections.ArrayCollection;
            import com.nri.rui.core.controls.XenosAlert;
            import mx.resources.ResourceBundle;
            import mx.events.ResourceEvent;
            import mx.core.Application;
            
          /**
             * This method should be called on creationComplete of the datagrid 
             */ 
                private function bindDataGrid():void {
                qh.dgrid = resultSummary;
            }  
             
           
            /**
            *  datagrid header release event handler to handle datagridcolumn sorting
            */
             public function dataGrid_headerRelease(evt:DataGridEvent):void {               
                var dg:DataGrid = DataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];           
            } 
        ]]>
    </mx:Script>
    
    
    <mx:Script source="actionscripts/OwnStlStandingQuery.as"/>
    
     <containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{mode == 'add' ? add :null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
        <mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />       
        <mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
        <mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres';app.submitButtonInstance = submit;"/>      
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
    <mx:VBox width="100%" height="100%">
    <mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
    <!--<containers:CollapsibleHDividedBox id="hdbox1" width="100%" height="100%" x="0" y="0" liveDragging="true" creationComplete="{}" paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" >-->
        
        <mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
        <mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('core.query.criteria')}" width="100%" height="100%" styleName="HDivideStyle" >
            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.ownssirule.label.querycriteria')}" fontWeight="bold"/>
            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
        
            <!--<flexlib:WindowShade id="ws1" tabChildren="{ws1.opened=false}" styleName="linkButtonWindowShade" label="Optional Fields - Group 1" width="100%">-->
                            <mx:Grid width="100%" borderThickness="0">
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <xenospopup:FundPopUpHbox id="fundPopUp"/>
                                </mx:GridItem> 
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundAccount')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <xenospopup:AccountPopUpHbox id="invActPopUp" retContextItem="{returnContextItem}" recContextItem="{populateInvActContext()}" />
                                </mx:GridItem> 
                            </mx:GridRow>
                            
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.settlementFor')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:ComboBox id="settlementForList" labelField="label" prompt="Select"/>
                                </mx:GridItem> 
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.stlacctforfund.label.cashorsecurity')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:ComboBox id="cashSecurityList" labelField="label" prompt="Select"/>
                                </mx:GridItem>
                            </mx:GridRow>
                            
                            
                            
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.instrumenttype')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <cntrls:TreeCombo id="instrumentType" dataSource="{new XML((app.cachedItems.instrumentTree).toString())}" editMode="true" displayClearIcon="true" labelField="label" treeHeight="200"  x="10" y="10">
                       </cntrls:TreeCombo>
                                </mx:GridItem> 
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settlementccy')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                     <cntrls:CurrencyHBox id="stlCcyBox"/>
                                </mx:GridItem>
                            </mx:GridRow>
                            
                            <mx:GridRow width="100%">
                                 <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.instrumentcode')}"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <xenospopup:InstrumentPopUpHbox id="securityCode"/>
                        </mx:GridItem>  
                                <mx:GridItem width="20%" borderThickness="0">
                                <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.marketPrice.label.market')}"/>
                            </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <cntrls:TreeCombo id="market" dataSource="{new XML((app.cachedItems.marketTree).toString())}" editMode="true" width="153"  displayClearIcon="true"  labelField="label" treeHeight="200"  x="10" y="10"/> 
                        </mx:GridItem>  
                            </mx:GridRow>
                            
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settlementbank')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                     <xenospopup:FinInstitutePopUpHbox id="settlemetBank"/>
                                </mx:GridItem> 
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settleac')}"/>
                                </mx:GridItem>
                                 <mx:GridItem width="30%" borderThickness="0">
                                    <xenospopup:AccountPopUpHbox id="settlementAcc" retContextItem="{returnContextItem}" recContextItem="{populateConterPartyActContext()}" />
                                </mx:GridItem> 
                            </mx:GridRow>
                            
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartycode')}"/>
                                </mx:GridItem>
                                                    
                                <mx:GridItem width="30%" borderThickness="0">
                            <mx:HBox id="counterpartyCodeBox" width="100%">
                            <mx:ComboBox id="counterpartyCode" width="30%" labelField="label" change="onChangeCounterPartyType()"/>
                            </mx:HBox>
                        </mx:GridItem>  
                                            
                        
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartyAccount')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <xenospopup:AccountPopUpHbox id="cpAccount" retContextItem="{returnContextItem}" recContextItem="{populateConterPartyActContext()}" />
                                </mx:GridItem> 
                            </mx:GridRow>
                            
                            
                            <mx:GridRow width="100%">
                                <mx:GridItem width="20%" borderThickness="0">
                                    <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.instrument.label.status')}"/>
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    <mx:ComboBox id="statusValues" labelField="label" prompt="Select"/>
                                </mx:GridItem> 
                                
                                 <mx:GridItem width="20%" borderThickness="0">
                                   
                                </mx:GridItem>
                                <mx:GridItem width="30%" borderThickness="0">
                                    
                                </mx:GridItem>
                            </mx:GridRow>
                        </mx:Grid>                
                    
                    <flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
                        <mx:Grid width="100%" borderThickness="0">
                            <mx:GridRow width="100%">
                                <mx:GridItem width="100%" borderThickness="0">
                                    <mx:HBox width="100%">
                                        <mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"/> 
                                        <mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"/>
                                        <mx:ComboBox id="sortField3" labelField="label"/>
                                    </mx:HBox> 
                                </mx:GridItem>                         
                            </mx:GridRow>
                        </mx:Grid>                 
                    </flexlib:WindowShade>

            <mx:HBox width="100%" styleName="ButtonBackPanel">
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')) : (this.mode == 'add' ? this.dispatchEvent(new Event('amendSubmit')) : this.dispatchEvent(new Event('cancelSubmit')))}" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('queryReset')) : (this.mode == 'add' ? this.dispatchEvent(new Event('amendReset')) : this.dispatchEvent(new Event('cancelReset')))}" />
            </mx:HBox>

        </mx:VBox>
        
        </mx:Canvas>
        <mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >          
            <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'query' ? 1 : 2}"/> 
            <cntrls:CustomDataGrid id="resultSummary" dataProvider="{this.queryResult}" width="100%" height="100%"  sortableColumns="true" variableRowHeight="true" headerRelease="dataGrid_headerRelease(event)" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()"> 
               <cntrls:columns>   
                  <mx:DataGridColumn headerText="" width="60" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{mode == 'query' ? new RendererFectory(OwnStlStandingDetailRenderer) : new RendererFectory(OwnStlStandingAmendCancelRenderer,mode)}" />               
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.settlementFor')}" dataField="settlementFor" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.stlacctforfund.label.cashorsecurity')}" dataField="cashSecurityFlag" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.marketPrice.label.market')}" dataField="marketCode" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.instrumenttype')}" dataField="instrumentType" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.instrumentcode')}" dataField="instrumentCodeStr" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.instrumentname')}" dataField="securityName" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.alternate.instrumentcode')}" dataField="alternateSecurityCode" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.label.ccy')}" dataField="ccy" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartyAccount')}" dataField="cpTradingAccount" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartycode')}" dataField="counterpartyCode" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}" dataField="fundCode" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundName')}" dataField="fundName" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundAccount')}" dataField="inventoryAccount" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.label.ourbank')}" dataField="ourBank" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.label.own.stl.account')}" dataField="ourSettleAccount" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.status')}" dataField="status" textAlign="left" sortCompareFunction="sortUtil.sortString" itemRenderer="com.nri.rui.core.renderers.StatusRenderer"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.label.settlement.mode')}" dataField="settlementMode" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.priority')}" dataField="priority" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.label.inx.reqd')}" dataField="inxReqdExp" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.cpaccountname')}" visible="false" dataField="cpAccountName" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.cpcodename')}" dataField="brokerName" visible="false" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundaccountname')}" visible="false" dataField="inventoryAccountName" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.ownbankname')}" visible="false" dataField="ourBankName" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.ownsettleacname')}" visible="false" dataField="settleAccountName" textAlign="left" sortCompareFunction="sortUtil.sortString" />
                    
                    
               </cntrls:columns>
         </cntrls:CustomDataGrid>
         <cntrls:XenosButton  label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.add')}" id="add" styleName="BtnStyle" includeInLayout="{mode == 'add' ?true :false }"  visible="{add.includeInLayout}"  click="openAddEntryPopUp()"   />
        </mx:VBox>
           

    </mx:HDividedBox>
    </mx:VBox>
    </mx:Canvas>  
</containers:XenosQueryModule>
