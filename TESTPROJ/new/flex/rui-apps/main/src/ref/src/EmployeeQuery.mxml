<?xml version="1.0" encoding="utf-8"?>

<!--Mxml file for EmployeeQuery Implementation -->
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
<mx:Script>
		<![CDATA[
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.ref.renderers.EmployeeAmendQueryRenderer;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import mx.core.Application;
			  /**
	 * This method should be called on creationComplete of the datagrid 
	 */ 
	 private function bindDataGrid():void {
		qh.dgrid = resultSummary;
	}
		]]>
	</mx:Script>
	<mx:Script source="actionscripts/EmployeeQuery.as"/>
			
    <containers:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State> 
    </containers:states>	
    
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    
     <cntrls:XenosHTTPService id="initializeApplicationRoles" 
    	fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))" 
        useProxy="false" result="populateApplicationRoles(event)" showBusyCursor="true"/>	
    
    
	<mx:VBox width="100%" verticalGap="0" horizontalGap="0">
	    <mx:HBox width="100%" styleName="ExCoBgPanel">
	    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;" />    	
	    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
	    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
	    </mx:HBox>
	    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
	</mx:VBox>
	

	<mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		
		<mx:VBox width="100%" height="100%">
			<!--mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="initPageStart()" -->
			<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
				
				<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
				<mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('core.query.criteria')}" width="100%" height="100%" styleName="HDivideStyle">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
					<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
					<mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />
					
					<mx:Grid width="100%" borderThickness="0">
							
							<mx:GridRow width="100%">
								<mx:GridItem width="20%" borderThickness="0">
                            		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.office.default')}" styleName="ReqdLabel"/>
                        		</mx:GridItem>
                        		<mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="officeIdList" labelField="label" prompt="Select"/>
                        		</mx:GridItem>
                        		
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.userid')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<mx:TextInput id="userId" text="" maxChars="20" width="90"/>
		                        </mx:GridItem>
		                	</mx:GridRow>
		                	
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.application.roles')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<mx:ComboBox id="applicationRoles" labelField="label" prompt="Select" />
		                        </mx:GridItem>
		                        
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.lastname')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<mx:TextInput id="lastName" text="" maxChars="35" width="90" restrict="{Globals.INPUT_PATTERN}" />
		                        </mx:GridItem>
		                	</mx:GridRow>
		                	
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.firstname')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<mx:TextInput id="firstName" text="" maxChars="35" width="90" restrict="{Globals.INPUT_PATTERN}" />
		                        </mx:GridItem>
		                        
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.middlename')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<mx:TextInput id="middleName" text="" maxChars="4" width="90" restrict="{Globals.INPUT_PATTERN}" />
		                        </mx:GridItem>
		                	</mx:GridRow>
		                	
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.title')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<mx:TextInput id="title" text="" maxChars="5" width="90" restrict="{Globals.INPUT_PATTERN}" />
		                        </mx:GridItem>
		                        
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.startdate')}"/>
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:HBox>
		                       			<mx:DateField id="startDate"  formatString="YYYYMMDD" editable="true" width="90"/>
		            				</mx:HBox>
		                        </mx:GridItem> 
		                    </mx:GridRow>
		                    
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.logdate')}"/>
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:HBox>
		                       			<mx:DateField id="logDate"  formatString="YYYYMMDD" editable="true" width="90"/>
		            				</mx:HBox>
		                        </mx:GridItem>
		                        
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.locked')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:ComboBox id="lockedList" labelField="label" prompt="Select"/>                           
		                        </mx:GridItem>
		                    </mx:GridRow>		                	
		                	
						</mx:Grid>
					<!--</flexlib:WindowShade>-->
										
					
					<!-- *** MORE *** -->
				    <!-- Sort Order -->
				    <flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
		                <mx:Grid width="100%" borderThickness="0">
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="100%" borderThickness="0">
		                            <mx:HBox width="100%">
										<mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"></mx:ComboBox>
										<mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"> </mx:ComboBox>
										<mx:ComboBox id="sortField3" labelField="label"> </mx:ComboBox>
		                            </mx:HBox> 
		                        </mx:GridItem>                         
		                    </mx:GridRow>
		                </mx:Grid>
		            </flexlib:WindowShade>
					
		    <mx:HBox width="100%" styleName="ButtonBackPanel">
   	        	<cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}"
   	        	    id="submit" styleName="BtnStyle" 
   	           		click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')) 
					: (this.mode == 'amend' ? this.dispatchEvent(new Event('amendSubmit')) 
					: (this.mode == 'cancel' ? this.dispatchEvent(new Event('cancelSubmit')) 
					: this.dispatchEvent(new Event('reopenSubmit'))))}" />
            	<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" 
	            	styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('queryReset')) 
	            	: (this.mode == 'amend' ? this.dispatchEvent(new Event('amendReset'))
	            	: (this.mode == 'cancel' ? this.dispatchEvent(new Event('cancelReset'))
	            	: this.dispatchEvent(new Event('reopenReset'))))}" />
	        </mx:HBox>

				</mx:VBox>
				
				</mx:Canvas>
				
				
				<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle">			
						<cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" />
						<cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()"> 
						<cntrls:columns>
			            	<mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{mode == 'query' ? new RendererFectory(ImgSummaryRenderer) : new RendererFectory(EmployeeAmendQueryRenderer,mode)}" />
		    	   			<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.userid')}" dataField="userId" itemRenderer="com.nri.rui.ref.renderers.EmployeeDetailRenderer"  />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.lastname')}" dataField="lastName"  />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.firstname')}" dataField="firstName" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.title')}" dataField="title"  />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.startdate')}" dataField="startDateStr" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.office.default')}" dataField="officeId" /> 
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.locked')}" dataField="displayLocked" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.status')}" dataField="displayStatus" itemRenderer="com.nri.rui.core.renderers.StatusRenderer"  />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.employee.label.logdate')}" dataField="lastLogDateTimeStr" />
			            </cntrls:columns>
				    </cntrls:CustomDataGrid>
				</mx:VBox>
				
			</mx:HDividedBox>
		</mx:VBox>
		
	</mx:Canvas>
</containers:XenosQueryModule>