<?xml version="1.0" encoding="utf-8"?>

<!--Mxml file for AccountQuery Implementation -->	
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
		   xmlns:containers="com.nri.rui.core.containers.*" 
		   xmlns:flexlib="http://code.google.com/p/flexlib/" 
		   xmlns:cntrls="com.nri.rui.core.controls.*" 
		   xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" creationComplete="loadAll();focusManager.setFocus(actPopUp.accountNo);">
	
	<mx:Script>
    	<![CDATA[
    		import com.nri.rui.ref.renderers.AccountCopyRenderer;
    		import com.nri.rui.core.renderers.StatusRenderer;
            import mx.utils.StringUtil;
			import mx.containers.TitleWindow;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.CheckBox;
			import mx.managers.PopUpManager;
			
			import com.nri.rui.core.controls.XenosAlert;
			import com.nri.rui.core.utils.XenosStringUtils;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import com.nri.rui.ref.renderers.AccountAmendCancelRenderer;
			
			import mx.controls.DataGrid;
            import mx.events.DataGridEvent;
            import mx.core.Application;		    	
    		
    		private function changeCurrentState():void{
				currentState = "result";
				app.submitButtonInstance = null ;
			}
			
			/**
             * Extract the value of the colum cell removing the prefix added at '0'th index.
             */ 
            private function extractPrecisionedValue(item:Object, column:DataGridColumn):String{
                var strData:String = item[column.dataField];
                if(!XenosStringUtils.isBlank(strData) && strData.charAt(0)=="F"){
                    if(strData.length == 1)
                        return XenosStringUtils.EMPTY_STR;
                    else
                        return strData.substring(1);
                }else{
                    return item[column.dataField];                    
                }
            }
            
            /**
			 *  datagrid header release event handler to handle datagridcolumn sorting
			 */
			public function dataGrid_headerRelease(evt:DataGridEvent):void {				
				var dg:CustomDataGrid = CustomDataGrid(evt.currentTarget);
        		sortUtil.clickedColumn = dg.columns[evt.columnIndex];		
			}
    	]]>
    </mx:Script>
	<mx:Script source="actionscripts/AccountQuery.as"/>
			
	<mx:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </mx:states>
    
    <!-- Define Transition array with one Transition object.-->
    <mx:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>
    
    <cntrls:XenosHTTPService id="initAccountQuery" fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))" 
             method="POST" useProxy="false" result="initPage(event)" showBusyCursor="true"/>
	
	<cntrls:XenosHTTPService id="accountSubmitQuery" 
         url="ref/accountQueryDispatch.action?" 
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         result="loadSummaryPage(event)" showBusyCursor="true" resultFormat="xml"/>
	
	<cntrls:XenosHTTPService id="accountResetQuery" 
         url="ref/accountQueryDispatch.action?method=resetQuery" 
         result="initPage(event)" showBusyCursor="true" />
	
	<!--<mx:Validator source="{dateFrom}" required="true" property="text" />
    <mx:Validator source="{dateTo}" required="true" property="text" />-->

	<mx:VBox width="100%" verticalGap="0" horizontalGap="0">
	    <mx:HBox width="100%" styleName="ExCoBgPanel">
	    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;" />    	
	    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
	    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
	    </mx:HBox>
	    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
	</mx:VBox>
	
	<mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		
		<mx:VBox width="100%" height="100%">
			<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="initPageStart()">
				
				<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
				<mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('core.query.criteria')}" width="100%" height="100%" styleName="HDivideStyle">
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
					<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
					<mx:HRule strokeColor="#94acb7" strokeWidth="2" width="100%" />
					<!--<flexlib:WindowShade id="ws1" tabChildren="{ws1.opened}"  label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.important.fields')}" width="100%" >-->
						 <mx:Grid width="100%" borderThickness="0">
							
							<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.accountno')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<xenospopup:AccountPopUpHbox id="actPopUp" />
		                        </mx:GridItem>
		                	
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.officeid')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:ComboBox id="officeIdList" labelField="label"  prompt="Select" />
		                        </mx:GridItem>
		                	</mx:GridRow>
		                	
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.accountname')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<mx:TextInput id="accountName" text="" maxChars="20" width="90" restrict="{Globals.INPUT_PATTERN}"/>
		                        </mx:GridItem>
		                        
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.officialname')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:TextInput id="officialName" text="" maxChars="20" width="90" restrict="{Globals.INPUT_PATTERN}"/>
		                        </mx:GridItem>
		                	</mx:GridRow>
		                	
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartycode')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<!--mx:ComboBox id="counterPartyCode" labelField="label" prompt="Select" /-->
		                        	<mx:HBox id="counterpartyCodeBox" width="100%">
                            			<mx:ComboBox id="counterPartyCode" change="populateCounterpartyCode()" labelField="label">
                            			</mx:ComboBox> 
                            		</mx:HBox>
		                        </mx:GridItem>
		                        
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.salescode')}" />
		                            <!--mx:Label text="{' - '}"/--><!--mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.salesrole')}" /-->
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <!--mx:TextInput id="salesCode" text="" maxChars="20" width="90"/><mx:ComboBox id="salesRole" labelField="label" prompt="Select" /-->
		                            <xenospopup:EmployeePopUpHbox id="accessUserID" />
		                        </mx:GridItem>
		                	</mx:GridRow>
		                	
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.nationality')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                        	<xenospopup:CountryPopUpHbox id="countryPopUp" />
		                        </mx:GridItem>
		                        
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.fundcode')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <xenospopup:FundPopUpHbox id="fundPopUp" />
		                        </mx:GridItem>
		                	</mx:GridRow>
		                	
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.bankAccountType')}" />
		                		</mx:GridItem>
		                		<mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="bankAccTypeList"  labelField="label" ></mx:ComboBox>
                        		</mx:GridItem>
                        		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.taxfeeinclusion')}" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:ComboBox id="taxFeeInclusionList" labelField="label"   />
		                        </mx:GridItem>
		                	</mx:GridRow>
						</mx:Grid>
					<!--</flexlib:WindowShade>-->
					
					
					<!-- *** MORE *** -->
					
					<!--<flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" opened="false" width="100%"> -->
					<flexlib:WindowShade id="ws2" tabChildren="{ws2.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.lessimportant.fields')}" opened="false" width="100%">
						 <mx:Grid width="100%" borderThickness="0">
			               <mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.opendate')}" /> <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.fromto')}" />
		                        </mx:GridItem>                        
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:HBox>
				                       	<mx:DateField id="openDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
				                       	<mx:DateField id="openDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
				            		</mx:HBox>
		                        </mx:GridItem>
		                        <mx:GridItem width="20%" borderThickness="0">
							 		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.openedby')}" />
							 	</mx:GridItem>
							 	<mx:GridItem width="30%" borderThickness="0">
							 		<mx:TextInput id="openedBy" text="" maxChars="20" width="90"/>
							 	</mx:GridItem>
		                	</mx:GridRow>
		                		
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.closedate')}" /> <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.fromto')}" />
		                        </mx:GridItem>                        
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:HBox>
				                       	<mx:DateField id="closeDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
				                       	<mx:DateField id="closeDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
				            		</mx:HBox>
		                        </mx:GridItem>
		                        <mx:GridItem width="20%" borderThickness="0">
							 		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.closedby')}" />
							 	</mx:GridItem>
							 	<mx:GridItem width="30%" borderThickness="0">
							 		<mx:TextInput id="closedBy" text="" maxChars="20" width="90"/>
							 	</mx:GridItem>
		                	</mx:GridRow>
							
							<mx:GridRow width="100%">
							 	<mx:GridItem width="20%" borderThickness="0">
							 		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.accounttype')}" />
							 	</mx:GridItem>
							 	<mx:GridItem width="30%" borderThickness="0">
							 		<mx:ComboBox id="accountType" labelField="label" prompt="Select" />
							 	</mx:GridItem>
							 	
							 	<mx:GridItem  id="acctStatusLbl" width="20%" borderThickness="0">
							 		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.acstatus')}" />
							 	</mx:GridItem>
							 	<mx:GridItem id="acctStatusFld" width="30%" borderThickness="0">
							 		<mx:ComboBox id="accountStatus" labelField="label" prompt="Select" />
							 	</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.iconrequired')}" />
		                		</mx:GridItem>
		                		<mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="iconRequiredList"  labelField="label" ></mx:ComboBox>
                        		</mx:GridItem>
                        		<mx:GridItem width="20%" borderThickness="0">
		                			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.gemsrequired')}" />
		                		</mx:GridItem>
		                		<mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="gemsRequiredList" labelField="label" ></mx:ComboBox>
                        		</mx:GridItem>
		                	</mx:GridRow>
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.formarequired')}" />
		                		</mx:GridItem>
		                		<mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="formaRequiredList"  labelField="label" ></mx:ComboBox>
                        		</mx:GridItem>
                        		<mx:GridItem width="20%" borderThickness="0">
		                			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.formarecreatedallowed')}" />
		                		</mx:GridItem>
		                		<mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="formaRecreatedAllowedList"  labelField="label" ></mx:ComboBox>
                        		</mx:GridItem>
		                	</mx:GridRow>
		                	<mx:GridRow width="100%">
		                	    <mx:GridItem width="20%" borderThickness="0">
		                			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.shortsellflag')}"  />
		                	    </mx:GridItem>
		                	    <mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="shortSellFlagList" labelField="label"/>
                        		</mx:GridItem>
                        		<mx:GridItem width="20%" borderThickness="0">
		                	        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.position')}" />
		                	    </mx:GridItem>
		                	    <mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="longShortFlagList" labelField="label"/>
                        		</mx:GridItem>
		                	</mx:GridRow>
							
							<mx:GridRow width="100%">
		                	    <mx:GridItem width="20%" borderThickness="0">
		                	        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.tfrequired')}" />
		                	    </mx:GridItem>
		                	    <mx:GridItem width="30%" borderThickness="0">
                            		        <mx:ComboBox id="tfRequiredList"  labelField="label" ></mx:ComboBox>
                        		    </mx:GridItem>
		                	    
		                	    <mx:GridItem width="20%" borderThickness="0">
		                	        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.stlinxoutputformat')}" />
		                	    </mx:GridItem>
		                	    <mx:GridItem width="30%" borderThickness="0">
                            		        <mx:ComboBox id="stlInxOutputFormatList"  labelField="label" />
                        		    </mx:GridItem>
		                	</mx:GridRow>
		                	
		                	<mx:GridRow width="100%">
		                		<mx:GridItem width="20%" borderThickness="0">
		                			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fbpifreqd')}" />
		                		</mx:GridItem>
		                		<mx:GridItem width="30%" borderThickness="0">
                            		<mx:ComboBox id="fbpifrequiredList"  labelField="label" ></mx:ComboBox>
                        		</mx:GridItem>
                        	</mx:GridRow>
							
						</mx:Grid>	
					</flexlib:WindowShade>
		
					<!-- Sort Order -->
					<flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
		                <mx:Grid width="100%" borderThickness="0">
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="100%" borderThickness="0">
		                            <mx:HBox width="100%">
		                                <mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()"/>
		                                <mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()"/>
		                                <mx:ComboBox id="sortField3" labelField="label"/>
		                            </mx:HBox> 
		                        </mx:GridItem>                         
		                    </mx:GridRow>
		                </mx:Grid>
		            </flexlib:WindowShade>

		    		<mx:HBox width="100%" styleName="ButtonBackPanel">			
						<cntrls:XenosButton id="submit" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" styleName="BtnStyle" click="this.submitQuery();" />
	           			<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle"  click="this.resetQuery();"/>					
					</mx:HBox>

				</mx:VBox>
				
				</mx:Canvas>
				
				
				<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle">			
					<cntrls:QueryResultHeader id="qh" pdfFunction="generatePdf" xlsFunction="generateXls" printFunction="doPrint" previousFunction="doPrev" nextFunction="doNext" startIndex="2" />
					<cntrls:CustomDataGrid id="accountSummary" width="100%" height="100%" dataProvider="{summaryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" headerRelease="dataGrid_headerRelease(event)" creationComplete="bindDataGrid()">
			            <cntrls:columns>
					<mx:DataGridColumn textAlign="center" headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{mode == 'query' ? new RendererFectory(ImgSummaryRenderer) : mode=='copy'? new  RendererFectory(AccountCopyRenderer) :new RendererFectory(AccountAmendCancelRenderer, mode)}" />
					<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.accountno')}" dataField="value" itemRenderer="com.nri.rui.core.renderers.AccountDetailsRenderer" sortCompareFunction="sortUtil.sortString" /> 
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.officeid')}" dataField="officeId" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.shortname')}" dataField="shortName" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.salescode')}" dataField="salesCode" sortCompareFunction="sortUtil.sortString" wordWrap="true" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.accounttype')}" dataField="accountType" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.fundcode')}" dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.fundname')}" dataField="fundName" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.memo')}" dataField="memo" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartytype')}" dataField="counterPartyType" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.opendate')}" dataField="accountOpenDateStr" labelFunction="extractPrecisionedValue" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.restrictionstatus')}" dataField="restrictionStatus" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.defaultimaccountflag')}" dataField="defaultImAccountFlag" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.defaultbankaccount')}" dataField="defaultBankAccountFlag" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.incomeentitlegenflag')}" dataField="incomeEntitlementGenFlag" sortCompareFunction="sortUtil.sortString" />
			                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.stlinxoutputformat')}" dataField="stlInxOutputFormat" sortCompareFunction="sortUtil.sortString" />
			            	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.acstatus')}" dataField="status" itemRenderer="com.nri.rui.core.renderers.StatusRenderer" sortCompareFunction="sortUtil.sortString" />
			            </cntrls:columns>
				    </cntrls:CustomDataGrid>
				</mx:VBox>
				
			</mx:HDividedBox>
		</mx:VBox>
		
	</mx:Canvas>
</mx:Module>