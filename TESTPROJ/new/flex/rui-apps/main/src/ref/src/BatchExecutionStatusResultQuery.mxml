<?xml version="1.0" encoding="utf-8"?>

<!-- MXML module for displaying the Batch Execution Query  -->
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" 
    xmlns:cntrls="com.nri.rui.core.controls.*" 
    xmlns:famCntrls="com.nri.rui.fam.controls.*"
    xmlns:flexlib="http://code.google.com/p/flexlib/"  
    width="100%" height="100%" horizontalScrollPolicy="off" 
    verticalScrollPolicy="off" creationComplete="init()">
   
    <mx:Script>
		  <![CDATA[
		  import com.nri.rui.core.controls.XenosAlert;
			import mx.managers.FocusManager;
			import mx.managers.PopUpManager;
	        import mx.rpc.events.ResultEvent;
	        import mx.rpc.events.FaultEvent;
	        import mx.controls.Alert;
	        import com.nri.rui.core.Globals;
            import com.nri.rui.core.utils.PrintUtils;
            import mx.collections.ArrayCollection;
            import com.nri.rui.core.utils.ProcessResultUtil;
            import mx.utils.ObjectUtil;
            import mx.events.DataGridEvent;
		   [Bindable]private var xmlObj:XML;
		   [Bindable]private var execId:String = "";
		   [Bindable]private var executionId:String = "";
		   
		    [Bindable]
            private var actionForm:Object = null;
			private var sortUtil: ProcessResultUtil = new ProcessResultUtil();
			private function init():void{
							
				parseUrlString();
				var req : Object = new Object();
				req.executionId = this.id;
				req["executionId"] = execId;
				req["SCREEN_KEY"] = "12134"; 
				queryResultService.request=req;			
				queryResultService.send();
				PopUpManager.centerPopUp(this);
			}
			
            private function httpService_fault(evt:FaultEvent):void {
                XenosAlert.error(evt.fault.faultDetail);
            }
            
            public function parseUrlString():void {
                try {
                    var myPattern:RegExp = /.*\?/; 
                    var s:String = this.loaderInfo.url.toString();
                    s = s.replace(myPattern, "");
                    var params:Array = s.split(Globals.AND_SIGN); 
                    var keyStr:String;
                    var valueStr:String;
                    var paramObj:Object = params;
                    if(params != null){
	                    for (var i:int = 0; i < params.length; i++) {
	                        var tempA:Array = params[i].split("=");  
	                        if (tempA[0] == "id") {
	                            execId = tempA[1];
	                        }
	                    }                    	
                    }               
                } catch (e:Error) {
                    trace(e);
                }                      	         
            }
            
            
           private function proceedResultHandler(event: ResultEvent) : void {
           	var result:XML = XML(event.result);
           	
           	actionForm = result ;
           	executionId = actionForm.executionId;
            if (result.child("Errors").length() > 0) {
		         var errorInfoList : ArrayCollection = new ArrayCollection();
                  //populate the error info list              
                  for each (var error:XML in result.Errors.error) {
                     errorInfoList.addItem(error.toString());
                  }
                  errQueryPage.showError(errorInfoList);//Display the error
			    	  
		    }else if(result.child("queryResultList").length() > 0 && result.child("queryResultList").child("queryResult").length()>0){      	
                this.batchQueryResult.dataProvider = actionForm.queryResultList.queryResult;              
            }else {
                XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('ref.batch.execution.status.query.error.noDataFound'));
            }
           }
			/**
 			*  datagrid header release event handler to handle datagridcolumn sorting
 			*/
		   public function dataGrid_headerRelease(evt:DataGridEvent):void {				
				var dg:DataGrid = DataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];		
			}
			]]>
	</mx:Script>
	
     <cntrls:XenosHTTPService id="queryResultService" 
     						  url="ref/batchExecutionStatusQueryResultDispatch.action?method=viewQueryResult"
				              resultFormat="xml"  
				              useProxy="false"
				              fault="httpService_fault(event)"
				              result="proceedResultHandler(event)" 
				              showBusyCursor="true" >         
     </cntrls:XenosHTTPService>
     
     <mx:VBox width="100%" height="0%">
	    <mx:HBox width="100%" styleName="ButtonBackPanel" horizontalAlign="right">
	        <mx:Button id="Print" styleName="PrintBtnStyle" toolTip="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.print')}" click="PrintUtils.printDetail(this.DgDetails)"/>
	    </mx:HBox>
    </mx:VBox>
    
    
	<mx:Canvas height="100%" width="100%" >

	<!--<mx:VBox width="100%" height="100%" styleName="Padding">-->
	<mx:Label textAlign="center" width="100%" fontWeight="bold" id="resultHead" text="Query Result"/>
	 <cntrls:XenosErrors id="errQueryPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
		<mx:VBox id="DgDetails" visible="true" includeInLayout="{this.DgDetails.visible}" width="100%" height="100%" styleName="Padding" >	

			<mx:DataGrid id="batchQueryResult" width="100%" height="100%" headerRelease="dataGrid_headerRelease(event)" sortableColumns="true" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">

					     <mx:columns>
	            				<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.batchExecutionQuery.result.label.jobNo')}"  dataField="jobNo" textAlign="right"  width="100" itemRenderer = "com.nri.rui.ref.renderers.BatchExecutionQueryDetailsRenderer" sortCompareFunction="sortUtil.sortNumeric"  />                           
	                            <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.batchExecutionQuery.result.label.jobName')}"  dataField="jobName" textAlign="left"  width="220"/> 
	                            <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.batchExecutionQuery.result.label.executionDate')}"  dataField="executionDateStr" textAlign="left"  width="110"/>                            
	                            <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.batchExecutionQuery.result.label.executionStatus')}"  dataField="executionStatus" textAlign="left"  width="300"/>
	                            <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.batchExecutionQuery.result.label.startTime')}"  dataField="startTimeStr" textAlign="left"  width="180"/>	                            	                            
								<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.batchExecutionQuery.result.label.endTime')}"  dataField="endTimeStr" textAlign="left"  width="180"/>                             
	                    </mx:columns>
			       </mx:DataGrid>	
		  </mx:VBox>
     </mx:Canvas>
</mx:Module>


