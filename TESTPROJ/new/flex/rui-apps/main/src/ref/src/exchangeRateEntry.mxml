<?xml version="1.0" encoding="utf-8"?>
<containers:XenosEntryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:valdtrs="com.nri.rui.core.validators.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off">
    <mx:Script>
        <![CDATA[
            import mx.resources.ResourceBundle;
            import mx.core.Application;
        ]]>
    </mx:Script>
    
    <mx:Script source="actionscripts/ExchangeRate.as"/>
     
    <containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
        </mx:State>
        <mx:State name="entryState">
            <mx:SetProperty target="{qry}" name="width" value="100%"/>
            <mx:SetProperty target="{rslt}" name="width" value="0%"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>    
    <frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
    <valdtrs:XenosNumberValidator id="numVal1" requiredFieldError=""
        invalidCharError="{Application.application.parentApplication.xResourceManager.getKeyValue('ref.marketprice.msg.error.invalid.value', new Array('Rate'))}" 
        exceedsMaxError="{Application.application.parentApplication.xResourceManager.getKeyValue('ref.marketprice.msg.error.beforepointlimit', new Array('9'))}" 
        negativeError="{Application.application.parentApplication.xResourceManager.getKeyValue('ref.marketprice.msg.error.invalid.value', new Array('Rate'))}" 
        separationError="" source="{rate}" property="text" 
        allowNegative="false" domain="real" lowerThanMinError="" maxValue="999999999" 
        minValue="" invalidFormatCharsError="{Application.application.parentApplication.xResourceManager.getKeyValue('ref.marketprice.msg.error.invalid.value', new Array('Rate'))}" 
        decimalPointCountError="{Application.application.parentApplication.xResourceManager.getKeyValue('ref.marketprice.msg.error.invalid.value', new Array('Rate'))}" 
        precision="9" precisionError="{Application.application.parentApplication.xResourceManager.getKeyValue('ref.marketprice.msg.error.afterpointlimit', new Array('9'))}" />
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
    <mx:VBox width="100%" height="100%">
    <mx:ViewStack id="vstack" width="100%" height="100%" creationComplete="loadAll()" creationPolicy="all" >
    <!--<mx:HBox id="hdbox1" width="100%" height="100%" styleName="Padding4" creationComplete="loadAll()"  >-->
    <!--<containers:CollapsibleHDividedBox id="hdbox1" width="100%" height="100%" x="0" y="0" creationComplete="initPageStart()" paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" >-->
        
        <mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
        <mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('ref.btn.label.entrycriteria')}" width="100%" height="100%" >
            <mx:Label id="initLabel" text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.title')} Entry" fontWeight="bold"/>
            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
        
            <!--<flexlib:WindowShade id="ws1" tabChildren="{ws1.opened=false}" styleName="linkButtonWindowShade" label="Optional Fields - Group 1" width="100%">-->
            <mx:Grid width="100%" borderThickness="0">
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.exchangeratetype')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:ComboBox id="exchangeratetype" change="populateCalculationType()" />  
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.basedate')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:DateField id="baseDate"  formatString="YYYYMMDD" editable="true" width="90"/>
                    </mx:GridItem>                     
                </mx:GridRow>   
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.calculationtype')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:ComboBox id="calculationtype" labelField="label"/>  
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.againstccy')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <cntrls:CurrencyHBox id="againstccy" focusOut="populateCalculationType()"/>
                    </mx:GridItem>                       
                </mx:GridRow>
               <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.rate')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="rate" focusOut="numVal1.handleNumericField(numberFormatter)"/>                            
                    </mx:GridItem>
                </mx:GridRow>
            </mx:Grid>

            <mx:HBox width="100%" styleName="ButtonBackPanel">
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'entry' ?  this.dispatchEvent(new Event('entrySave')) :  this.dispatchEvent(new Event('amendEntrySave'))}" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click ="{this.mode == 'entry' ?  this.dispatchEvent(new Event('entryReset')) : this.dispatchEvent(new Event('amendEntryReset'))}"/>
            </mx:HBox>

        </mx:VBox>
        
        </mx:Canvas>
                
        <mx:VBox width="100%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >            
             <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.userconfirm')}" fontWeight="bold" id="uConfLabel"/>
             <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.systemconfirm')}" fontWeight="bold" id="sConfLabel" includeInLayout="false" visible="false"/>
             <mx:HBox id="sysConfMessage"  styleName="ButtonBackPanel" verticalGap="0" horizontalGap="0" width="100%" height="32" visible="false" verticalAlign="middle" includeInLayout="false">           
	            <mx:Image source="@Embed('../../assets/themes/default/skin/alert_info.png')" width="28" height="28" verticalAlign="middle"/>
	            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.calendar.label.txncomplete')}" fontWeight="bold" selectable="true"/>  
			</mx:HBox>
                  <mx:Grid width="100%" borderThickness="0">
                    <mx:GridRow width="100%">
                        <mx:GridItem width="20%" styleName="LabelBgColor">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.exchangeratetype')}" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" styleName="LabelBgColor">
                            <mx:Label id="uConfExchangeRateType"  text=""/>
                        </mx:GridItem> 
                        <mx:GridItem width="20%" styleName="LabelBgColor">
                                <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.basedate')}" styleName="FormLabelHeading"/>
                            </mx:GridItem>
                            <mx:GridItem width="30%" styleName="LabelBgColor">
                            <mx:Label id="uConfBaseDate"  text=""/>
                            </mx:GridItem>                         
                    </mx:GridRow>   
                    <mx:GridRow width="100%">
                            <mx:GridItem width="20%" styleName="LabelBgColor">
                                <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.calculationtype')}" styleName="FormLabelHeading"/>
                            </mx:GridItem>
                            <mx:GridItem width="30%" styleName="LabelBgColor">                              
                                <mx:Label id="uConfCalculationType"  text=""/>                        
                            </mx:GridItem>
                            <mx:GridItem width="20%" styleName="LabelBgColor">
                                <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.againstccy')}" styleName="FormLabelHeading"/>
                            </mx:GridItem>
                            <mx:GridItem width="30%" styleName="LabelBgColor">
                               <mx:Label id="uConfAgainstCcy"/>
                            </mx:GridItem>  
                    </mx:GridRow>
                   <mx:GridRow width="100%">
                        <mx:GridItem width="20%" styleName="LabelBgColor">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.exchangerate.label.rate')}" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" styleName="LabelBgColor">
                            <mx:Label id="uConfRate"  text=""/>                            
                        </mx:GridItem>
                    </mx:GridRow>
                 </mx:Grid>

            <mx:HBox width="100%" styleName="ButtonBackPanel">
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.back')}" id="back" styleName="BtnStyle" click="doBack()"/>
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('ref.form.button.label.confirm')}" id="uConfSubmit" styleName="BtnStyle" click="{this.mode == 'entry' ?  this.dispatchEvent(new Event('entryConf')) :  this.dispatchEvent(new Event('amendEntryConf'))}" /> 
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="cancelSubmit" styleName="BtnStyle" click=" {this.dispatchEvent(new Event('cancelEntrySave'))}" includeInLayout="false" visible="false"/> 
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('ref.form.button.label.confirm')}" id="uCancelConfSubmit" styleName="BtnStyle" click="{this.dispatchEvent(new Event('cancelEntryConf'))}" includeInLayout="false" visible="false"/>  
               <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('ref.form.button.label.sysconfirm')}" id="sConfSubmit" styleName="BtnStyle" click="{this.mode == 'entry' ?  this.dispatchEvent(new Event('entrySysConf')) : ( mode == 'amend' ? this.dispatchEvent(new Event('amendEntrySysConf')): this.dispatchEvent(new Event('cancelEntrySysConf')))}" includeInLayout="false" visible="false"/>               
            </mx:HBox>
        </mx:VBox>
    </mx:ViewStack>
    </mx:VBox>
    
    </mx:Canvas>
</containers:XenosEntryModule>
