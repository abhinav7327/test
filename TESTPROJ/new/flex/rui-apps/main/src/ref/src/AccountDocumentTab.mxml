<?xml version="1.0" encoding="utf-8"?> 
<cntrls:WizardPage xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:valdtrs="com.nri.rui.core.validators.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" width="100%" height="100%" shortTitle="Document" 
	longTitle="{this.parentApplication.xResourceManager.getKeyValue('ref.account.title')} - {this.parentApplication.xResourceManager.getKeyValue('ref.account.label.documentcontrol')}">
	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			
			private function geServiceName(item:Object,column : DataGridColumn):String {
				return item.entry.(@key == 'serviceIdAndNameExp').value;
			}
			
			private function geServiceStatus(item:Object,column : DataGridColumn):String {
				return item.entry.(@key == 'serviceStatusExp').value;
			}
			
			private function geContractDateStr(item:Object,column : DataGridColumn):String {
				return item.entry.(@key == 'contractDateStr').value;
			}
		]]>
	</mx:Script>
	
	<mx:Script source="actionscripts/AccountDocumentTab.as"/>
	
	<cntrls:XenosHTTPService id="addServiceContractInfoService"
         showBusyCursor="true"
         method="POST" url="ref/account{urlModeBind}Dispatch.action?method=addServiceContractXref"
         result="ServiceContractInfoResult(event)"
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         useProxy="false" resultFormat="xml">
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="editServiceContractInfoService"
         showBusyCursor="true"
         method="POST" url="ref/account{urlModeBind}Dispatch.action?method=editServiceContractXref"
         result="ServiceContractInfoResult(event)"
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         useProxy="false" resultFormat="xml">
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="saveServiceContractInfoService"
         showBusyCursor="true"
         method="POST" url="ref/account{urlModeBind}Dispatch.action?method=updateServiceContractXref"
         result="ServiceContractInfoResult(event)"
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         useProxy="false" resultFormat="xml">
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="cancelEditServiceContractInfoService"
         showBusyCursor="true"
         method="POST" url="ref/account{urlModeBind}Dispatch.action?method=cancelServiceContractXref"
         result="ServiceContractInfoResult(event)"
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         useProxy="false" resultFormat="xml">
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="deleteServiceContractInfoService"
         showBusyCursor="true"
         method="POST" url="ref/account{urlModeBind}Dispatch.action?method=deleteServiceContractXref"
         result="ServiceContractInfoResult(event)"
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         useProxy="false" resultFormat="xml">
    </cntrls:XenosHTTPService>
    
    <cntrls:XenosHTTPService id="deleteDocumentInfoService"
         showBusyCursor="true"
         method="POST" url="ref/account{urlModeBind}Dispatch.action?method=deleteLegalAggreement"
         result="ServiceContractInfoResult(event)"
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         useProxy="false" resultFormat="xml">
    </cntrls:XenosHTTPService>
	
	<cntrls:XenosErrors id="errPage" width="100%" height="15%" maxHeight="40" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
	
	<mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<mx:VBox width="100%" height="100%">
			<mx:Grid verticalGap="0" horizontalGap="0" width="100%" borderThickness="0">
				<mx:GridRow width="100%" height="100%">
					<mx:GridItem width="20%" borderThickness="1" styleName="LabelBgColor">
	                	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.accountno')}" styleName="FormLabelHeading" />
	                </mx:GridItem>
	                <mx:GridItem width="30%" borderThickness="1">
	                	<mx:Label text="{xml.accountNoExp}" />
	                </mx:GridItem>
	                <mx:GridItem width="20%" borderThickness="1" styleName="LabelBgColor">
	                	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.accountname')}" styleName="FormLabelHeading" />
	                </mx:GridItem>
	                <mx:GridItem width="30%" borderThickness="1">
	                	<mx:Label text="{xml.shortNameExp}" />
	                </mx:GridItem>
	            </mx:GridRow>
			</mx:Grid>
			
	<flexlib:WindowShade id="ws1" click="com.nri.rui.core.controls.AutoScroll.currentObj = this.ws1" tabChildren="{ws1.opened = true}" label="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.servicecontract')}" width="100%">
		
			<mx:Grid width="100%" borderThickness="0">
                <mx:GridRow width="100%">
                    <mx:GridItem width="11%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.servicename')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="22%" borderThickness="0">
                        <mx:ComboBox id="serviceName" dataProvider="{serviceNameList}"/>  
                    </mx:GridItem> 
                    <mx:GridItem width="11%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.servicestatus')}" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="22%" borderThickness="0">
                        <mx:ComboBox id="serviceStatus" dataProvider="{serviceStatusList}"/>
                    </mx:GridItem> 
                    <mx:GridItem width="11%" borderThickness="0">
                        <mx:Label text="" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="22%" borderThickness="0">
                        <mx:Label text="" styleName="ReqdLabel"/>
                    </mx:GridItem>                       
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="11%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.contractdate')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="22%" borderThickness="0">
                        <mx:DateField id="contractDateStr" text="{xml.serviceContractXref.contractDateStr}"  formatString="YYYYMMDD" editable="true"/>  
                    </mx:GridItem> 
                    <mx:GridItem width="11%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.description')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="22%" borderThickness="0">
                        <mx:TextInput id="description" text="{xml.serviceContractXref.description}"/>
                    </mx:GridItem> 
                    <mx:GridItem width="11%" borderThickness="0">
                        <mx:Label text="" styleName="ReqdLabel"/>
                    </mx:GridItem>
                    <mx:GridItem width="22%" borderThickness="0">
                        <cntrls:XenosButton id="addBtn" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.add')}" styleName="BtnStyle" click="addServiceContractInfo()" visible="{!editMode}" includeInLayout="{!editMode}"/>
                        <cntrls:XenosButton id="cancelBtn" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.cancel')}" styleName="BtnStyle" click="cancelServiceContractInfo()" visible="{editMode}" includeInLayout="{editMode}"/>
                        <cntrls:XenosButton id="saveBtn" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.save')}" styleName="BtnStyle" click="saveServiceContractInfo()" visible="{editMode}" includeInLayout="{editMode}"/>
                    </mx:GridItem>                       
                </mx:GridRow>
            </mx:Grid>
                <cntrls:CustomDataGrid id="serviceContractInfoSummary" dataProvider="{serviceContractInfoSummaryResult}" width="100%" height="100%" sortableColumns="false" variableRowHeight="true" visible="true" includeInLayout="true" rowCount="4"> 
                    <cntrls:columns>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.servicename')}" width="250" labelFunction="geServiceName"/>
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.servicestatus')}" width="250" labelFunction="geServiceStatus" />
                        <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.contractdate')}" width="250" labelFunction="geContractDateStr"/>
                        <mx:DataGridColumn headerText="" width="150" textAlign="center">
                            <mx:itemRenderer>
                                <mx:Component>
                                    <mx:HBox>
                                        <cntrls:XenosButton id="editCode" enabled ="{data.isVisible == 'true' || data.isVisible == true?true:false}" styleName="BtnEdit" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.edit')}" click="outerDocument.editServiceContractInfo(data)" width="18" height="18"/>
                                        <cntrls:XenosButton id="deleteCode" enabled ="{data.isVisible == 'true' || data.isVisible == true?true:false}" styleName="BtnDelete" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.delete')}" click="outerDocument.deleteServiceContractInfo(data)" width="18" height="18"/>
                                    </mx:HBox>
                                </mx:Component>
                                
                            </mx:itemRenderer>
                        </mx:DataGridColumn>
                   </cntrls:columns>
                </cntrls:CustomDataGrid>
    </flexlib:WindowShade>
    <flexlib:WindowShade id="ws2" click="com.nri.rui.core.controls.AutoScroll.currentObj = this.ws2" tabChildren="{ws2.opened = (mode=='amend' || mode=='entry')?true: false}}" label="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.documentinfo')}" width="100%">
            <cntrls:CustomDataGrid id="documentInfoSummary" dataProvider="{documentInfoSummaryResult}" width="100%" height="100%" sortableColumns="false" variableRowHeight="true" rowCount="{documentInfoSummaryResult.length + 1}" editable="true"> 
                <cntrls:columns>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.documentid')}" width="200" dataField="documentDispName" editable="false"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.requesteddate')}" width="150" dataField="agreementDateStr"  editable="true" rendererIsEditor="true">
                    	<mx:itemRenderer>
							<mx:Component>
								<mx:DateField editable="true" formatString="YYYYMMDD">
									<mx:Script>
										<![CDATA[
											private var _data:Object;
											override public function set data(value:Object):void{
												_data = value;
												try{
													text = value.agreementDateStr.toString();
													selectedDate = stringToDate(text,"YYYYMMDD");
												}catch(e:Error){
													trace(e.message);
												}
											}
											
											override public function get data():Object{
												return _data;
											}
										]]>
									</mx:Script>
								</mx:DateField>
							</mx:Component>
						</mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.receiveddate')}" width="150" dataField="receivedDateStr"  editable="true" rendererIsEditor="true">
                    	<mx:itemRenderer>
							<mx:Component>
								<mx:DateField editable="true" formatString="YYYYMMDD">
									<mx:Script>
										<![CDATA[
											private var _data:Object;
											override public function set data(value:Object):void{
												_data = value;
												try{
													text = value.receivedDateStr.toString();
													selectedDate = stringToDate(text,"YYYYMMDD");
												}catch(e:Error){
													trace(e.message);
												}
											}
											
											override public function get data():Object{
												return _data;
											}
										]]>
									</mx:Script>
								</mx:DateField>
							</mx:Component>
						</mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.documentexecutiondate')}" width="150" dataField="documentExecutionDateStr"  editable="true" rendererIsEditor="true">
                    	<mx:itemRenderer>
							<mx:Component>
								<mx:DateField editable="true" formatString="YYYYMMDD">
									<mx:Script>
										<![CDATA[
											private var _data:Object;
											override public function set data(value:Object):void{
												_data = value;
												try{
													text = value.documentExecutionDateStr.toString();
													selectedDate = stringToDate(text,"YYYYMMDD");
												}catch(e:Error){
													trace(e.message);
												}
											}
											
											override public function get data():Object{
												return _data;
											}
										]]>
									</mx:Script>
								</mx:DateField>
							</mx:Component>
						</mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.expirydate')}" width="150" dataField="expiryDateStr"  editable="true" rendererIsEditor="true">
                    	<mx:itemRenderer>
							<mx:Component>
								<mx:DateField editable="true" formatString="YYYYMMDD">
									<mx:Script>
										<![CDATA[
											private var _data:Object;
											override public function set data(value:Object):void{
												_data = value;
												try{
													text = value.expiryDateStr.toString();
													selectedDate = stringToDate(text,"YYYYMMDD");
												}catch(e:Error){
													trace(e.message);
												}
											}
											
											override public function get data():Object{
												return _data;
											}
										]]>
									</mx:Script>
								</mx:DateField> 
							</mx:Component>
						</mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="" textAlign="center" width="100" editable="false">
                        <mx:itemRenderer>
                            <mx:Component>
	                            <mx:HBox>
	                                <mx:Button textAlign="center" enabled ="{data.hasOwnProperty('readOnly')?false:true}" styleName="BtnDelete" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.delete')}" click="outerDocument.deleteDocumentInfo(data)" width="18" height="18"/>
	                            </mx:HBox> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
               </cntrls:columns>
            </cntrls:CustomDataGrid>
    </flexlib:WindowShade> 
	</mx:VBox>
	</mx:Canvas>	    
</cntrls:WizardPage>
