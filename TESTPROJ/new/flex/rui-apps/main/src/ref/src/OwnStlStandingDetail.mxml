<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
	 xmlns:flexlib="http://code.google.com/p/flexlib/"
	 layout="vertical" 
	 xmlns:cntrls="com.nri.rui.core.controls.*" 
	 xmlns:controls="*" width="100%" height="100%" 
	 creationComplete="submitQueryResult()">
	<mx:Script>
		<![CDATA[
			import mx.rpc.events.ResultEvent;
			import mx.core.UIComponent;
			import mx.managers.PopUpManager;
    		import mx.collections.ArrayCollection;
    		import com.nri.rui.core.controls.XenosAlert;
    		import com.nri.rui.core.utils.XenosPopupUtils;
    		import mx.core.Application;
            import com.nri.rui.core.utils.PrintUtils;
    		[Bindable]private var ownStlStandingRulePk:String;
    		[Bindable]private var queryResult:XML= new XML();
			
			 public function submitQueryResult():void{
		    	parseUrlString();
		    	var requestObj :Object = new Object();
		    	requestObj.method = 'initialExecute';
		    	requestObj.pk = ownStlStandingRulePk;
		    	requestObj.actionType = 'VIEW';
	         	OwnStlStandingQueryDetailRequest.request = requestObj; 
		    	OwnStlStandingQueryDetailRequest.send();
			    PopUpManager.centerPopUp(this);
		    }
		    
		     public function parseUrlString():void {
		        try {
		            // Remove everything before the question mark, including
		            // the question mark.
		            var myPattern:RegExp = /.*\?/; 
		            var s:String = this.loaderInfo.url.toString();
		            s = s.replace(myPattern, "");
		            // Create an Array of name=value Strings.
		            var params:Array = s.split("&"); 
		             // Print the params that are in the Array.
		            var keyStr:String;
		            var valueStr:String;
		            var paramObj:Object = params;
		          
		            // Set the values of the salutation.
		            for (var i:int = 0; i < params.length; i++) {
		                var tempA:Array = params[i].split("=");  
		                if (tempA[0] == "ownStlStandingRulePk") {
		                    ownStlStandingRulePk = tempA[1];
		                } 
		            } 
		            
		        } catch (e:Error) {
		            trace(e);
		        }
    		}
    		
    		/**
    * This method works as the result handler of the Submit Query Http Services.
    * 
    */
    public function LoadResultPage(event:ResultEvent):void {
    	//var xmlData:XML = new XML();
    	if (null != event) {            
            if(null == event.result){
                //queryResult.removeAll(); // clear previous data if any as there is no result now.
            	if(null == event.result.XenosErrors){ // i.e. No result but no Error found.
            	  //  errPage.clearError(event); //clears the errors if any
            		XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
            	} else { // Must be error
            		//errPage.displayError(event);	
            	}            	
            }else {
	            
	             	queryResult = event.result as XML;
	             	//XenosAlert.info(queryResult);
	             	if(queryResult.diffCashForAgainst=="Y"){
	             		this.showDetail.visible = true;
	             		this.showDetail.includeInLayout = true;
	             	}
	             	else{
	             		this.showDetail.visible = false;
	             		this.showDetail.includeInLayout = false;
	             	}
            } 
        }else {
            //queryResult.removeAll();
            XenosAlert.info(this.parentApplication.xResourceManager.getKeyValue('inf.label.query.noresult'));
        }
    }
		   
		  /**
	   * This method is used for loading FinInstPopUp module 
	   * 
	   */  
	   public function showFinInstPopUps():void{
			
				var finInstPkStr : String = queryResult.ownStandingRule.ourBankPk;
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				
				XenosPopupUtils.showFinInstDetails(finInstPkStr,parentApp);
				
	   }
	   
	   public function showCashFinInstPopUps():void{
			
				var finInstPkStr : String = queryResult.cashStandingRule.ourBankPk;
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				
				XenosPopupUtils.showFinInstDetails(finInstPkStr,parentApp);
				
	   }
	   
	   /**
	   * This method is used for loading Account Details popup module
	   * 
	   */  
	   public function showAccountDetail():void{
	   		
				
				var accPkStr : String = queryResult.ownStandingRule.ourSettleAccountPk;
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				XenosPopupUtils.showAccountSummary(accPkStr,parentApp);
				
	   }
	   
	    public function showCashAccountDetail():void{
	   		
				
				var accPkStr : String = queryResult.cashStandingRule.ourSettleAccountPk;
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				XenosPopupUtils.showAccountSummary(accPkStr,parentApp);
				
	   }
	   
	   
	   public function showMarketDetail():void{
			
				var finInstPkStr : String = queryResult.ownStandingRule.marketPk;
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				
				XenosPopupUtils.showFinInstDetails(finInstPkStr,parentApp);
				
	   }
	   
	   
	   
	   /**
	   * This method is used for loading Account Details popup module
	   * 
	   */  
	   public function showCPAccountDetail():void{
	   		
				
				var accPkStr : String = queryResult.ownStandingRule.tradingAccountPk;
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				XenosPopupUtils.showAccountSummary(accPkStr,parentApp);
				
	   }
	    /**
	   * This method is used for loading Instrument Details popup module
	   * 
	   */  
	   public function showInstrumentDetail():void{
	   			
				var InstPkStr : String = queryResult.ownStandingRule.instrumentPk;
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				XenosPopupUtils.showInstrumentDetails(InstPkStr, parentApp);
	   }
	   
	   
	   public function showSecurityCodeDetail():void{
	   			
			
				var brokerPkStr : String = queryResult.ownStandingRule.brokerPk;
								
				var parentApp :UIComponent = UIComponent(this.parentApplication);
				
				if(brokerPkStr!=null){
					XenosPopupUtils.showFinInstDetails(brokerPkStr, parentApp);
				}
				
	   }
		 
		]]>
	</mx:Script>
	 <cntrls:XenosHTTPService id="OwnStlStandingQueryDetailRequest"
     	 showBusyCursor="true"
     	 method="POST" 
     	 url="ref/ownStandingDetails.action?" 
         result="LoadResultPage(event)"  
         fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
         useProxy="false" resultFormat="e4x">
    </cntrls:XenosHTTPService>
    
    <mx:VBox width="100%" height="0%">
	    <mx:HBox width="100%" styleName="ButtonBackPanel" horizontalAlign="right">
	        <mx:Button id="Print" styleName="PrintBtnStyle" toolTip="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.print')}" click="PrintUtils.printDetail(this.detail)"/>
	    </mx:HBox>
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%">
    
    <mx:VBox width="100%" height="100%" styleName="Padding" id="detail">
		    <mx:Grid verticalGap="0" horizontalGap="0" width="100%">
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundcode')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.fundCode}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundName')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.fundName}" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundAccount')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.inventoryAccount}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.fundaccountname')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.inventoryAccountName}" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.settlementFor')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.settlementFor}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.stlacctforfund.label.cashorsecurity')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.cashSecurityFlag}" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settlementbank')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
					<mx:Label text="{queryResult.ownStandingRule.custodian}"  click="showFinInstPopUps()" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settlementbankname')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
					<mx:Label text="{queryResult.ownStandingRule.custodianname}"  buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settleac')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.stlAccount}"  click="showAccountDetail()" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settleacname')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.stlAccountName}"  buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.instrumenttype')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
					<mx:Label text="{queryResult.ownStandingRule.instrumentType}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.stl.location')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.settlementLocation}" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.stl.ccy')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
					<mx:Label text="{queryResult.ownStandingRule.settlementCcy}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
					</mx:GridItem>
					<mx:GridItem width="30%">
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.instrumentcode')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.instrumentCode}" click="showInstrumentDetail()" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.instrumentname')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.securityName}" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.popup.instrumentsearch.label.alternate.instrumentcode')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
					<mx:Label text="{queryResult.ownStandingRule.alternateSecurityCode}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
					</mx:GridItem>
					<mx:GridItem width="30%">
					</mx:GridItem>
				</mx:GridRow>
				
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartycode')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.counterpartyCodeExp}"  click="showSecurityCodeDetail()" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.cpcodename')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.brokerName}"  buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartyAccount')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.tradingAccount}"  click="showCPAccountDetail()" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.account.label.counterpartyAccountName')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.tradingAccountName}"  buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.inx.transmission')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.instructionReqdExp}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.auto.reqd')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.autoTransmissionFlagExp}" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
			    <mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.priority')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.priority}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.marketPrice.label.market')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.ownStandingRule.marketCode}" click="showMarketDetail()" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem> 
				</mx:GridRow>
			<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.settlement.mode')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
					<mx:Label text="{queryResult.ownStandingRule.settlementMode}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
					</mx:GridItem>
					<mx:GridItem width="30%">
					</mx:GridItem>
				</mx:GridRow>
			     
			</mx:Grid>
			
    	
    	<mx:VBox width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off"  styleName="HDivideStyle" id="showDetail">
	         	<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.ownssirule.label.details')}" fontWeight="bold"/>
	         	<mx:Grid width="100%" borderThickness="1" horizontalGap="0" verticalGap="0">
                    <mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.existing.rule')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.existingRuleId}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						
					</mx:GridItem>
					<mx:GridItem width="30%">
						
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.settlement.mode')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.cashStandingRule.settlementMode}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.label.inx.transmission')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.cashInstructionReqdExp}" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settlementbank')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
					<mx:Label text="{queryResult.cashStandingRule.custodian}"  click="showCashFinInstPopUps()" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.common.popup.label.settleac')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
						<mx:Label text="{queryResult.cashStandingRule.stlAccount}"  click="showCashAccountDetail()" useHandCursor="true" styleName="TextLink" buttonMode="true" mouseChildren="false" selectable="true"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="20%" styleName="LabelBgColor">
						<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.fund.label.priority')}" styleName="FormLabelHeading" />
					</mx:GridItem>
					<mx:GridItem width="30%">
					<mx:Label text="{queryResult.cashStandingRule.priority}" selectable="true"/>
					</mx:GridItem>
					<mx:GridItem width="20%" styleName="LabelBgColor">
					</mx:GridItem>
					<mx:GridItem width="30%">
					</mx:GridItem>
				</mx:GridRow>
	             </mx:Grid>
	         </mx:VBox>
	         </mx:VBox>
    </mx:Canvas>
</mx:Module>
