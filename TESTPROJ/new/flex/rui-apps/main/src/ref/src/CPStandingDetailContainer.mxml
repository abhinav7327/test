<?xml version="1.0" encoding="utf-8"?>

<!--Mxml file for Account Document Query/Entry Implementation  -->

<mx:VBox xmlns:cntrls="com.nri.rui.core.controls.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:flexlib="http://code.google.com/p/flexlib/" 
	xmlns:controls="*" 
	xmlns:src="ref.src.*"
	width="100%" height="100%" verticalGap="0" horizontalGap="0"  horizontalScrollPolicy="auto" >
       
  <mx:Script>
		<![CDATA[
			import mx.resources.ResourceBundle;
			import com.nri.rui.core.utils.XenosStringUtils;
            import com.nri.rui.core.controls.XenosAlert;
            import com.nri.rui.core.controls.XenosAlert;
			import mx.managers.FocusManager;
			import mx.managers.PopUpManager;
	        import mx.rpc.events.ResultEvent;
	        import mx.rpc.events.FaultEvent;
	        import mx.controls.Alert;
	        import com.nri.rui.core.Globals;
            import com.nri.rui.core.utils.PrintUtils;
		   
		    [Bindable]
		    public var xmlObj:XML;
		  
		   private var rulePk:String;   
		   private var viewType:String = "View"; 
		   	   
                     
            public function parseUrlString():void {
                try {
                    // Remove everything before the question mark, including
                    // the question mark.
                    var myPattern:RegExp = /.*\?/; 
                    var s:String = this.loaderInfo.url.toString();
                    s = s.replace(myPattern, "");
                    // Create an Array of name=value Strings.
                    var params:Array = s.split("&"); 
                     // Print the params that are in the Array.
                    var keyStr:String;
                    var valueStr:String;
                    var paramObj:Object = params;
                  
                    // Set the values of the salutation.
                    for (var i:int = 0; i < params.length; i++) {
                        var tempA:Array = params[i].split("=");  
                        if (tempA[0] == Globals.RULE_PK) {
                            rulePk = tempA[1];
                        } 
                         if (tempA[0] == Globals.VIEW_TYPE) {
                            viewType = tempA[1];
                        } 
                                                             
                    }                    

                  
                } catch (e:Error) {
                    trace(e);
                }
               
            }
		   
			
			public function set xmlSource(value:XML):void{
				xmlObj=value;
			}
			
			public function init():void{
				parseUrlString();
				var req : Object = new Object();
				req.rulePk=rulePk;
				req.viewType=viewType;
				
				if(viewType=="CANCEL"){
					httpService.url="ref/cpStandingEntryDispatch.action?method=deleteConfirm"
					req.actionType="DELETE";
					req.SCREEN_KEY= 820;
				}else{
					req.SCREEN_KEY= 190;
				}
		    	httpService.request=req;			
				httpService.send();

			}
			
            private function httpService_fault(evt:FaultEvent):void {
                XenosAlert.error(evt.fault.faultDetail);
            }

            private function httpService_result(evt:ResultEvent):void {
            	xmlObj = XML(Object(evt.result));
                if(xmlObj!=null){
                 var viewMode:String ="";
	               	if(xmlObj.child("viewMode").length()>0){
	               		viewMode = xmlObj.viewMode.toString();
	               	}
	              if(viewType!="QUERY"){
	               	 	this.parentDocument.initializeCancel(viewMode);
	             }
                 initializeView();
                }    
            }
            
            
            
            private function  initializeView() :void{
            
            	cpStandingDetailView.setViewType(viewType);
            	cpStandingDetailView.initializeView(xmlObj);
            	cpStandingIncConfirm.setViewType(viewType);
            	cpStandingIncConfirm.initializeView(xmlObj);
            	cpSettlementView.initializeView(xmlObj);
            	/* See comment on  XENOSCD-4279
              	 	if(xmlObj.cpSecRule.contraIdCodeType!=null && !XenosStringUtils.isBlank(xmlObj.cpSecRule.contraIdCodeType.toString())){
            	 		XenosAlert.info("In beneficiaryInformation");
            	 		dynaStack.selectedChild= beneficiaryInformation;
            	 		beneficiaryInformation.initializeView(xmlObj);
            	 	
            	 		
            		}else if(xmlObj.cpSecRule.dtcIndicator==true){
            			XenosAlert.info("In cpStandingDtcConfirm");
            			dynaStack.selectedChild= cpStandingDtcConfirm;
            	 		cpStandingDtcConfirm.initializeView(xmlObj);
            	 		
            	 	}
            	 	else{
            	  		XenosAlert.info("In Else CPStandingIncConfirm");
            	  		dynaStack.selectedChild= cpStandingIncConfirm;
            	  		cpStandingIncConfirm.setViewType(viewType);
            	  		
            	 	}*/
               }

		]]>
	</mx:Script>
	
	
    <mx:Metadata>
        [ResourceBundle("refResources")]
        [ResourceBundle("coreResources")]
    </mx:Metadata>
    
    <mx:VBox width="100%" height="0%">
	    <mx:HBox width="100%" styleName="ButtonBackPanel" horizontalAlign="right">
	        <mx:Button id="Print" styleName="PrintBtnStyle" toolTip="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.print')}" click="PrintUtils.printDetail(this.detail)"/>
	    </mx:HBox>
    
   <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="auto" >
     <mx:VBox  width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="auto" verticalGap="0" horizontalGap="0" id="detail">
     
    	  <controls:CPStandingHeaderView  width="100%"  id ="cpStandingDetailView" />
     
      <!-- See comment on XENOSCD-4279
      <mx:ViewStack id="dynaStack"  width="100%" verticalGap="0" horizontalGap="0">
	       <controls:CPStandingBeneficiaryInformation  width="100%" id ="beneficiaryInformation"  />
	       <controls:CPStandingDtcConfirm  width="100%"  id ="cpStandingDtcConfirm" />
	       <controls:CPStandingIncConfirm  width="100%"  id ="cpStandingIncConfirm" />
      </mx:ViewStack> -->
     	 <controls:CPStandingIncConfirm  width="100%"  id ="cpStandingIncConfirm" />
     	 <controls:CPSettlementView  width="100%" id = "cpSettlementView"/>
	 </mx:VBox>
 	</mx:Canvas>
    </mx:VBox>
    	
  
    
    <cntrls:XenosHTTPService id="httpService" url="ref/cpStandingEntryDispatch.action?method=viewInit"
            resultFormat="xml"  useProxy="false"
            fault="httpService_fault(event);"
            result="httpService_result(event)" showBusyCursor="true" method="POST">         
   </cntrls:XenosHTTPService>	
   
    
</mx:VBox>
