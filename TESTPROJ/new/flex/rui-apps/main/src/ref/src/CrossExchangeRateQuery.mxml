<?xml version="1.0" encoding="utf-8"?>

<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:containers="com.nri.rui.core.containers.*" xmlns:flexlib="http://code.google.com/p/flexlib/" xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:valdtrs="com.nri.rui.core.validators.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
	<mx:Script>
		<![CDATA[
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.ref.renderers.ExchangeRateAmendRenderer;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import mx.core.Application;
			
			    
    /**
	 * This method should be called on creationComplete of the datagrid 
	 */ 
	 private function bindDataGrid():void {
		qh.dgrid = resultSummary;
	}
		]]>
	</mx:Script>
	<mx:Script source="actionscripts/CrossExchangeRateQuery.as"/>
	
     <containers:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State> 
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <mx:Move  duration="400"/>
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    <frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
	
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />    	
    	<mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
    	<mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres';app.submitButtonInstance = submit;"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
	
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
	<mx:VBox width="100%" height="100%">
	<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
		
		<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('core.query.criteria')}" width="100%" height="100%" styleName="HDivideStyle" >
			<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.querycriteria')}" fontWeight="bold"/>
			<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
		
			<!--<flexlib:WindowShade id="ws1" tabChildren="{ws1.opened=false}" styleName="linkButtonWindowShade" label="Optional Fields - Group 1" width="100%">-->
			<mx:Grid width="100%" borderThickness="0">
	    		<mx:GridRow width="100%">
	        		<mx:GridItem width="20%" borderThickness="0">
	             		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.exchangeratetype')}" />
	        		</mx:GridItem>
	        		<mx:GridItem width="30%" borderThickness="0">
	             		<mx:ComboBox id="exchangeRateTypeList" labelField="label" prompt=""/>
	         		</mx:GridItem>
	         		<mx:GridItem width="20%" borderThickness="0">
	              		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.basedatefromto')}" />
	         		</mx:GridItem>
	         		<mx:GridItem width="30%" borderThickness="0">
	              		<mx:HBox>
	           				<mx:DateField id="baseDateFromStr"  formatString="YYYYMMDD" editable="true" width="90"/>
	           				<mx:DateField id="baseDateToStr" formatString="YYYYMMDD" editable="true" width="90"/>
				  		</mx:HBox>                         
	          		</mx:GridItem>                     
	    		</mx:GridRow>	                    
	    		<mx:GridRow width="100%">                     
	         		<mx:GridItem width="20%" borderThickness="0">
	            		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.localccy')}" />
	        		</mx:GridItem>
	        		<mx:GridItem width="30%" borderThickness="0">
	            		<cntrls:CurrencyHBox id="againstCcyBox"/>
	        		</mx:GridItem>   
	        		<mx:GridItem width="20%" borderThickness="0">
	            		<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.baseccy')}" />
	        		</mx:GridItem>
	        		<mx:GridItem width="30%" borderThickness="0">
	            		<cntrls:CurrencyHBox id="baseCcyBox"/>
	        		</mx:GridItem>						
	    		</mx:GridRow>

	   		</mx:Grid>
	
			<!-- Sort Order -->
			<flexlib:WindowShade id="ws3" tabChildren="{ws3.opened}" styleName="linkButtonWindowShade" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
	        	<mx:Grid width="100%" borderThickness="0">
	            	<mx:GridRow width="100%">
	                	<mx:GridItem width="100%" borderThickness="0">
	                    	<mx:HBox width="100%">
	                        	<mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()" width="200" itemRenderer="mx.controls.Label"></mx:ComboBox>
								<mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()" width="200" itemRenderer="mx.controls.Label"> </mx:ComboBox>
								<mx:ComboBox id="sortField3" labelField="label" width="200" itemRenderer="mx.controls.Label"> </mx:ComboBox>
	                    	</mx:HBox> 
	                	</mx:GridItem>                         
	            	</mx:GridRow>
	        	</mx:Grid>
	    	</flexlib:WindowShade>

			<mx:HBox width="100%" styleName="ButtonBackPanel">
   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')): this.dispatchEvent(new Event('cancelSubmit'))}" />
               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('queryReset')) : this.dispatchEvent(new Event('cancelReset'))}" />
	        </mx:HBox>

		</mx:VBox>
		
		</mx:Canvas>
				
		<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >			
	         <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" moduleId="ref"/>
		
		<cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()"> 
		    <cntrls:columns>		    	   
		    	    <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" id="imgRenderer" itemRenderer="{mode == 'query' ? new RendererFectory(ImgSummaryRenderer) : new RendererFectory(ExchangeRateAmendRenderer,mode)}" />
		    	    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.exchangeratetype')}" width="180" dataField="exchangeRateType" /> 
					<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.basedate')}" width="140" dataField="baseDate" />
					<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.localccy')}" width="165" dataField="againstCurrency" />					
					<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.baseccy')}" width="165" dataField="baseCurrency" />
					<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.calctype')}" width="165" textAlign="left" visible="false" dataField="calcType" />					
					<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('ref.crossexchangerate.label.rate')}" width="150" textAlign="right" dataField="exchangeRateStr" />	
           </cntrls:columns>
		 </cntrls:CustomDataGrid>
		</mx:VBox>
	</mx:HDividedBox>
    </mx:VBox>
    
    </mx:Canvas>  
		 
</containers:XenosQueryModule>
