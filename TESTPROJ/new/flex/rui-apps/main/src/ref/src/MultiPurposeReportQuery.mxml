<?xml version="1.0" encoding="utf-8"?>
<containers:XenosQueryModule xmlns:mx="http://www.adobe.com/2006/mxml" 
							xmlns:containers="com.nri.rui.core.containers.*" 
							xmlns:flexlib="http://code.google.com/p/flexlib/" 
							xmlns:cntrls="com.nri.rui.core.controls.*"
							xmlns:frmtrs="com.nri.rui.core.formatters.*" 
							xmlns:xenospopup="com.nri.rui.ref.popupImpl.*"
							layout="vertical" 
							percentWidth="100" 
							percentHeight ="100" 
							horizontalScrollPolicy="off" 
							verticalScrollPolicy="off"  creationComplete="loadAll()" >
							
    <mx:Metadata>
         [ResourceBundle("namResources")]
    </mx:Metadata>
     <mx:Metadata>
         [ResourceBundle("refResources")]
    </mx:Metadata>
     <mx:Metadata>
         [ResourceBundle("coreResources")]
    </mx:Metadata>
	<mx:Script>
		<![CDATA[
			import mx.controls.DataGrid;
			import com.nri.rui.core.RendererFectory;
			import com.nri.rui.core.renderers.ImgSummaryRenderer;
			import mx.containers.TitleWindow;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.dataGridClasses.DataGridColumn;	
			import com.nri.rui.core.controls.XenosAlert;
			import mx.events.DataGridEvent;
			import mx.controls.CheckBox;
			import mx.managers.PopUpManager;
			import com.nri.rui.core.utils.XenosStringUtils;
			import mx.utils.StringUtil;
			import mx.utils.ObjectUtil;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.core.Application;
					
			[Embed(source="../../assets/img/inf/addcolunm.png")]
		    
			[Bindable] private var icoColumns:Class;
            
            
            public static var popupColumns:TitleWindow = null;
            public var gridColumns:ArrayCollection = new ArrayCollection();
			private function changeCurrentState():void{
				currentState = "result";
				app.submitButtonInstance = null;
			}
			
			/**
			 * This method should be called on creationComplete of the datagrid 
			 */ 
			 private function bindDataGrid():void {
				qh.dgrid = dynaQueryResult;
				
			}
		]]>
	</mx:Script>
	
	<cntrls:XenosHTTPService id="DynamicExecution" 
    	url="ref/multiPurposeRptQryDispatch.action?method=generateUI"
        result="generateUIResultPage(event)" 
        fault="XenosAlert.error(Application.application.xResourceManager.getKeyValue('ref.msg.common.info.errorfaultstr', new Array(event.fault.faultString)))"
        resultFormat="e4x"
        showBusyCursor="true">
    </cntrls:XenosHTTPService>
	
	<cntrls:XenosHTTPService id="multiPurposeQueryRequest" 
         url="ref/multiPurposeRptQryDispatch.action?" 
         fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('inf.label.error.occurred') + event.fault.faultString)"
         result="LoadSummaryPage(event)" showBusyCursor="true" resultFormat="xml">
    </cntrls:XenosHTTPService>
    
	<mx:Script source="actionscripts/MultiPurposeReportQuery.as"/>
     <containers:states>
    	<mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
        	<mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
    	<mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;" />    	
	    <mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result'" />
	    <mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres'"/>    	
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    	
    	
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
		<mx:VBox width="100%" height="100%">
			<mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true">
				<mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
					<mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('ref.multipurpose.query.label.querycriteria')}" width="100%" height="100%" styleName="HDivideStyle" >
					<mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
					<cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
						<mx:Grid width="100%"  verticalGap="0" horizontalGap="0"> 
		                    <mx:GridRow width="100%">
		                        <mx:GridItem width="20%" borderThickness="0">
		                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('nam.multipurpose.query.label.sqlname')}" styleName="ReqdLabel" />
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0">
		                            <mx:ComboBox id="sqlName" prompt="Select" width="300" itemRenderer="mx.controls.Label"  change="sqlNameOnChangeMethod()"/>                           
		                        </mx:GridItem>
		                        <mx:GridItem width="20%" borderThickness="0" >                            
		                        </mx:GridItem>
		                        <mx:GridItem width="30%" borderThickness="0" >                           
		                        </mx:GridItem>   
		                    </mx:GridRow>
						</mx:Grid>
						<mx:Grid id="gridBase" width="100%"  verticalGap="0" horizontalGap="0" visible="true" includeInLayout="true"  paddingBottom="10">
						</mx:Grid>
						<mx:HBox width="100%" styleName="ButtonBackPanel">
			   	           <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" 
			   	           	id="submit" styleName="BtnStyle" click="this.submitQuery();" />
			               <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" 
			               	styleName="BtnStyle" click="this.resetQuery();" />
						</mx:HBox>
					</mx:VBox>
				</mx:Canvas>
				<mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >				
		        	<cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" xlsFunction="dispatchXlsEvent" previousFunction="doPrevPage" nextFunction="doNextPage" width="100%" creationComplete="hidePDFReport();"/>
					<cntrls:CustomDataGrid id="dynaQueryResult" width="100%" height="100%" sortableColumns="true" variableRowHeight="true" horizontalScrollPolicy="auto" headerRelease="dataGrid_headerRelease(event)" creationComplete="bindDataGrid()" />		
				</mx:VBox>
			</mx:HDividedBox>
		</mx:VBox>
	</mx:Canvas>  
</containers:XenosQueryModule>
