<?xml version="1.0" encoding="utf-8"?>

<containers:XenosQueryModule xmlns:containers="com.nri.rui.core.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml"
                            xmlns:cntrls="com.nri.rui.core.controls.*" xmlns:xenospopup="com.nri.rui.ref.popupImpl.*" 
                            xmlns:flexlib="http://code.google.com/p/flexlib/"
                            xmlns:frmtrs="com.nri.rui.core.formatters.*" xmlns:valdtrs="com.nri.rui.core.validators.*"
                            layout="vertical" percentWidth="100" percentHeight ="100" horizontalScrollPolicy="off" verticalScrollPolicy="off" creationComplete="focusManager.setFocus(submit);">
    
    <mx:Script source="actionscripts/ElectionQuery.as" />
    <mx:Script>
        <![CDATA[
            import mx.events.DataGridEvent;
            import com.nri.rui.core.controls.XenosAlert;
            import com.nri.rui.core.controls.CustomDataGrid
            /**
             * This method should be called on creationComplete of the datagrid 
             */ 
             private function bindDataGrid():void {
                qh.dgrid = resultSummary;
            }
            /**
            * Retrieve and return the Instrument Name for dataTip.
            */
            private function getSecurityName(item:Object):String {
                return item.instrumentName;
            }
            private function getAllotmentInstCode(item:Object, column:DataGridColumn):String{
                return item.allotmentCcy;
            }
            private function getInstrumentCode(item:Object, column:DataGridColumn):String{
                return item.instrumentCode;
            }
            private function getAllotmentInstName(item:Object):String {
                return item.allotmentCcyName;
            }
           private function getCashElectionDisp(item:Object, column:DataGridColumn):String {
                    return item.cashElectionDisp;
          
            }
            private function getStockElectionDisp(item:Object, column:DataGridColumn):String {
              return item.stockElectionDisp;
             
            }
            private function getFundAccountNo(item:Object, column:DataGridColumn):String {
              return item.fundAccountNoDisp;
             
            }
            public function formatString(object:TextInput):void{
                numVal1.source = object;
                numVal1.handleNumericField(numberFormatter)
            }
            
            public function showAlert(data:Object):void{
                trace("in focusin... showAlert");
                var positionConsistencyFlag : String = data.positionConsistencyFlag;
               // if(data.modeOfQuery == "entry"){
               //     if(data.positionConsistencyFlag == "N"){
                //        XenosAlert.info("Location position and Ownership position are inconsistent.");
                //    }
                //}
            }
           /**
            *  datagrid header release event handler to handle datagridcolumn sorting
            */
            public function dataGrid_headerRelease(evt:DataGridEvent):void {                
                var dg:CustomDataGrid = CustomDataGrid(evt.currentTarget);
                sortUtil.clickedColumn = dg.columns[evt.columnIndex];   
            } 
            
        ]]>
    </mx:Script>
    
    <containers:states>
        <mx:State name="result">
            <mx:SetProperty target="{qry}" name="width" value="0%"/>
            <mx:SetProperty target="{rslt}" name="width" value="100%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{null}"/>
        </mx:State>
        <mx:State name="qryres">
            <mx:SetProperty target="{qry}" name="width" value="50%"/>
            <mx:SetProperty target="{rslt}" name="width" value="50%"/>
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
        <mx:State name="">
            <mx:SetProperty target="{app}" name="submitButtonInstance" value="{submit}"/>
        </mx:State>
    </containers:states>
    <!-- Define Transition array with one Transition object.-->
    <containers:transitions>
        <!-- A transition for changing from any state to any state. -->
        <mx:Transition id="qryTransition" fromState="*" toState="*">
            <!-- Define a Parallel effect as the top-level effect.-->
            <mx:Parallel id="t1" targets="{[qry,rslt]}">
                <!-- Define a Move and Resize effect.-->
                <mx:Move  duration="400"/>
                <!--<mx:Resize duration="400"/>-->
            </mx:Parallel>
        </mx:Transition>
    </containers:transitions>
    
    <frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
    <valdtrs:XenosNumberValidator id="numVal1" requiredFieldError=""
        invalidCharError="Please enter a valid value for Rate" exceedsMaxError="15 digits are allowed before decimal point" negativeError="Please enter a valid value for Quantity" separationError="" property="text" 
        allowNegative="false" domain="real" lowerThanMinError="" maxValue="999999999999999" minValue="" invalidFormatCharsError="Please enter a valid value for Rate" decimalPointCountError="Please enter a valid value for Quantity" precision="3" precisionError="3 digits are allowed after decimal point" />
    
    <valdtrs:XenosNumberValidator id="numSecurityQty" required="false" requiredFieldError="" source="{underlyingSecurityQty}"
        invalidCharError="Please enter a valid value for Quantity" exceedsMaxError="15 digits are allowed before decimal point" negativeError="Please enter a valid value for Quantity" separationError="" property="text" 
        allowNegative="false" domain="real" lowerThanMinError="" maxValue="999999999999999" minValue="" invalidFormatCharsError="Please enter a valid value for Rate" decimalPointCountError="Please enter a valid value for Quantity" precision="3" precisionError="3 digits are allowed after decimal point" />
        
    
    <mx:VBox width="100%" verticalGap="0" horizontalGap="0" id="screenNavigater">    
    <mx:HBox width="100%" styleName="ExCoBgPanel">
        <mx:Image source="@Embed('../../assets/img/show_query.png')" toolTip="Query" buttonMode="true" click="currentState='';app.submitButtonInstance = submit;"  />       
        <mx:Image source="@Embed('../../assets/img/show_result.png')" toolTip="Result" buttonMode="true" click="currentState='result';app.submitButtonInstance = entrysubmit;" />
        <mx:Image source="@Embed('../../assets/img/show_query_result.png')" toolTip="QueryResult" buttonMode="true" click="currentState='qryres';"/>        
    </mx:HBox>
    <mx:HRule strokeColor="#d2d9dc" strokeWidth="1" width="100%" />
    </mx:VBox>
    
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto"  verticalScrollPolicy="auto">
    <mx:VBox width="100%" height="100%">
    <mx:HDividedBox id="hdbox1" width="100%" height="100%" styleName="Padding4" liveDragging="true" creationComplete="{this.loadAll()}"  >
    
    <mx:Canvas id="qry" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
        <mx:VBox label="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" width="100%" height="100%" styleName="HDivideStyle" >
            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('inf.title.search.criteria')}" fontWeight="bold"/>
            <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
            <mx:Grid width="100%" borderThickness="0">
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.rightsconditionrefno')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="conditionReferenceNo" restrict="{Globals.INPUT_PATTERN}"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.eventtype')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                       <mx:ComboBox id="eventTypes" width="160"/>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.rightsdetailrefno')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="detailReferenceNo" restrict="{Globals.INPUT_PATTERN}"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.electionstatus')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                       <mx:ComboBox id="electionStatus" width="160"/>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.fundcode')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:FundPopUpHbox id="fundPopUp"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.fundaccountno')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:AccountPopUpHbox id="actPopUp" retContextItem="{returnContextItem}" recContextItem="{populateContext()}"/>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.securitycode')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:InstrumentPopUpHbox id="instPopUp"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.allotmentccy')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <xenospopup:InstrumentPopUpHbox id="allotmentCcy"/>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.quantityofunderlyingsecurity')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:TextInput id="underlyingSecurityQty" restrict="{Globals.INPUT_PATTERN}" focusOut="numSecurityQty.handleNumericField(numberFormatter)"/>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text=""/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.exdatefromto')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox width="100%">
                               <mx:DateField id="exdateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                               <mx:DateField id="exdateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.recorddatefromto')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox width="100%">
                               <mx:DateField id="recdateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                               <mx:DateField id="recdateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.deadlinedatefromto')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox width="100%">
                               <mx:DateField id="deadlineDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                               <mx:DateField id="deadlineDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.expirydatefromto')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox width="100%">
                               <mx:DateField id="expiryDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                               <mx:DateField id="expiryDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>
                    </mx:GridItem>                         
                </mx:GridRow>
                <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.paymentdatefromto')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox width="100%">
                               <mx:DateField id="paymentDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                               <mx:DateField id="paymentDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>
                    </mx:GridItem> 
                    <mx:GridItem width="20%" borderThickness="0">
                        <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.electiondatefromto')}"/>
                    </mx:GridItem>
                    <mx:GridItem width="30%" borderThickness="0">
                        <mx:HBox width="100%">
                               <mx:DateField id="electionDateFrom"  formatString="YYYYMMDD" editable="true" width="90"/>
                               <mx:DateField id="electionDateTo" formatString="YYYYMMDD" editable="true" width="90"/>
                        </mx:HBox>
                    </mx:GridItem>                         
                </mx:GridRow>
            </mx:Grid>
            
            <flexlib:WindowShade id="ws1" tabChildren="{ws1.opened}" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.label.sortorder.fields')}" opened="true" width="100%">
            <mx:Grid width="100%" borderThickness="0">
                <mx:GridRow width="100%">
                    <mx:GridItem width="100%" borderThickness="0">
                        <mx:HBox width="100%">
                            <mx:ComboBox id="sortField1" labelField="label" change="sortOrder1Update()" width="160"/>
                            <mx:ComboBox id="sortField2" labelField="label" change="sortOrder2Update()" width="160"/>
                            <mx:ComboBox id="sortField3" labelField="label" width="160"/>
                        </mx:HBox> 
                    </mx:GridItem>                         
                </mx:GridRow>
            </mx:Grid>
            </flexlib:WindowShade>
            
            <mx:HBox width="100%" styleName="ButtonBackPanel">
                <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="submit" styleName="BtnStyle" click="{this.mode == 'query' ?  this.dispatchEvent(new Event('querySubmit')) : this.dispatchEvent(new Event('amendSubmit'))}" />
                <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.mode == 'query' ? this.dispatchEvent(new Event('queryReset')) : this.dispatchEvent(new Event('amendReset')) }" />
            </mx:HBox>
                    
        </mx:VBox>
    </mx:Canvas>
    
    <mx:VBox width="0%" height="100%" id="rslt" horizontalScrollPolicy="off" verticalScrollPolicy="off" styleName="HDivideStyle" >          
        <cntrls:QueryResultHeader id="qh" printFunction="dispatchPrintEvent" pdfFunction="dispatchPdfEvent" xlsFunction="dispatchXlsEvent" previousFunction="dispatchPrevEvent" nextFunction="dispatchNextEvent" startIndex="{this.mode == 'query' ? 1 : 2}"/>
        <cntrls:CustomDataGrid id="resultSummary" width="100%" height="100%" dataProvider="{queryResult}" sortableColumns="{this.mode =='query'}" variableRowHeight="true" horizontalScrollPolicy="auto" creationComplete="bindDataGrid()" editable="true" headerRelease="dataGrid_headerRelease(event)"> 
            <cntrls:columns>
                <mx:DataGridColumn headerText="" width="40" draggable="false" resizable="false" editable="false" itemRenderer="com.nri.rui.core.renderers.ImgSummaryRenderer" sortable="false"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.rightsconditionrefno')}" width="130" dataField="conditionReferenceNo" itemRenderer="com.nri.rui.cax.renderers.RightConditionQueryDetailRenderer" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.rightsdetailrefno')}" width="130" dataField="detailReferenceNo" itemRenderer="com.nri.rui.cax.renderers.RightsDetailViewRenderer" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.eventtype')}" dataField="subEventTypeDescription" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.fundcode')}" dataField="fundCode" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.fundname')}" dataField="fundName" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.fundaccountno')}" dataField="fundAccountPk" labelFunction="getFundAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.fundaccountname')}" dataField="accountName" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.securitycode')}" dataField="instrumentPk" showDataTips="true" dataTipFunction="getSecurityName" labelFunction="getInstrumentCode" itemRenderer="com.nri.rui.core.renderers.AdvInstrumentDetailsRenderer" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.securityname')}" dataField="instrumentName" visible="true" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.label.alternate.instrumentcode')}" dataField="alternateSecurity" width="100" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.ownershipquantity')}" textAlign="right" dataField="ownershipQuantityStr" editable="false" sortCompareFunction="sortUtil.sortNumeric" />
                <!--<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.locationquantity')}" textAlign="right" dataField="locationQuantityStr" editable="false" sortCompareFunction="sortUtil.sortNumeric" /> -->
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.allotmentccy')}" dataField="allottedInstrumentPk" editable="false" labelFunction="getAllotmentInstCode" showDataTips="true" dataTipFunction="getAllotmentInstName" itemRenderer="com.nri.rui.core.renderers.AdvInstrumentDetailsRenderer" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.allotmentccyname')}" dataField="allotmentCcyName" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.cashelection')}" dataField="cashElectionStr" textAlign="right"  editable="{this.mode !='query'}" sortCompareFunction="sortUtil.sortNumeric">
                <mx:itemRenderer >
                        <mx:Component>
                            <mx:TextInput  focusOut="{outerDocument.formatString(this);}" editable="{outerDocument.mode != 'query'}" >
                                <mx:Script>
                                    <![CDATA[
                                        public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            this.text = data.cashElectionStr;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                                return;
                                            }
                                            // set the controls with this data
                                            } 

                                    ]]>
                                </mx:Script>
                            </mx:TextInput>
                        </mx:Component>
                    </mx:itemRenderer>
                </mx:DataGridColumn>    
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.stockelection')}" dataField="stockElectionStr" textAlign="right" editable="{this.mode !='query'}" rendererIsEditor="true" sortCompareFunction="sortUtil.sortNumeric">
                <mx:itemRenderer >
                        <mx:Component>
                            <mx:TextInput focusOut="{outerDocument.formatString(this);}" editable="{outerDocument.mode != 'query'}">
                                <mx:Script>
                                    <![CDATA[
                                        public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            this.text = data.stockElectionStr;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                                return;
                                            }
                                            // set the controls with this data
                                            } 

                                    ]]>
                                </mx:Script>
                            </mx:TextInput>
                        </mx:Component>
                    </mx:itemRenderer>
                </mx:DataGridColumn>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.electionstatus')}" dataField="electionStatus" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.deadlinedate')}" dataField="deadlineDateStr" visible="false" editable="false" sortCompareFunction="sortUtil.sortString"/>
                <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.optstockdiv.label.expirydate')}" dataField="expiryDateStr" editable="false" sortCompareFunction="sortUtil.sortString"/>
            </cntrls:columns>
        </cntrls:CustomDataGrid>
        
        <mx:HBox width="100%" styleName="ButtonBackPanel" includeInLayout="{this.mode == 'query' ? false : true}" visible="{this.mode == 'query' ? false : true}">
            <cntrls:XenosButton label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.submit')}" id="entrysubmit" styleName="BtnStyle" click="showEntryAmendConfirmModule(event)" />
            <mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.reset')}" styleName="BtnStyle" click="{this.resetElectionEntryAmendForm(event,this.mode) }" />
        </mx:HBox>    
    </mx:VBox>          
    </mx:HDividedBox>
    </mx:VBox>
    </mx:Canvas>
</containers:XenosQueryModule>
