<?xml version="1.0" encoding="utf-8"?>

<containers:XenosEntryModule xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:containers="com.nri.rui.core.containers.*" 
    xmlns:flexlib="http://code.google.com/p/flexlib/"
    xmlns:cntrls="com.nri.rui.core.controls.*"
    xmlns:frmtrs="com.nri.rui.core.formatters.*"
    xmlns:valdtrs="com.nri.rui.core.validators.*"
    xmlns:controls="*" 
    xmlns:xenospopup="com.nri.rui.ref.popupImpl.*"  
    horizontalScrollPolicy="auto" verticalScrollPolicy="auto" width="100%" height="100%">

    <mx:Script source="actionscripts/EntitlementBulkAmend.as"/>
    <mx:Script>
        <![CDATA[ 
        	import mx.controls.TextInput;  
         
            private function getInstrumentCode(item:Object, column:DataGridColumn):String{
                
                return item.securityCode;
            }
            
            private function getAllotmentInstCode(item:Object, column:DataGridColumn):String{
                return item.allottedSecurityCode;
            }
            
            public function formatSecBalance(event:FocusEvent):void{
		        var targetObj:TextInput = TextInput(event.currentTarget);
		        secBalVal1.source = targetObj;
		        secBalVal1.handleNumericField(numberFormatter);
		    }
		    
		    public function formatAllotQnty(event:FocusEvent):void{
		        var targetObj:TextInput = TextInput(event.currentTarget);
		        allotQntyVal1.source = targetObj;
		        allotQntyVal1.handleNumericField(numberFormatter);
		    }
		    
		    public function formatFracShare(event:FocusEvent):void{
		        var targetObj:TextInput = TextInput(event.currentTarget);
		        fracShareVal1.source = targetObj;
		        fracShareVal1.handleNumericField(numberFormatter);
		    }
		    
		    public function formatGrossAmnt(event:FocusEvent):void{
		        var targetObj:TextInput = TextInput(event.currentTarget);
		        grossAmntVal1.source = targetObj;
		        grossAmntVal1.handleNumericField(numberFormatter);
		    }
		    
		    public function formatTaxAmnt(event:FocusEvent):void{
		        var targetObj:TextInput = TextInput(event.currentTarget);
		        taxAmntVal1.source = targetObj;
		        taxAmntVal1.handleNumericField(numberFormatter);
		    }
		    
		    public function formatNetAmnt(event:FocusEvent):void{
		        var targetObj:TextInput = TextInput(event.currentTarget);
		        netAmntVal1.source = targetObj;
		        netAmntVal1.handleNumericField(numberFormatter);
		    }
		    
		    public function formatPrice(event:FocusEvent):void{
		        var targetObj:TextInput = TextInput(event.currentTarget);
		        priceVal1.source = targetObj;
		        priceVal1.handleNumericField(numberFormatter);
		    }
		    
		    public function formatBookVal(event:FocusEvent):void{
		        var targetObj:TextInput = TextInput(event.currentTarget);
		        bookVal.source = targetObj;
		        bookVal.handleNumericField(numberFormatter);
		    }
		    
		    private function getFundAccountNo(item:Object, column:DataGridColumn):String{
                    return item.fundAccountNo;
            }
            
            private function getBankAccountNo(item:Object, column:DataGridColumn):String{
                    return item.bankAccountNo;
            }
		    
            ]]>
    </mx:Script>
    
    <cntrls:XenosHTTPService id="calculationBookValRequest" 
         					url="cax/entitlementBulkAmendDispatch.action?" 
         					fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('slr.label.erroroccured') + event.fault.faultString)"
         					result="loadCalculatedBookVal(event)"  
         					method="POST"
         					showBusyCursor="true"/>
         					
    <cntrls:XenosHTTPService id="calculationAmountOrQuantity" 
         					url="cax/entitlementBulkAmendDispatch.action?" 
         					fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('slr.label.erroroccured') + event.fault.faultString)"
         					result="loadGrossAmntOrQnty(event)"  
         					method="POST"
         					showBusyCursor="true"/>
         					
 	<cntrls:XenosHTTPService id="calculationNetAmount" 
         					url="cax/entitlementBulkAmendDispatch.action?" 
         					fault="XenosAlert.error(this.parentApplication.xResourceManager.getKeyValue('slr.label.erroroccured') + event.fault.faultString)"
         					result="loadNetAmount(event)"  
         					method="POST"
         					showBusyCursor="true"/>
 
	<frmtrs:XenosNumberFormatter id="numberFormatter" useThousandsSeparator="true" />
    <valdtrs:XenosNumberValidator id="secBalVal1" 
        						  invalidCharError="Please enter a valid value for Security Balance" 
        						  exceedsMaxError="15 digits are allowed before decimal point" 
        						  negativeError="Please enter a valid value Security Balance" 
        						  separationError="" 
        						  property="text" 
        						  allowNegative="true" 
        						  domain="real" lowerThanMinError="" 
        						  maxValue="999999999999999" minValue="-999999999999999" 
        						  invalidFormatCharsError="Please enter a valid value for Security Balance" 
        						  decimalPointCountError="Please enter a valid value for Security Balance" 
        						  precision="3" 
        						  precisionError="3 digits are allowed after decimal point" />
        					
    <valdtrs:XenosNumberValidator id="allotQntyVal1" 
        						  invalidCharError="Please enter a valid value for Alloted Quantity" 
        						  exceedsMaxError="15 digits are allowed before decimal point" 
        						  negativeError="Please enter a valid value for Alloted Quantity" 
        						  separationError="" 
        						  property="text" 
        						  allowNegative="true" 
        						  domain="real" lowerThanMinError="" 
        						  maxValue="999999999999999" minValue="-999999999999999" 
        						  invalidFormatCharsError="Please enter a valid value for Alloted Quantity" 
        						  decimalPointCountError="Please enter a valid value for Alloted Quantity" 
        						  precision="0" 
        						  precisionError="No digits are allowed after decimal point" />
    <valdtrs:XenosNumberValidator id="fracShareVal1" 
        						  invalidCharError="Please enter a valid value for Fractional Share" 
        						  exceedsMaxError="15 digits are allowed before decimal point" 
        						  negativeError="Please enter a valid value for Fractional Share" 
        						  separationError="" 
        						  property="text" 
        						  allowNegative="true" 
        						  domain="real" lowerThanMinError="" 
        						  maxValue="999999999999999" minValue="-999999999999999" 
        						  invalidFormatCharsError="Please enter a valid value for Fractional Share" 
        						  decimalPointCountError="Please enter a valid value for Fractional Share" 
        						  precision="4" 
        						  precisionError="4 digits are allowed after decimal point" />   
    <valdtrs:XenosNumberValidator id="grossAmntVal1" 
        						  invalidCharError="Please enter a valid value for Gross Amount" 
        						  exceedsMaxError="15 digits are allowed before decimal point" 
        						  negativeError="Please enter a valid value for Gross Amount" 
        						  separationError="" 
        						  property="text" 
        						  allowNegative="true" 
        						  domain="real" lowerThanMinError="" 
        						  maxValue="999999999999999" minValue="-999999999999999" 
        						  invalidFormatCharsError="Please enter a valid value for Gross Amount" 
        						  decimalPointCountError="Please enter a valid value for Gross Amount" 
        						  precision="3" 
        						  precisionError="3 digits are allowed after decimal point" />
    <valdtrs:XenosNumberValidator id="taxAmntVal1" 
        						  invalidCharError="Please enter a valid value for Tax Amount" 
        						  exceedsMaxError="15 digits are allowed before decimal point" 
        						  negativeError="Please enter a valid value for Tax Amount" 
        						  separationError="" 
        						  property="text" 
        						  allowNegative="true" 
        						  domain="real" lowerThanMinError="" 
        						  maxValue="999999999999999" minValue="-999999999999999" 
        						  invalidFormatCharsError="Please enter a valid value for Tax Amount" 
        						  decimalPointCountError="Please enter a valid value for Tax Amount" 
        						  precision="3" 
        						  precisionError="3 digits are allowed after decimal point" />    						      						   						  
   <valdtrs:XenosNumberValidator id="netAmntVal1" 
        						  invalidCharError="Please enter a valid value for Net Amount" 
        						  exceedsMaxError="15 digits are allowed before decimal point" 
        						  negativeError="Please enter a valid value for Net Amount" 
        						  separationError="" 
        						  property="text" 
        						  allowNegative="true" 
        						  domain="real" lowerThanMinError="" 
        						  maxValue="999999999999999" minValue="-999999999999999" 
        						  invalidFormatCharsError="Please enter a valid value for Net Amount" 
        						  decimalPointCountError="Please enter a valid value for Net Amount" 
        						  precision="3" 
        						  precisionError="3 digits are allowed after decimal point" />
    <valdtrs:XenosNumberValidator id="priceVal1" 
        						  invalidCharError="Please enter a valid value for Price" 
        						  exceedsMaxError="9 digits are allowed before decimal point" 
        						  negativeError="Please enter a valid value for Price" 
        						  separationError="" 
        						  property="text" 
        						  allowNegative="false" 
        						  domain="real" lowerThanMinError="" 
        						  maxValue="999999999" minValue="" 
        						  invalidFormatCharsError="Please enter a valid value for Price" 
        						  decimalPointCountError="Please enter a valid value for Price" 
        						  precision="9" 
        						  precisionError="9 digits are allowed after decimal point" />   
    <valdtrs:XenosNumberValidator id="bookVal" 
        						  invalidCharError="Please enter a valid value for Book Value" 
        						  exceedsMaxError="9 digits are allowed before decimal point" 
        						  negativeError="Please enter a valid value for Book Value" 
        						  separationError="" 
        						  property="text" 
        						  allowNegative="true" 
        						  domain="real" lowerThanMinError="" 
        						  maxValue="999999999999999" minValue="-999999999999999" 
        						  invalidFormatCharsError="Please enter a valid value for Book Value" 
        						  decimalPointCountError="Please enter a valid value for Book Value" 
        						  precision="3" 
        						  precisionError="3 digits are allowed after decimal point" />    						   						       						  
        						   
    <mx:Canvas width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" creationComplete="loadAll();">
        <mx:ViewStack id="detailAmend" width="100%" >                               
        <mx:VBox width="100%" height="100%" id="amend" >                
         <cntrls:XenosErrors id="errPage" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
            <mx:Grid width="100%">
                <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.rightsconditionrefno')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{caEventRefNo}"/>
                        </mx:GridItem>  
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.eventtype')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{eventType}"/>
                        </mx:GridItem> 
                        </mx:GridRow>
                    <mx:GridRow width="100%">                                              
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.label.securityCode')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{secCode}" />
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.allotedseccode')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{allotSecCode}" />
                        </mx:GridItem>
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.exdate')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{exDate}" />
                        </mx:GridItem>         
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.paymentdate')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{paymentDate}" />
                        </mx:GridItem>
                    </mx:GridRow>
            </mx:Grid> 
            
            
            <mx:HBox width="100%" styleName="ButtonBackPanel" visible="{priceAllotSecVar}" includeInLayout="{priceAllotSecVar}">
             	<mx:VBox width="50%">
                   <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.exdateprice.underlyngsec')}" fontWeight="bold"/>
                   <mx:HBox width="100%">
                   		<mx:TextInput id="priceUnder" width="90" textAlign="right" focusOut="formatPrice(event)"/>
                   		<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.copy')}" styleName="BtnStyle" click="copyUnderSecPrice()"/>
                   </mx:HBox>	
                </mx:VBox>
                <mx:VBox width="50%">
                   <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.exdateprice.allotedsec')}" fontWeight="bold"/>
                   <mx:HBox width="100%">
                   		<mx:TextInput id="priceAllot" width="90" textAlign="right" focusOut="formatPrice(event)"/>
                   		<mx:Button label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.copy')}" styleName="BtnStyle" click="copyAllotSecPrice()"/>
                   </mx:HBox>		
                </mx:VBox>
             </mx:HBox>


            <mx:DataGrid id="bulkAmend" width="100%" height="100%" dataProvider="{summaryResult}" sortableColumns="false" variableRowHeight="true" horizontalScrollPolicy="auto" >
                <mx:columns>
                    <mx:DataGridColumn textAlign="center" headerText="" dataField="selected" width="40" draggable="false" resizable="false" itemRenderer="com.nri.rui.core.renderers.SelectItem" headerRenderer="com.nri.rui.core.renderers.SelectAllItem" sortable="false" />
                    <mx:DataGridColumn id= "refNoDg" textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.label.detailrefno')}" dataField="detailReferenceNo" showDataTips="true" width="100" itemRenderer="com.nri.rui.cax.renderers.RightsDetailViewRenderer"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightscondition.label.lmoffice')}" dataField="lmOfficeId" showDataTips="true"/>
                    <mx:DataGridColumn id= "fundCodeDg" textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.fundcode')}" dataField="fundCode" showDataTips="true" width="100" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer"/>
                    <mx:DataGridColumn id= "fundAcDg" textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.label.fundAccount')}" dataField="fundAccountPk" showDataTips="true" width="100" labelFunction="getFundAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer" />
                    <mx:DataGridColumn id= "bankCodeDg" textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.bankno')}" dataField="bankCode" showDataTips="true" width="100" itemRenderer="com.nri.rui.core.renderers.FinancialInstitutionDetailsRenderer" />
                    <mx:DataGridColumn id= "bankAcDg" textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.label.bankAccount')}" dataField="bankAccountPk" showDataTips="true" width="100" labelFunction="getBankAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer"/>
                    <mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.allotedseccode')}" visible="{allotSecVar}" dataField="allottedInstrument" editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                        	<mx:Component>
                        	<mx:VBox width="100%">
							<cntrls:CurrencyHBox id="ccyBox" creationComplete="load()">
				            <mx:Script>
						      <![CDATA[
			
			
								import mx.events.FlexEvent;
								import mx.controls.dataGridClasses.DataGridListData;
			
								//private var _data:Object;
								public function refreshData(event:FlexEvent):void{
									data.allottedInstrument = this.ccyBox.ccyText.text;
								}
			
								 public override function set data(value:Object):void{
								    // This will fire off the FlexEvent.DATA_CHANGE Event
			
								    super.data = value;
								    // if the value is null this cell is empty
								    if(value == null){
								    // clear all the controls
								    return;
								    }
								    this.ccyBox.ccyText.text = data.allottedInstrument;
			
								    // set the controls with this data
								    }
			
								  public function load():void{
									ccyBox.ccyText.addEventListener(FlexEvent.VALUE_COMMIT,refreshData);
			                                          } 
			
								]]>
						    </mx:Script>
				  		</cntrls:CurrencyHBox>
				  		</mx:VBox>
						</mx:Component>
					</mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id= "secBalDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.securitybalance')}" visible="{secBalVar}" dataField="securityBalance" editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:TextInput focusOut="outerDocument.formatSecBalance(event)" valueCommit="refreshData(event)" creationComplete="init()" textAlign="right">
                                <mx:Script>
                                    
                                    <![CDATA[
                                    	import mx.events.FlexEvent;
                                        import mx.controls.dataGridClasses.DataGridListData;
                                        
                                        //private var _data:Object;
                                        public function refreshData(event:FlexEvent):void{
                                        	data.securityBalance = this.text;
                                        }

                                         public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                            return;
                                            }
                                            this.text = data.securityBalance;
                                            
                                            // set the controls with this data
                                            } 
                                        
                                    ]]>
                                </mx:Script>
                                </mx:TextInput> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id= "allotQntyDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.allotedqnty')}" visible="{allotQntyVar}" dataField="allottedQuantity"  editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                            <mx:TextInput focusOut="outerDocument.formatAllotQnty(event)" valueCommit="refreshData(event)" creationComplete="init()" textAlign="right">
                                <mx:Script>
                                    
                                    <![CDATA[
                                    	import mx.collections.ArrayCollection;
                                    	import com.nri.rui.core.controls.XenosAlert;
                                    	import mx.events.FlexEvent;
                                        import mx.controls.dataGridClasses.DataGridListData;
                                        
                                        public function refreshData(event:FlexEvent):void{
                                        	data.allottedQuantity = this.text;
                                        }
                                        
                                         public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                            return;
                                            }
                                            this.text = data.allottedQuantity;
                                            // set the controls with this data
                                            } 
                                          
                                        
                                    ]]>
                                </mx:Script>
                                </mx:TextInput> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id= "fracShareDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.fracshare')}" visible="{fracShareVar}" dataField="fractionalShare"  editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:TextInput focusOut="outerDocument.formatFracShare(event)" valueCommit="refreshData(event)" creationComplete="init()" textAlign="right">
                                <mx:Script>
                                    
                                    <![CDATA[
                                    	import mx.events.FlexEvent;
                                        import mx.controls.dataGridClasses.DataGridListData;
                                        
                                        public function refreshData(event:FlexEvent):void{
                                        	data.fractionalShare = this.text;
                                        }
                                        
                                         public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                            return;
                                            }
                                            this.text = data.fractionalShare;
                                            // set the controls with this data
                                            } 
                                        
                                    ]]>
                                </mx:Script>
                                </mx:TextInput> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id= "grosAmntDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.grossamount')}" visible="{grosAmntVar}" dataField="grossAmount"  editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                            <mx:TextInput focusOut="outerDocument.formatGrossAmnt(event)" valueCommit="refreshData(event)" creationComplete="init()" textAlign="right">
                                <mx:Script>
                                    
                                    <![CDATA[
                                    	import mx.events.FlexEvent;
                                        import mx.controls.dataGridClasses.DataGridListData;
                                        
                                        public function refreshData(event:FlexEvent):void{
                                        	data.grossAmount = this.text;
                                        }
                                        
                                         public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                            return;
                                            }
                                            this.text = data.grossAmount;
                                            // set the controls with this data
                                            } 
                                        
                                    ]]>
                                </mx:Script>
                                </mx:TextInput>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id= "taxAmntDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.taxamount')}" visible="{taxAmntVar}" dataField="taxAmount"  editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:TextInput focusOut="outerDocument.formatTaxAmnt(event)" valueCommit="refreshData(event)" creationComplete="init()" textAlign="right">
                                <mx:Script>
                                    
                                    <![CDATA[
                                    	import mx.events.FlexEvent;
                                        import mx.controls.dataGridClasses.DataGridListData;
                                        import com.nri.rui.core.controls.XenosAlert;
                                        
                                        public function refreshData(event:FlexEvent):void{
                                        	data.taxAmount = this.text;
                                        }
                                        
                                         public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                            return;
                                            }
                                            if(data.taxAmount == null || data.taxAmount == ''){
                                            	this.enabled = false;
                                            }
                                            else{
                                            	this.enabled = true;
                                            }
                                            this.text = data.taxAmount;
                                            // set the controls with this data
                                            } 
                                        
                                    ]]>
                                </mx:Script>
                                </mx:TextInput> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id= "netAmntDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.netamount')}" dataField="netAmount" textAlign="right" visible="{netAmntVar}" width="150" />
                    <mx:DataGridColumn id= "currBookValDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.currentbookvalue')}" dataField="currentBookValue" textAlign="right" visible="{currentBookValVar}" width="150" />
                    <mx:DataGridColumn id= "priceUnderSecDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.exdateprice.underlyngsec')}" visible="{priceUnderSecVar}" dataField="underlineSecurityPrice"  editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:TextInput focusOut="outerDocument.formatPrice(event)" valueCommit="refreshData(event)" creationComplete="init()" textAlign="right">
                                <mx:Script>
                                    
                                    <![CDATA[
                                    	import mx.events.FlexEvent;
                                        import mx.controls.dataGridClasses.DataGridListData;
                                        
                                        public function refreshData(event:FlexEvent):void{
                                        	data.underlineSecurityPrice = this.text;
                                        }
                                        
                                         public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                            return;
                                            }
                                            this.text = data.underlineSecurityPrice;
                                            // set the controls with this data
                                            } 
                                        
                                    ]]>
                                </mx:Script>
                                </mx:TextInput> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id= "priceAllotSecDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.exdateprice.allotedsec')}" visible="{priceAllotSecVar}" dataField="allottedSecurityPrice"  editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:TextInput focusOut="outerDocument.formatPrice(event)" valueCommit="refreshData(event)" creationComplete="init()" textAlign="right">
                                <mx:Script>
                                    
                                    <![CDATA[
                                    	import mx.events.FlexEvent;
                                        import mx.controls.dataGridClasses.DataGridListData;
                                        
                                        public function refreshData(event:FlexEvent):void{
                                        	data.allottedSecurityPrice = this.text;
                                        }
                                        
                                         public override function set data(value:Object):void{
                                            // This will fire off the FlexEvent.DATA_CHANGE Event
                                            
                                            super.data = value;
                                            // if the value is null this cell is empty
                                            if(value == null){
                                            // clear all the controls
                                            return;
                                            }
                                            this.text = data.allottedSecurityPrice;
                                            // set the controls with this data
                                            } 
                                        
                                    ]]>
                                </mx:Script>
                                </mx:TextInput> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id="bookValUnderSecDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.bookval.underlyngsec')}" visible="{bookValUnderSecVar}" dataField="underlineSecurityBookValue"  editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                            <mx:HBox horizontalScrollPolicy="off">	                            		
                            <mx:TextInput id="bookvalUndersecTxt" focusOut="outerDocument.formatBookVal(event)" width="100" change="takeInput(event);" textAlign="right">
                                <mx:Script>
                                    
                                    		<![CDATA[
			                                         import com.nri.rui.core.utils.XenosStringUtils;
			                                         public override function set data(value:Object):void {
			                                            super.data = value;
			                                            if(XenosStringUtils.isBlank(bookvalUndersecTxt.text)){
			                                            	bookvalUndersecTxt.text = data.underlineSecurityBookValue;
			                                            }else{
			                                            	if(bookvalUndersecTxt.text != data.underlineSecurityBookValue){
			                                            		bookvalUndersecTxt.text = data.underlineSecurityBookValue;
			                                            	}else {
				                                            	parentDocument.invalidateDisplayList();
				                                            }
			                                            }
			                                         }
			                                         
			                                         private function takeInput(event:Event):void {
			                                         	data.underlineSecurityBookValue = bookvalUndersecTxt.text;
			                                         }
			                                    ]]>
                                </mx:Script>
                                </mx:TextInput>
                                <mx:Image source="@Embed('../../assets/img/cax/icon_calculator.png')" toolTip="{this.parentApplication.xResourceManager.getKeyValue('cax.label.calbookvalue')}" buttonMode="true" click="outerDocument.calculateUnderSecBookVal(data);"/>
                                </mx:HBox> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn id="bookValAllotSecDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.bookval.allotedsec')}" visible="{bookValAllotSecVar}" dataField="allottedSecurityBookValue"  editable="true" rendererIsEditor="true" width="150">
                        <mx:itemRenderer>
                            <mx:Component>
                            <mx:HBox horizontalScrollPolicy="off">	                            		
                            <mx:TextInput id="bookvalAllotsecTxt" focusOut="outerDocument.formatBookVal(event)" width="100" change="takeInput(event);" textAlign="right">
                                <mx:Script>
                                    
                                    <![CDATA[
			                                         import com.nri.rui.core.utils.XenosStringUtils;
			                                         public override function set data(value:Object):void {
			                                            super.data = value;
			                                            if(XenosStringUtils.isBlank(bookvalAllotsecTxt.text)){
			                                            	bookvalAllotsecTxt.text = data.allottedSecurityBookValue;
			                                            }else{
			                                            	if(bookvalAllotsecTxt.text != data.allottedSecurityBookValue){
			                                            		bookvalAllotsecTxt.text = data.allottedSecurityBookValue;
			                                            	}else {
				                                            	parentDocument.invalidateDisplayList();
				                                            }
			                                            }
			                                         }
			                                         
			                                         private function takeInput(event:Event):void {
			                                         	data.allottedSecurityBookValue = bookvalAllotsecTxt.text;
			                                         }
			                                    ]]>
                                </mx:Script>
                                </mx:TextInput>
                                <mx:Image source="@Embed('../../assets/img/cax/icon_calculator.png')" toolTip="{this.parentApplication.xResourceManager.getKeyValue('cax.label.calbookvalue')}" buttonMode="true" click="outerDocument.calculateAllotSecBookVal(data);"/>
                                </mx:HBox> 
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    
                    
                    <mx:DataGridColumn id="paymentDtDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.paymentdate')}" dataField="paymentDateStr" visible="true" editable="true" rendererIsEditor="true" width="150">
                    <mx:itemRenderer>
                        <mx:Component>
							<mx:DateField textAlign="center" editable="true" formatString="YYYYMMDD" width="90" change="onDateChange()" valueCommit="onDateChange()" dataChange="onDateChange()">
							    <mx:Script>
							        <![CDATA[
							            import mx.events.FlexEvent;
							            private var _data:Object;
							            override public function set data(value:Object):void {
							                _data = value;
							                
							                try {
							                    text = value.paymentDateStr.toString();
							                    selectedDate = stringToDate(text, "YYYYMMDD");
							                    this.dispatchEvent(new FlexEvent(FlexEvent.DATA_CHANGE));
							                } catch(e:Error) {
							                    trace(e.message);
							                }
							            }
							                                                
							            override public function get data():Object {
							            	if(_data!=null) {
							            	    //_data.stlDateStr = text;
							            	}
							                return _data;
							            }
							            
							            private function onDateChange():void{
							                 if(_data!=null) {
                                                _data.paymentDateStr = text;
                                            }
							            }
							        ]]>
							    </mx:Script>
							</mx:DateField>
						</mx:Component>
						</mx:itemRenderer>                    
                        </mx:DataGridColumn>
                    <mx:DataGridColumn id="availDtDg" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.availabledate')}" dataField="availableDateStr" editable="true" visible="{availableDtVar}" rendererIsEditor="true" width="150">
                    <mx:itemRenderer>
                        <mx:Component>
							<mx:DateField textAlign="center" editable="true" formatString="YYYYMMDD" width="90" change="onDateChange()" valueCommit="onDateChange()" dataChange="onDateChange()">
							    <mx:Script>
							        <![CDATA[
							            import mx.events.FlexEvent;
							            private var _data:Object;
							            override public function set data(value:Object):void {
							                _data = value;
							                
							                try {
							                    text = value.availableDateStr.toString();
							                    selectedDate = stringToDate(text, "YYYYMMDD");
							                    this.dispatchEvent(new FlexEvent(FlexEvent.DATA_CHANGE));
							                } catch(e:Error) {
							                    trace(e.message);
							                }
							            }
							                                                
							            override public function get data():Object {
							            	if(_data!=null) {
							            	    //_data.stlDateStr = text;
							            	}
							                return _data;
							            }
							            
							            private function onDateChange():void{
							                 if(_data!=null) {
                                                _data.availableDateStr = text;
                                            }
							            }
							        ]]>
							    </mx:Script>
							</mx:DateField>
						</mx:Component>
						</mx:itemRenderer>                    
                        </mx:DataGridColumn>
                        <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.inconsistencyflag')}" dataField="inConsistencyFlagDisp" />
                        <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.finalizedflag')}" dataField="finalizedFlag" itemRenderer="com.nri.rui.cax.renderers.FinalizedFlagDropDownRenderer" editable="false" rendererIsEditor="true" visible="true" minWidth="120" resizable="false"/>
                </mx:columns>
             </mx:DataGrid>
             	
             <mx:HBox id="btnEntry">                
                <mx:Button id="submit" label="{this.parentApplication.xResourceManager.getKeyValue('cax.buttun.label.submit')}" styleName="BtnStyle" click="submitAmend();"/>
                <mx:Button id="reset" label="{this.parentApplication.xResourceManager.getKeyValue('cax.buttun.label.reset')}" styleName="BtnStyle" click="{this.dispatchEvent(new Event('amendEntryReset'))}"/>
             </mx:HBox>
        </mx:VBox>
                
        <mx:VBox id="confirm" width="100%" label="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.confirm.title')}">
            <mx:Label id="confirmHeader" text="{this.parentApplication.xResourceManager.getKeyValue('cax.uconf.label')}" fontWeight="bold" />         
            <cntrls:XenosErrors id="errPage2" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
            <cntrls:XenosErrors id="errPageConf" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
            <cntrls:XenosErrors id="errPageOk" width="100%" color="#FF0000" backgroundAlpha="0" borderStyle="none"/>
            <mx:HBox id="hb" styleName="ButtonBackPanel" verticalGap="0" horizontalGap="0" width="100%" height="32" visible="false" verticalAlign="middle" includeInLayout="false">
            <mx:Image source="@Embed('../../assets/themes/default/skin/alert_info.png')" width="28" height="28" verticalAlign="middle"/>
            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.transaction.completed.successfully')}" fontWeight="bold" selectable="true"/> 
            </mx:HBox>
             <mx:Grid width="100%">
                <mx:GridRow width="100%">
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.rightsconditionrefno')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{caEventRefNo}"/>
                        </mx:GridItem>  
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.eventtype')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{eventType}"/>
                        </mx:GridItem> 
                        </mx:GridRow>
                    <mx:GridRow width="100%">                                              
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.label.securityCode')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{secCode}" />
                        </mx:GridItem>
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.allotedseccode')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{allotSecCode}" />
                        </mx:GridItem>
                    </mx:GridRow>
                    <mx:GridRow width="100%">
                    <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.exdate')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{exDate}" />
                        </mx:GridItem>         
                        <mx:GridItem width="20%" borderThickness="0">
                            <mx:Label text="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.paymentdate')}" fontWeight="bold" styleName="FormLabelHeading"/>
                        </mx:GridItem>
                        <mx:GridItem width="30%" borderThickness="0">
                            <mx:Label text="{paymentDate}" />
                        </mx:GridItem>
                    </mx:GridRow>
            </mx:Grid>
             
             <mx:DataGrid id="bulkAmendUserConf" width="100%" height="100%" dataProvider="{selectedSummaryResult}" sortableColumns="false" variableRowHeight="true" horizontalScrollPolicy="auto" >
                <mx:columns>
                	<mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.label.detailrefno')}" dataField="detailReferenceNo" showDataTips="true" width="100" itemRenderer="com.nri.rui.cax.renderers.RightsDetailViewRenderer"/>
                	<mx:DataGridColumn headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightscondition.label.lmoffice')}" dataField="lmOfficeId" showDataTips="true"/>
                    <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.fundcode')}" dataField="fundCode" showDataTips="true" itemRenderer="com.nri.rui.core.renderers.FundDetailsRenderer"/>
                    <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.label.fundAccount')}" dataField="fundAccountPk" labelFunction="getFundAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer"/>
                    <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.bankno')}" dataField="bankCode" itemRenderer="com.nri.rui.core.renderers.FinancialInstitutionDetailsRenderer"/>
                    <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.label.bankAccount')}" dataField="bankAccountPk" labelFunction="getBankAccountNo" itemRenderer="com.nri.rui.core.renderers.AdvAccountDetailsRenderer"/>
                    <mx:DataGridColumn visible="{allotSecVar}" textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.allotedseccode')}" dataField="allottedInstrument" />
                    <mx:DataGridColumn visible="{secBalVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.securitybalance')}" dataField="securityBalance" />
                    <mx:DataGridColumn visible="{allotQntyVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.allotedqnty')}" dataField="allottedQuantity" />
                    <mx:DataGridColumn visible="{fracShareVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.fracshare')}" dataField="fractionalShare" />
                    <mx:DataGridColumn visible="{grosAmntVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.grossamount')}" dataField="grossAmount" />
                    <mx:DataGridColumn visible="{taxAmntVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.taxamount')}" dataField="taxAmount" />
                    <mx:DataGridColumn visible="{netAmntVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.netamount')}" dataField="netAmount" />
                    <mx:DataGridColumn visible="{currentBookValVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.currentbookvalue')}" dataField="currentBookValue" />
                    <mx:DataGridColumn visible="{priceUnderSecVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.exdateprice.underlyngsec')}" dataField="underlineSecurityPrice" />
                    <mx:DataGridColumn visible="{priceAllotSecVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.exdateprice.allotedsec')}" dataField="allottedSecurityPrice" />
                    <mx:DataGridColumn visible="{bookValUnderSecVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.bookval.underlyngsec')}" dataField="underlineSecurityBookValue" />
                    <mx:DataGridColumn visible="{bookValAllotSecVar}" textAlign="right" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.bookval.allotedsec')}" dataField="allottedSecurityBookValue" />
                    <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.paymentdate')}" dataField="paymentDateStr" />
                    <mx:DataGridColumn visible="{availableDtVar}" textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.entitlement.bulkamend.availabledate')}" dataField="availableDateStr" showDataTips="true"/>
                    <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.inconsistencyflag')}" dataField="inConsistencyFlagDisp" />
                    <mx:DataGridColumn textAlign="center" headerText="{this.parentApplication.xResourceManager.getKeyValue('cax.rightsdetail.label.finalizedflag')}" dataField="finalizedFlagDisp" />
                </mx:columns>
             </mx:DataGrid>
            <mx:HBox width="100%" styleName="ButtonBackPanel" > 
                <mx:Button id="back" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.back')}" styleName="BtnStyle" click="doBack();" visible="true" includeInLayout="true"/>
                <mx:Button id="ok" label="{this.parentApplication.xResourceManager.getKeyValue('cax.form.button.label.confirm')}" styleName="BtnStyle"  click="{this.dispatchEvent(new Event('amendEntryConf'))}" visible="true" includeInLayout="true"/>
                <mx:Button id="sysconfBtn" label="{this.parentApplication.xResourceManager.getKeyValue('inf.form.button.label.ok')}" styleName="BtnStyle"  click="this.initialState();" visible="false" includeInLayout="false"/>          
                                     
            </mx:HBox>
        </mx:VBox>
     </mx:ViewStack>                     
        
    </mx:Canvas>
</containers:XenosEntryModule>